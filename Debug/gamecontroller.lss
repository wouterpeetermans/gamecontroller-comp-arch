
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ef2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00802000  00000ef2  00000f86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080201a  0080201a  00000fa0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fa0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ffc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  0000103c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c06  00000000  00000000  000011e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000082a  00000000  00000000  00002dea  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001a1f  00000000  00000000  00003614  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000046c  00000000  00000000  00005034  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011ead  00000000  00000000  000054a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007bd  00000000  00000000  0001734d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00017b0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000597a  00000000  00000000  00017c22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 33 01 	jmp	0x266	; 0x266 <__vector_2>
   c:	0c 94 6b 01 	jmp	0x2d6	; 0x2d6 <__vector_3>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	e2 ef       	ldi	r30, 0xF2	; 242
 180:	fe e0       	ldi	r31, 0x0E	; 14
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	aa 31       	cpi	r26, 0x1A	; 26
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	aa e1       	ldi	r26, 0x1A	; 26
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	a3 32       	cpi	r26, 0x23	; 35
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 09 02 	call	0x412	; 0x412 <main>
 1a2:	0c 94 77 07 	jmp	0xeee	; 0xeee <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62
 1b2:	00 00       	nop
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <AnalogInit>:
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62
 1c2:	80 e0       	ldi	r24, 0x00	; 0
 1c4:	92 e0       	ldi	r25, 0x02	; 2
 1c6:	27 e0       	ldi	r18, 0x07	; 7
 1c8:	fc 01       	movw	r30, r24
 1ca:	20 83       	st	Z, r18
 1cc:	00 00       	nop
 1ce:	df 91       	pop	r29
 1d0:	cf 91       	pop	r28
 1d2:	08 95       	ret

000001d4 <ClockInit>:
 1d4:	8b ec       	ldi	r24, 0xCB	; 203
 1d6:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
 1da:	88 e0       	ldi	r24, 0x08	; 8
 1dc:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 1e0:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 1e4:	83 ff       	sbrs	r24, 3
 1e6:	fc cf       	rjmp	.-8      	; 0x1e0 <ClockInit+0xc>
 1e8:	88 ed       	ldi	r24, 0xD8	; 216
 1ea:	84 bf       	out	0x34, r24	; 52
 1ec:	83 e0       	ldi	r24, 0x03	; 3
 1ee:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 1f2:	08 95       	ret

000001f4 <EncoderInit>:
#include "encoder.h"
volatile int encoderPos = 0;
volatile uint8_t prevpos;

void EncoderInit(void)
{
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
	PORTC.DIR = (PORTC.DIR & 0b11001111);
 1fc:	80 e4       	ldi	r24, 0x40	; 64
 1fe:	96 e0       	ldi	r25, 0x06	; 6
 200:	20 e4       	ldi	r18, 0x40	; 64
 202:	36 e0       	ldi	r19, 0x06	; 6
 204:	f9 01       	movw	r30, r18
 206:	20 81       	ld	r18, Z
 208:	2f 7c       	andi	r18, 0xCF	; 207
 20a:	fc 01       	movw	r30, r24
 20c:	20 83       	st	Z, r18
	PORTC.INTCTRL = 0b00001111;
 20e:	80 e4       	ldi	r24, 0x40	; 64
 210:	96 e0       	ldi	r25, 0x06	; 6
 212:	2f e0       	ldi	r18, 0x0F	; 15
 214:	fc 01       	movw	r30, r24
 216:	21 87       	std	Z+9, r18	; 0x09
	PORTC.INT0MASK = 0b00010000;
 218:	80 e4       	ldi	r24, 0x40	; 64
 21a:	96 e0       	ldi	r25, 0x06	; 6
 21c:	20 e1       	ldi	r18, 0x10	; 16
 21e:	fc 01       	movw	r30, r24
 220:	22 87       	std	Z+10, r18	; 0x0a
	PORTC.INT1MASK = 0b00001000;
 222:	80 e4       	ldi	r24, 0x40	; 64
 224:	96 e0       	ldi	r25, 0x06	; 6
 226:	28 e0       	ldi	r18, 0x08	; 8
 228:	fc 01       	movw	r30, r24
 22a:	23 87       	std	Z+11, r18	; 0x0b
	SREG = (SREG | 0b10000000);
 22c:	8f e3       	ldi	r24, 0x3F	; 63
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	2f e3       	ldi	r18, 0x3F	; 63
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	f9 01       	movw	r30, r18
 236:	20 81       	ld	r18, Z
 238:	20 68       	ori	r18, 0x80	; 128
 23a:	fc 01       	movw	r30, r24
 23c:	20 83       	st	Z, r18
	PMIC.CTRL = 0b00000100;
 23e:	80 ea       	ldi	r24, 0xA0	; 160
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	24 e0       	ldi	r18, 0x04	; 4
 244:	fc 01       	movw	r30, r24
 246:	22 83       	std	Z+2, r18	; 0x02
	
	
	
}
 248:	00 00       	nop
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <EncoderGetPos>:
int EncoderGetPos(void)
{
 250:	cf 93       	push	r28
 252:	df 93       	push	r29
 254:	cd b7       	in	r28, 0x3d	; 61
 256:	de b7       	in	r29, 0x3e	; 62
	return encoderPos;
 258:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end>
 25c:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x1>
}
 260:	df 91       	pop	r29
 262:	cf 91       	pop	r28
 264:	08 95       	ret

00000266 <__vector_2>:

ISR(PORTC_INT0_vect){
 266:	1f 92       	push	r1
 268:	0f 92       	push	r0
 26a:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	2f 93       	push	r18
 274:	3f 93       	push	r19
 276:	4f 93       	push	r20
 278:	5f 93       	push	r21
 27a:	6f 93       	push	r22
 27c:	7f 93       	push	r23
 27e:	8f 93       	push	r24
 280:	9f 93       	push	r25
 282:	af 93       	push	r26
 284:	bf 93       	push	r27
 286:	ef 93       	push	r30
 288:	ff 93       	push	r31
 28a:	cf 93       	push	r28
 28c:	df 93       	push	r29
 28e:	cd b7       	in	r28, 0x3d	; 61
 290:	de b7       	in	r29, 0x3e	; 62
	encoderPos += readEncoder();
 292:	0e 94 a3 01 	call	0x346	; 0x346 <readEncoder>
 296:	9c 01       	movw	r18, r24
 298:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end>
 29c:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x1>
 2a0:	82 0f       	add	r24, r18
 2a2:	93 1f       	adc	r25, r19
 2a4:	80 93 1a 20 	sts	0x201A, r24	; 0x80201a <__data_end>
 2a8:	90 93 1b 20 	sts	0x201B, r25	; 0x80201b <__data_end+0x1>
}
 2ac:	00 00       	nop
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	ff 91       	pop	r31
 2b4:	ef 91       	pop	r30
 2b6:	bf 91       	pop	r27
 2b8:	af 91       	pop	r26
 2ba:	9f 91       	pop	r25
 2bc:	8f 91       	pop	r24
 2be:	7f 91       	pop	r23
 2c0:	6f 91       	pop	r22
 2c2:	5f 91       	pop	r21
 2c4:	4f 91       	pop	r20
 2c6:	3f 91       	pop	r19
 2c8:	2f 91       	pop	r18
 2ca:	0f 90       	pop	r0
 2cc:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 2d0:	0f 90       	pop	r0
 2d2:	1f 90       	pop	r1
 2d4:	18 95       	reti

000002d6 <__vector_3>:

ISR(PORTC_INT1_vect){
 2d6:	1f 92       	push	r1
 2d8:	0f 92       	push	r0
 2da:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 2de:	0f 92       	push	r0
 2e0:	11 24       	eor	r1, r1
 2e2:	2f 93       	push	r18
 2e4:	3f 93       	push	r19
 2e6:	4f 93       	push	r20
 2e8:	5f 93       	push	r21
 2ea:	6f 93       	push	r22
 2ec:	7f 93       	push	r23
 2ee:	8f 93       	push	r24
 2f0:	9f 93       	push	r25
 2f2:	af 93       	push	r26
 2f4:	bf 93       	push	r27
 2f6:	ef 93       	push	r30
 2f8:	ff 93       	push	r31
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
	encoderPos += readEncoder();
 302:	0e 94 a3 01 	call	0x346	; 0x346 <readEncoder>
 306:	9c 01       	movw	r18, r24
 308:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end>
 30c:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x1>
 310:	82 0f       	add	r24, r18
 312:	93 1f       	adc	r25, r19
 314:	80 93 1a 20 	sts	0x201A, r24	; 0x80201a <__data_end>
 318:	90 93 1b 20 	sts	0x201B, r25	; 0x80201b <__data_end+0x1>
}
 31c:	00 00       	nop
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	ff 91       	pop	r31
 324:	ef 91       	pop	r30
 326:	bf 91       	pop	r27
 328:	af 91       	pop	r26
 32a:	9f 91       	pop	r25
 32c:	8f 91       	pop	r24
 32e:	7f 91       	pop	r23
 330:	6f 91       	pop	r22
 332:	5f 91       	pop	r21
 334:	4f 91       	pop	r20
 336:	3f 91       	pop	r19
 338:	2f 91       	pop	r18
 33a:	0f 90       	pop	r0
 33c:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 340:	0f 90       	pop	r0
 342:	1f 90       	pop	r1
 344:	18 95       	reti

00000346 <readEncoder>:

int readEncoder(){
 346:	cf 93       	push	r28
 348:	df 93       	push	r29
 34a:	1f 92       	push	r1
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62
	uint8_t currentPos = (PORTC.IN >> 3) & 0b00000011;
 350:	80 e4       	ldi	r24, 0x40	; 64
 352:	96 e0       	ldi	r25, 0x06	; 6
 354:	fc 01       	movw	r30, r24
 356:	80 85       	ldd	r24, Z+8	; 0x08
 358:	86 95       	lsr	r24
 35a:	86 95       	lsr	r24
 35c:	86 95       	lsr	r24
 35e:	83 70       	andi	r24, 0x03	; 3
 360:	89 83       	std	Y+1, r24	; 0x01
	switch (currentPos) {
 362:	89 81       	ldd	r24, Y+1	; 0x01
 364:	88 2f       	mov	r24, r24
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	81 30       	cpi	r24, 0x01	; 1
 36a:	91 05       	cpc	r25, r1
 36c:	d1 f0       	breq	.+52     	; 0x3a2 <readEncoder+0x5c>
 36e:	82 30       	cpi	r24, 0x02	; 2
 370:	91 05       	cpc	r25, r1
 372:	1c f4       	brge	.+6      	; 0x37a <readEncoder+0x34>
 374:	89 2b       	or	r24, r25
 376:	39 f0       	breq	.+14     	; 0x386 <readEncoder+0x40>
 378:	3e c0       	rjmp	.+124    	; 0x3f6 <readEncoder+0xb0>
 37a:	82 30       	cpi	r24, 0x02	; 2
 37c:	91 05       	cpc	r25, r1
 37e:	f9 f0       	breq	.+62     	; 0x3be <readEncoder+0x78>
 380:	03 97       	sbiw	r24, 0x03	; 3
 382:	59 f1       	breq	.+86     	; 0x3da <readEncoder+0x94>
 384:	38 c0       	rjmp	.+112    	; 0x3f6 <readEncoder+0xb0>
		case 0:
			if (prevpos == 3){
 386:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 38a:	83 30       	cpi	r24, 0x03	; 3
 38c:	19 f4       	brne	.+6      	; 0x394 <readEncoder+0x4e>
				return 1;
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	3b c0       	rjmp	.+118    	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			} else if (prevpos == 1){
 394:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 398:	81 30       	cpi	r24, 0x01	; 1
 39a:	81 f5       	brne	.+96     	; 0x3fc <readEncoder+0xb6>
				return -1;
 39c:	8f ef       	ldi	r24, 0xFF	; 255
 39e:	9f ef       	ldi	r25, 0xFF	; 255
 3a0:	34 c0       	rjmp	.+104    	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			}
			break;
		case 1:
			if (prevpos == 0){
 3a2:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 3a6:	88 23       	and	r24, r24
 3a8:	19 f4       	brne	.+6      	; 0x3b0 <readEncoder+0x6a>
				return 1;
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	2d c0       	rjmp	.+90     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
				} else if (prevpos == 2){
 3b0:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 3b4:	82 30       	cpi	r24, 0x02	; 2
 3b6:	21 f5       	brne	.+72     	; 0x400 <__FUSE_REGION_LENGTH__>
				return -1;
 3b8:	8f ef       	ldi	r24, 0xFF	; 255
 3ba:	9f ef       	ldi	r25, 0xFF	; 255
 3bc:	26 c0       	rjmp	.+76     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			}
			break;
		case 2:
			if (prevpos == 1){
 3be:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 3c2:	81 30       	cpi	r24, 0x01	; 1
 3c4:	19 f4       	brne	.+6      	; 0x3cc <readEncoder+0x86>
				return 1;
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	1f c0       	rjmp	.+62     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
				} else if (prevpos == 3){
 3cc:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 3d0:	83 30       	cpi	r24, 0x03	; 3
 3d2:	c1 f4       	brne	.+48     	; 0x404 <__FUSE_REGION_LENGTH__+0x4>
				return -1;
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	9f ef       	ldi	r25, 0xFF	; 255
 3d8:	18 c0       	rjmp	.+48     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			}
			break;
		case 3:
			if (prevpos == 2){
 3da:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 3de:	82 30       	cpi	r24, 0x02	; 2
 3e0:	19 f4       	brne	.+6      	; 0x3e8 <readEncoder+0xa2>
				return 1;
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	11 c0       	rjmp	.+34     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
				} else if (prevpos == 0){
 3e8:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 3ec:	88 23       	and	r24, r24
 3ee:	61 f4       	brne	.+24     	; 0x408 <__FUSE_REGION_LENGTH__+0x8>
				return -1;
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	9f ef       	ldi	r25, 0xFF	; 255
 3f4:	0a c0       	rjmp	.+20     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			}
			break;
		default:
			return 0;
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	07 c0       	rjmp	.+14     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			if (prevpos == 3){
				return 1;
			} else if (prevpos == 1){
				return -1;
			}
			break;
 3fc:	00 00       	nop
 3fe:	05 c0       	rjmp	.+10     	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			if (prevpos == 0){
				return 1;
				} else if (prevpos == 2){
				return -1;
			}
			break;
 400:	00 00       	nop
 402:	03 c0       	rjmp	.+6      	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			if (prevpos == 1){
				return 1;
				} else if (prevpos == 3){
				return -1;
			}
			break;
 404:	00 00       	nop
 406:	01 c0       	rjmp	.+2      	; 0x40a <__FUSE_REGION_LENGTH__+0xa>
			if (prevpos == 2){
				return 1;
				} else if (prevpos == 0){
				return -1;
			}
			break;
 408:	00 00       	nop
		default:
			return 0;
	}
}
 40a:	0f 90       	pop	r0
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <main>:
char a;

void SimpleFunction(void);	//A simple function: print a counter (0 to 9) to the terminal

int main(void)
{	
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	cd b7       	in	r28, 0x3d	; 61
 418:	de b7       	in	r29, 0x3e	; 62
 41a:	2e 97       	sbiw	r28, 0x0e	; 14
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	de bf       	out	0x3e, r29	; 62
	//###1###
	 
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 420:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 424:	0e 94 0f 03 	call	0x61e	; 0x61e <USARTInit>
	AnalogInit();			//Initialize ADC
 428:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AnalogInit>
	AccInit();				//Initialize accelerometer system
 42c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
	LEDInit();				//Initialize LEDs
 430:	0e 94 c0 02 	call	0x580	; 0x580 <LEDInit>
	SwitchInit();			//Initialize switches
 434:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <SwitchInit>
	EncoderInit();			//Initialize encoder
 438:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 43c:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <SpeakerInit>
	
	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 440:	80 ea       	ldi	r24, 0xA0	; 160
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	20 ea       	ldi	r18, 0xA0	; 160
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	f9 01       	movw	r30, r18
 44a:	22 81       	ldd	r18, Z+2	; 0x02
 44c:	27 60       	ori	r18, 0x07	; 7
 44e:	fc 01       	movw	r30, r24
 450:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Global interrupt enable
 452:	8f e3       	ldi	r24, 0x3F	; 63
 454:	90 e0       	ldi	r25, 0x00	; 0
 456:	2f e3       	ldi	r18, 0x3F	; 63
 458:	30 e0       	ldi	r19, 0x00	; 0
 45a:	f9 01       	movw	r30, r18
 45c:	20 81       	ld	r18, Z
 45e:	20 68       	ori	r18, 0x80	; 128
 460:	fc 01       	movw	r30, r24
 462:	20 83       	st	Z, r18
 464:	80 e0       	ldi	r24, 0x00	; 0
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	aa ef       	ldi	r26, 0xFA	; 250
 46a:	b3 e4       	ldi	r27, 0x43	; 67
 46c:	89 83       	std	Y+1, r24	; 0x01
 46e:	9a 83       	std	Y+2, r25	; 0x02
 470:	ab 83       	std	Y+3, r26	; 0x03
 472:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 474:	20 e0       	ldi	r18, 0x00	; 0
 476:	30 e0       	ldi	r19, 0x00	; 0
 478:	4a e7       	ldi	r20, 0x7A	; 122
 47a:	55 e4       	ldi	r21, 0x45	; 69
 47c:	69 81       	ldd	r22, Y+1	; 0x01
 47e:	7a 81       	ldd	r23, Y+2	; 0x02
 480:	8b 81       	ldd	r24, Y+3	; 0x03
 482:	9c 81       	ldd	r25, Y+4	; 0x04
 484:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
 488:	dc 01       	movw	r26, r24
 48a:	cb 01       	movw	r24, r22
 48c:	8d 83       	std	Y+5, r24	; 0x05
 48e:	9e 83       	std	Y+6, r25	; 0x06
 490:	af 83       	std	Y+7, r26	; 0x07
 492:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 494:	20 e0       	ldi	r18, 0x00	; 0
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	40 e8       	ldi	r20, 0x80	; 128
 49a:	5f e3       	ldi	r21, 0x3F	; 63
 49c:	6d 81       	ldd	r22, Y+5	; 0x05
 49e:	7e 81       	ldd	r23, Y+6	; 0x06
 4a0:	8f 81       	ldd	r24, Y+7	; 0x07
 4a2:	98 85       	ldd	r25, Y+8	; 0x08
 4a4:	0e 94 84 03 	call	0x708	; 0x708 <__cmpsf2>
 4a8:	88 23       	and	r24, r24
 4aa:	2c f4       	brge	.+10     	; 0x4b6 <main+0xa4>
		__ticks = 1;
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	89 87       	std	Y+9, r24	; 0x09
 4b2:	9a 87       	std	Y+10, r25	; 0x0a
 4b4:	3f c0       	rjmp	.+126    	; 0x534 <main+0x122>
	else if (__tmp > 65535)
 4b6:	20 e0       	ldi	r18, 0x00	; 0
 4b8:	3f ef       	ldi	r19, 0xFF	; 255
 4ba:	4f e7       	ldi	r20, 0x7F	; 127
 4bc:	57 e4       	ldi	r21, 0x47	; 71
 4be:	6d 81       	ldd	r22, Y+5	; 0x05
 4c0:	7e 81       	ldd	r23, Y+6	; 0x06
 4c2:	8f 81       	ldd	r24, Y+7	; 0x07
 4c4:	98 85       	ldd	r25, Y+8	; 0x08
 4c6:	0e 94 05 04 	call	0x80a	; 0x80a <__gesf2>
 4ca:	18 16       	cp	r1, r24
 4cc:	4c f5       	brge	.+82     	; 0x520 <main+0x10e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4ce:	20 e0       	ldi	r18, 0x00	; 0
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	40 e2       	ldi	r20, 0x20	; 32
 4d4:	51 e4       	ldi	r21, 0x41	; 65
 4d6:	69 81       	ldd	r22, Y+1	; 0x01
 4d8:	7a 81       	ldd	r23, Y+2	; 0x02
 4da:	8b 81       	ldd	r24, Y+3	; 0x03
 4dc:	9c 81       	ldd	r25, Y+4	; 0x04
 4de:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
 4e2:	dc 01       	movw	r26, r24
 4e4:	cb 01       	movw	r24, r22
 4e6:	bc 01       	movw	r22, r24
 4e8:	cd 01       	movw	r24, r26
 4ea:	0e 94 89 03 	call	0x712	; 0x712 <__fixunssfsi>
 4ee:	dc 01       	movw	r26, r24
 4f0:	cb 01       	movw	r24, r22
 4f2:	89 87       	std	Y+9, r24	; 0x09
 4f4:	9a 87       	std	Y+10, r25	; 0x0a
 4f6:	0f c0       	rjmp	.+30     	; 0x516 <main+0x104>
 4f8:	80 e9       	ldi	r24, 0x90	; 144
 4fa:	91 e0       	ldi	r25, 0x01	; 1
 4fc:	8b 87       	std	Y+11, r24	; 0x0b
 4fe:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 500:	8b 85       	ldd	r24, Y+11	; 0x0b
 502:	9c 85       	ldd	r25, Y+12	; 0x0c
 504:	01 97       	sbiw	r24, 0x01	; 1
 506:	f1 f7       	brne	.-4      	; 0x504 <main+0xf2>
 508:	8b 87       	std	Y+11, r24	; 0x0b
 50a:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 50c:	89 85       	ldd	r24, Y+9	; 0x09
 50e:	9a 85       	ldd	r25, Y+10	; 0x0a
 510:	01 97       	sbiw	r24, 0x01	; 1
 512:	89 87       	std	Y+9, r24	; 0x09
 514:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 516:	89 85       	ldd	r24, Y+9	; 0x09
 518:	9a 85       	ldd	r25, Y+10	; 0x0a
 51a:	89 2b       	or	r24, r25
 51c:	69 f7       	brne	.-38     	; 0x4f8 <main+0xe6>
 51e:	14 c0       	rjmp	.+40     	; 0x548 <main+0x136>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 520:	6d 81       	ldd	r22, Y+5	; 0x05
 522:	7e 81       	ldd	r23, Y+6	; 0x06
 524:	8f 81       	ldd	r24, Y+7	; 0x07
 526:	98 85       	ldd	r25, Y+8	; 0x08
 528:	0e 94 89 03 	call	0x712	; 0x712 <__fixunssfsi>
 52c:	dc 01       	movw	r26, r24
 52e:	cb 01       	movw	r24, r22
 530:	89 87       	std	Y+9, r24	; 0x09
 532:	9a 87       	std	Y+10, r25	; 0x0a
 534:	89 85       	ldd	r24, Y+9	; 0x09
 536:	9a 85       	ldd	r25, Y+10	; 0x0a
 538:	8d 87       	std	Y+13, r24	; 0x0d
 53a:	9e 87       	std	Y+14, r25	; 0x0e
 53c:	8d 85       	ldd	r24, Y+13	; 0x0d
 53e:	9e 85       	ldd	r25, Y+14	; 0x0e
 540:	01 97       	sbiw	r24, 0x01	; 1
 542:	f1 f7       	brne	.-4      	; 0x540 <main+0x12e>
 544:	8d 87       	std	Y+13, r24	; 0x0d
 546:	9e 87       	std	Y+14, r25	; 0x0e
	
	
	
	while (1){
		// Start ADC conversion
		ADCA.CH0.CTRL |= 0x80;
 548:	80 e0       	ldi	r24, 0x00	; 0
 54a:	92 e0       	ldi	r25, 0x02	; 2
 54c:	20 e0       	ldi	r18, 0x00	; 0
 54e:	32 e0       	ldi	r19, 0x02	; 2
 550:	f9 01       	movw	r30, r18
 552:	20 a1       	ldd	r18, Z+32	; 0x20
 554:	20 68       	ori	r18, 0x80	; 128
 556:	fc 01       	movw	r30, r24
 558:	20 a3       	std	Z+32, r18	; 0x20
		printf("encoder: %d",EncoderGetPos());
 55a:	0e 94 28 01 	call	0x250	; 0x250 <EncoderGetPos>
 55e:	29 2f       	mov	r18, r25
 560:	2f 93       	push	r18
 562:	8f 93       	push	r24
 564:	8e e0       	ldi	r24, 0x0E	; 14
 566:	90 e2       	ldi	r25, 0x20	; 32
 568:	89 2f       	mov	r24, r25
 56a:	8f 93       	push	r24
 56c:	8e e0       	ldi	r24, 0x0E	; 14
 56e:	90 e2       	ldi	r25, 0x20	; 32
 570:	8f 93       	push	r24
 572:	0e 94 9f 04 	call	0x93e	; 0x93e <printf>
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	0f 90       	pop	r0
 57c:	0f 90       	pop	r0
		
		
		//putchar('U');
	}
 57e:	e4 cf       	rjmp	.-56     	; 0x548 <main+0x136>

00000580 <LEDInit>:
 580:	cf 93       	push	r28
 582:	df 93       	push	r29
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
 588:	80 e8       	ldi	r24, 0x80	; 128
 58a:	96 e0       	ldi	r25, 0x06	; 6
 58c:	2f e0       	ldi	r18, 0x0F	; 15
 58e:	fc 01       	movw	r30, r24
 590:	21 83       	std	Z+1, r18	; 0x01
 592:	80 e8       	ldi	r24, 0x80	; 128
 594:	96 e0       	ldi	r25, 0x06	; 6
 596:	20 e4       	ldi	r18, 0x40	; 64
 598:	fc 01       	movw	r30, r24
 59a:	20 8b       	std	Z+16, r18	; 0x10
 59c:	80 e8       	ldi	r24, 0x80	; 128
 59e:	96 e0       	ldi	r25, 0x06	; 6
 5a0:	20 e4       	ldi	r18, 0x40	; 64
 5a2:	fc 01       	movw	r30, r24
 5a4:	21 8b       	std	Z+17, r18	; 0x11
 5a6:	80 e8       	ldi	r24, 0x80	; 128
 5a8:	96 e0       	ldi	r25, 0x06	; 6
 5aa:	20 e4       	ldi	r18, 0x40	; 64
 5ac:	fc 01       	movw	r30, r24
 5ae:	22 8b       	std	Z+18, r18	; 0x12
 5b0:	80 e8       	ldi	r24, 0x80	; 128
 5b2:	96 e0       	ldi	r25, 0x06	; 6
 5b4:	20 e4       	ldi	r18, 0x40	; 64
 5b6:	fc 01       	movw	r30, r24
 5b8:	23 8b       	std	Z+19, r18	; 0x13
 5ba:	00 00       	nop
 5bc:	df 91       	pop	r29
 5be:	cf 91       	pop	r28
 5c0:	08 95       	ret

000005c2 <SpeakerInit>:
 5c2:	cf 93       	push	r28
 5c4:	df 93       	push	r29
 5c6:	cd b7       	in	r28, 0x3d	; 61
 5c8:	de b7       	in	r29, 0x3e	; 62
 5ca:	00 00       	nop
 5cc:	df 91       	pop	r29
 5ce:	cf 91       	pop	r28
 5d0:	08 95       	ret

000005d2 <SwitchInit>:
 5d2:	cf 93       	push	r28
 5d4:	df 93       	push	r29
 5d6:	cd b7       	in	r28, 0x3d	; 61
 5d8:	de b7       	in	r29, 0x3e	; 62
 5da:	80 e6       	ldi	r24, 0x60	; 96
 5dc:	96 e0       	ldi	r25, 0x06	; 6
 5de:	21 ef       	ldi	r18, 0xF1	; 241
 5e0:	fc 01       	movw	r30, r24
 5e2:	22 83       	std	Z+2, r18	; 0x02
 5e4:	80 e6       	ldi	r24, 0x60	; 96
 5e6:	96 e0       	ldi	r25, 0x06	; 6
 5e8:	28 e5       	ldi	r18, 0x58	; 88
 5ea:	fc 01       	movw	r30, r24
 5ec:	20 8b       	std	Z+16, r18	; 0x10
 5ee:	80 e6       	ldi	r24, 0x60	; 96
 5f0:	96 e0       	ldi	r25, 0x06	; 6
 5f2:	28 e5       	ldi	r18, 0x58	; 88
 5f4:	fc 01       	movw	r30, r24
 5f6:	24 8b       	std	Z+20, r18	; 0x14
 5f8:	80 e6       	ldi	r24, 0x60	; 96
 5fa:	96 e0       	ldi	r25, 0x06	; 6
 5fc:	28 e5       	ldi	r18, 0x58	; 88
 5fe:	fc 01       	movw	r30, r24
 600:	25 8b       	std	Z+21, r18	; 0x15
 602:	80 e6       	ldi	r24, 0x60	; 96
 604:	96 e0       	ldi	r25, 0x06	; 6
 606:	28 e5       	ldi	r18, 0x58	; 88
 608:	fc 01       	movw	r30, r24
 60a:	26 8b       	std	Z+22, r18	; 0x16
 60c:	80 e6       	ldi	r24, 0x60	; 96
 60e:	96 e0       	ldi	r25, 0x06	; 6
 610:	28 e5       	ldi	r18, 0x58	; 88
 612:	fc 01       	movw	r30, r24
 614:	27 8b       	std	Z+23, r18	; 0x17
 616:	00 00       	nop
 618:	df 91       	pop	r29
 61a:	cf 91       	pop	r28
 61c:	08 95       	ret

0000061e <USARTInit>:
 61e:	cf 93       	push	r28
 620:	df 93       	push	r29
 622:	cd b7       	in	r28, 0x3d	; 61
 624:	de b7       	in	r29, 0x3e	; 62
 626:	80 e4       	ldi	r24, 0x40	; 64
 628:	96 e0       	ldi	r25, 0x06	; 6
 62a:	28 e0       	ldi	r18, 0x08	; 8
 62c:	fc 01       	movw	r30, r24
 62e:	21 83       	std	Z+1, r18	; 0x01
 630:	80 e4       	ldi	r24, 0x40	; 64
 632:	96 e0       	ldi	r25, 0x06	; 6
 634:	24 e0       	ldi	r18, 0x04	; 4
 636:	fc 01       	movw	r30, r24
 638:	22 83       	std	Z+2, r18	; 0x02
 63a:	80 ea       	ldi	r24, 0xA0	; 160
 63c:	98 e0       	ldi	r25, 0x08	; 8
 63e:	fc 01       	movw	r30, r24
 640:	13 82       	std	Z+3, r1	; 0x03
 642:	80 ea       	ldi	r24, 0xA0	; 160
 644:	98 e0       	ldi	r25, 0x08	; 8
 646:	28 e1       	ldi	r18, 0x18	; 24
 648:	fc 01       	movw	r30, r24
 64a:	24 83       	std	Z+4, r18	; 0x04
 64c:	80 ea       	ldi	r24, 0xA0	; 160
 64e:	98 e0       	ldi	r25, 0x08	; 8
 650:	23 e0       	ldi	r18, 0x03	; 3
 652:	fc 01       	movw	r30, r24
 654:	25 83       	std	Z+5, r18	; 0x05
 656:	80 ea       	ldi	r24, 0xA0	; 160
 658:	98 e0       	ldi	r25, 0x08	; 8
 65a:	27 ed       	ldi	r18, 0xD7	; 215
 65c:	fc 01       	movw	r30, r24
 65e:	26 83       	std	Z+6, r18	; 0x06
 660:	80 ea       	ldi	r24, 0xA0	; 160
 662:	98 e0       	ldi	r25, 0x08	; 8
 664:	23 e9       	ldi	r18, 0x93	; 147
 666:	fc 01       	movw	r30, r24
 668:	27 83       	std	Z+7, r18	; 0x07
 66a:	80 e0       	ldi	r24, 0x00	; 0
 66c:	90 e2       	ldi	r25, 0x20	; 32
 66e:	80 93 1f 20 	sts	0x201F, r24	; 0x80201f <__iob+0x2>
 672:	90 93 20 20 	sts	0x2020, r25	; 0x802020 <__iob+0x3>
 676:	80 e0       	ldi	r24, 0x00	; 0
 678:	90 e2       	ldi	r25, 0x20	; 32
 67a:	80 93 1d 20 	sts	0x201D, r24	; 0x80201d <__iob>
 67e:	90 93 1e 20 	sts	0x201E, r25	; 0x80201e <__iob+0x1>
 682:	00 00       	nop
 684:	df 91       	pop	r29
 686:	cf 91       	pop	r28
 688:	08 95       	ret

0000068a <stdio_putchar>:
 68a:	cf 93       	push	r28
 68c:	df 93       	push	r29
 68e:	00 d0       	rcall	.+0      	; 0x690 <stdio_putchar+0x6>
 690:	1f 92       	push	r1
 692:	cd b7       	in	r28, 0x3d	; 61
 694:	de b7       	in	r29, 0x3e	; 62
 696:	89 83       	std	Y+1, r24	; 0x01
 698:	6a 83       	std	Y+2, r22	; 0x02
 69a:	7b 83       	std	Y+3, r23	; 0x03
 69c:	80 ea       	ldi	r24, 0xA0	; 160
 69e:	98 e0       	ldi	r25, 0x08	; 8
 6a0:	29 81       	ldd	r18, Y+1	; 0x01
 6a2:	fc 01       	movw	r30, r24
 6a4:	20 83       	st	Z, r18
 6a6:	00 00       	nop
 6a8:	80 ea       	ldi	r24, 0xA0	; 160
 6aa:	98 e0       	ldi	r25, 0x08	; 8
 6ac:	fc 01       	movw	r30, r24
 6ae:	81 81       	ldd	r24, Z+1	; 0x01
 6b0:	88 2f       	mov	r24, r24
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	80 74       	andi	r24, 0x40	; 64
 6b6:	99 27       	eor	r25, r25
 6b8:	89 2b       	or	r24, r25
 6ba:	b1 f3       	breq	.-20     	; 0x6a8 <stdio_putchar+0x1e>
 6bc:	80 ea       	ldi	r24, 0xA0	; 160
 6be:	98 e0       	ldi	r25, 0x08	; 8
 6c0:	20 e4       	ldi	r18, 0x40	; 64
 6c2:	fc 01       	movw	r30, r24
 6c4:	21 83       	std	Z+1, r18	; 0x01
 6c6:	80 e0       	ldi	r24, 0x00	; 0
 6c8:	90 e0       	ldi	r25, 0x00	; 0
 6ca:	23 96       	adiw	r28, 0x03	; 3
 6cc:	cd bf       	out	0x3d, r28	; 61
 6ce:	de bf       	out	0x3e, r29	; 62
 6d0:	df 91       	pop	r29
 6d2:	cf 91       	pop	r28
 6d4:	08 95       	ret

000006d6 <stdio_getchar>:
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	00 d0       	rcall	.+0      	; 0x6dc <stdio_getchar+0x6>
 6dc:	cd b7       	in	r28, 0x3d	; 61
 6de:	de b7       	in	r29, 0x3e	; 62
 6e0:	89 83       	std	Y+1, r24	; 0x01
 6e2:	9a 83       	std	Y+2, r25	; 0x02
 6e4:	00 00       	nop
 6e6:	80 ea       	ldi	r24, 0xA0	; 160
 6e8:	98 e0       	ldi	r25, 0x08	; 8
 6ea:	fc 01       	movw	r30, r24
 6ec:	81 81       	ldd	r24, Z+1	; 0x01
 6ee:	88 23       	and	r24, r24
 6f0:	d4 f7       	brge	.-12     	; 0x6e6 <stdio_getchar+0x10>
 6f2:	80 ea       	ldi	r24, 0xA0	; 160
 6f4:	98 e0       	ldi	r25, 0x08	; 8
 6f6:	fc 01       	movw	r30, r24
 6f8:	80 81       	ld	r24, Z
 6fa:	88 2f       	mov	r24, r24
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0f 90       	pop	r0
 700:	0f 90       	pop	r0
 702:	df 91       	pop	r29
 704:	cf 91       	pop	r28
 706:	08 95       	ret

00000708 <__cmpsf2>:
 708:	0e 94 b8 03 	call	0x770	; 0x770 <__fp_cmp>
 70c:	08 f4       	brcc	.+2      	; 0x710 <__cmpsf2+0x8>
 70e:	81 e0       	ldi	r24, 0x01	; 1
 710:	08 95       	ret

00000712 <__fixunssfsi>:
 712:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_splitA>
 716:	88 f0       	brcs	.+34     	; 0x73a <__fixunssfsi+0x28>
 718:	9f 57       	subi	r25, 0x7F	; 127
 71a:	98 f0       	brcs	.+38     	; 0x742 <__fixunssfsi+0x30>
 71c:	b9 2f       	mov	r27, r25
 71e:	99 27       	eor	r25, r25
 720:	b7 51       	subi	r27, 0x17	; 23
 722:	b0 f0       	brcs	.+44     	; 0x750 <__fixunssfsi+0x3e>
 724:	e1 f0       	breq	.+56     	; 0x75e <__fixunssfsi+0x4c>
 726:	66 0f       	add	r22, r22
 728:	77 1f       	adc	r23, r23
 72a:	88 1f       	adc	r24, r24
 72c:	99 1f       	adc	r25, r25
 72e:	1a f0       	brmi	.+6      	; 0x736 <__fixunssfsi+0x24>
 730:	ba 95       	dec	r27
 732:	c9 f7       	brne	.-14     	; 0x726 <__fixunssfsi+0x14>
 734:	14 c0       	rjmp	.+40     	; 0x75e <__fixunssfsi+0x4c>
 736:	b1 30       	cpi	r27, 0x01	; 1
 738:	91 f0       	breq	.+36     	; 0x75e <__fixunssfsi+0x4c>
 73a:	0e 94 fe 03 	call	0x7fc	; 0x7fc <__fp_zero>
 73e:	b1 e0       	ldi	r27, 0x01	; 1
 740:	08 95       	ret
 742:	0c 94 fe 03 	jmp	0x7fc	; 0x7fc <__fp_zero>
 746:	67 2f       	mov	r22, r23
 748:	78 2f       	mov	r23, r24
 74a:	88 27       	eor	r24, r24
 74c:	b8 5f       	subi	r27, 0xF8	; 248
 74e:	39 f0       	breq	.+14     	; 0x75e <__fixunssfsi+0x4c>
 750:	b9 3f       	cpi	r27, 0xF9	; 249
 752:	cc f3       	brlt	.-14     	; 0x746 <__fixunssfsi+0x34>
 754:	86 95       	lsr	r24
 756:	77 95       	ror	r23
 758:	67 95       	ror	r22
 75a:	b3 95       	inc	r27
 75c:	d9 f7       	brne	.-10     	; 0x754 <__fixunssfsi+0x42>
 75e:	3e f4       	brtc	.+14     	; 0x76e <__fixunssfsi+0x5c>
 760:	90 95       	com	r25
 762:	80 95       	com	r24
 764:	70 95       	com	r23
 766:	61 95       	neg	r22
 768:	7f 4f       	sbci	r23, 0xFF	; 255
 76a:	8f 4f       	sbci	r24, 0xFF	; 255
 76c:	9f 4f       	sbci	r25, 0xFF	; 255
 76e:	08 95       	ret

00000770 <__fp_cmp>:
 770:	99 0f       	add	r25, r25
 772:	00 08       	sbc	r0, r0
 774:	55 0f       	add	r21, r21
 776:	aa 0b       	sbc	r26, r26
 778:	e0 e8       	ldi	r30, 0x80	; 128
 77a:	fe ef       	ldi	r31, 0xFE	; 254
 77c:	16 16       	cp	r1, r22
 77e:	17 06       	cpc	r1, r23
 780:	e8 07       	cpc	r30, r24
 782:	f9 07       	cpc	r31, r25
 784:	c0 f0       	brcs	.+48     	; 0x7b6 <__fp_cmp+0x46>
 786:	12 16       	cp	r1, r18
 788:	13 06       	cpc	r1, r19
 78a:	e4 07       	cpc	r30, r20
 78c:	f5 07       	cpc	r31, r21
 78e:	98 f0       	brcs	.+38     	; 0x7b6 <__fp_cmp+0x46>
 790:	62 1b       	sub	r22, r18
 792:	73 0b       	sbc	r23, r19
 794:	84 0b       	sbc	r24, r20
 796:	95 0b       	sbc	r25, r21
 798:	39 f4       	brne	.+14     	; 0x7a8 <__fp_cmp+0x38>
 79a:	0a 26       	eor	r0, r26
 79c:	61 f0       	breq	.+24     	; 0x7b6 <__fp_cmp+0x46>
 79e:	23 2b       	or	r18, r19
 7a0:	24 2b       	or	r18, r20
 7a2:	25 2b       	or	r18, r21
 7a4:	21 f4       	brne	.+8      	; 0x7ae <__fp_cmp+0x3e>
 7a6:	08 95       	ret
 7a8:	0a 26       	eor	r0, r26
 7aa:	09 f4       	brne	.+2      	; 0x7ae <__fp_cmp+0x3e>
 7ac:	a1 40       	sbci	r26, 0x01	; 1
 7ae:	a6 95       	lsr	r26
 7b0:	8f ef       	ldi	r24, 0xFF	; 255
 7b2:	81 1d       	adc	r24, r1
 7b4:	81 1d       	adc	r24, r1
 7b6:	08 95       	ret

000007b8 <__fp_split3>:
 7b8:	57 fd       	sbrc	r21, 7
 7ba:	90 58       	subi	r25, 0x80	; 128
 7bc:	44 0f       	add	r20, r20
 7be:	55 1f       	adc	r21, r21
 7c0:	59 f0       	breq	.+22     	; 0x7d8 <__fp_splitA+0x10>
 7c2:	5f 3f       	cpi	r21, 0xFF	; 255
 7c4:	71 f0       	breq	.+28     	; 0x7e2 <__fp_splitA+0x1a>
 7c6:	47 95       	ror	r20

000007c8 <__fp_splitA>:
 7c8:	88 0f       	add	r24, r24
 7ca:	97 fb       	bst	r25, 7
 7cc:	99 1f       	adc	r25, r25
 7ce:	61 f0       	breq	.+24     	; 0x7e8 <__fp_splitA+0x20>
 7d0:	9f 3f       	cpi	r25, 0xFF	; 255
 7d2:	79 f0       	breq	.+30     	; 0x7f2 <__fp_splitA+0x2a>
 7d4:	87 95       	ror	r24
 7d6:	08 95       	ret
 7d8:	12 16       	cp	r1, r18
 7da:	13 06       	cpc	r1, r19
 7dc:	14 06       	cpc	r1, r20
 7de:	55 1f       	adc	r21, r21
 7e0:	f2 cf       	rjmp	.-28     	; 0x7c6 <__fp_split3+0xe>
 7e2:	46 95       	lsr	r20
 7e4:	f1 df       	rcall	.-30     	; 0x7c8 <__fp_splitA>
 7e6:	08 c0       	rjmp	.+16     	; 0x7f8 <__fp_splitA+0x30>
 7e8:	16 16       	cp	r1, r22
 7ea:	17 06       	cpc	r1, r23
 7ec:	18 06       	cpc	r1, r24
 7ee:	99 1f       	adc	r25, r25
 7f0:	f1 cf       	rjmp	.-30     	; 0x7d4 <__fp_splitA+0xc>
 7f2:	86 95       	lsr	r24
 7f4:	71 05       	cpc	r23, r1
 7f6:	61 05       	cpc	r22, r1
 7f8:	08 94       	sec
 7fa:	08 95       	ret

000007fc <__fp_zero>:
 7fc:	e8 94       	clt

000007fe <__fp_szero>:
 7fe:	bb 27       	eor	r27, r27
 800:	66 27       	eor	r22, r22
 802:	77 27       	eor	r23, r23
 804:	cb 01       	movw	r24, r22
 806:	97 f9       	bld	r25, 7
 808:	08 95       	ret

0000080a <__gesf2>:
 80a:	0e 94 b8 03 	call	0x770	; 0x770 <__fp_cmp>
 80e:	08 f4       	brcc	.+2      	; 0x812 <__gesf2+0x8>
 810:	8f ef       	ldi	r24, 0xFF	; 255
 812:	08 95       	ret

00000814 <__mulsf3>:
 814:	0e 94 1d 04 	call	0x83a	; 0x83a <__mulsf3x>
 818:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_round>
 81c:	0e 94 80 04 	call	0x900	; 0x900 <__fp_pscA>
 820:	38 f0       	brcs	.+14     	; 0x830 <__mulsf3+0x1c>
 822:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscB>
 826:	20 f0       	brcs	.+8      	; 0x830 <__mulsf3+0x1c>
 828:	95 23       	and	r25, r21
 82a:	11 f0       	breq	.+4      	; 0x830 <__mulsf3+0x1c>
 82c:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>
 830:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_nan>
 834:	11 24       	eor	r1, r1
 836:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__fp_szero>

0000083a <__mulsf3x>:
 83a:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__fp_split3>
 83e:	70 f3       	brcs	.-36     	; 0x81c <__mulsf3+0x8>

00000840 <__mulsf3_pse>:
 840:	95 9f       	mul	r25, r21
 842:	c1 f3       	breq	.-16     	; 0x834 <__mulsf3+0x20>
 844:	95 0f       	add	r25, r21
 846:	50 e0       	ldi	r21, 0x00	; 0
 848:	55 1f       	adc	r21, r21
 84a:	62 9f       	mul	r22, r18
 84c:	f0 01       	movw	r30, r0
 84e:	72 9f       	mul	r23, r18
 850:	bb 27       	eor	r27, r27
 852:	f0 0d       	add	r31, r0
 854:	b1 1d       	adc	r27, r1
 856:	63 9f       	mul	r22, r19
 858:	aa 27       	eor	r26, r26
 85a:	f0 0d       	add	r31, r0
 85c:	b1 1d       	adc	r27, r1
 85e:	aa 1f       	adc	r26, r26
 860:	64 9f       	mul	r22, r20
 862:	66 27       	eor	r22, r22
 864:	b0 0d       	add	r27, r0
 866:	a1 1d       	adc	r26, r1
 868:	66 1f       	adc	r22, r22
 86a:	82 9f       	mul	r24, r18
 86c:	22 27       	eor	r18, r18
 86e:	b0 0d       	add	r27, r0
 870:	a1 1d       	adc	r26, r1
 872:	62 1f       	adc	r22, r18
 874:	73 9f       	mul	r23, r19
 876:	b0 0d       	add	r27, r0
 878:	a1 1d       	adc	r26, r1
 87a:	62 1f       	adc	r22, r18
 87c:	83 9f       	mul	r24, r19
 87e:	a0 0d       	add	r26, r0
 880:	61 1d       	adc	r22, r1
 882:	22 1f       	adc	r18, r18
 884:	74 9f       	mul	r23, r20
 886:	33 27       	eor	r19, r19
 888:	a0 0d       	add	r26, r0
 88a:	61 1d       	adc	r22, r1
 88c:	23 1f       	adc	r18, r19
 88e:	84 9f       	mul	r24, r20
 890:	60 0d       	add	r22, r0
 892:	21 1d       	adc	r18, r1
 894:	82 2f       	mov	r24, r18
 896:	76 2f       	mov	r23, r22
 898:	6a 2f       	mov	r22, r26
 89a:	11 24       	eor	r1, r1
 89c:	9f 57       	subi	r25, 0x7F	; 127
 89e:	50 40       	sbci	r21, 0x00	; 0
 8a0:	9a f0       	brmi	.+38     	; 0x8c8 <__mulsf3_pse+0x88>
 8a2:	f1 f0       	breq	.+60     	; 0x8e0 <__mulsf3_pse+0xa0>
 8a4:	88 23       	and	r24, r24
 8a6:	4a f0       	brmi	.+18     	; 0x8ba <__mulsf3_pse+0x7a>
 8a8:	ee 0f       	add	r30, r30
 8aa:	ff 1f       	adc	r31, r31
 8ac:	bb 1f       	adc	r27, r27
 8ae:	66 1f       	adc	r22, r22
 8b0:	77 1f       	adc	r23, r23
 8b2:	88 1f       	adc	r24, r24
 8b4:	91 50       	subi	r25, 0x01	; 1
 8b6:	50 40       	sbci	r21, 0x00	; 0
 8b8:	a9 f7       	brne	.-22     	; 0x8a4 <__mulsf3_pse+0x64>
 8ba:	9e 3f       	cpi	r25, 0xFE	; 254
 8bc:	51 05       	cpc	r21, r1
 8be:	80 f0       	brcs	.+32     	; 0x8e0 <__mulsf3_pse+0xa0>
 8c0:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>
 8c4:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__fp_szero>
 8c8:	5f 3f       	cpi	r21, 0xFF	; 255
 8ca:	e4 f3       	brlt	.-8      	; 0x8c4 <__mulsf3_pse+0x84>
 8cc:	98 3e       	cpi	r25, 0xE8	; 232
 8ce:	d4 f3       	brlt	.-12     	; 0x8c4 <__mulsf3_pse+0x84>
 8d0:	86 95       	lsr	r24
 8d2:	77 95       	ror	r23
 8d4:	67 95       	ror	r22
 8d6:	b7 95       	ror	r27
 8d8:	f7 95       	ror	r31
 8da:	e7 95       	ror	r30
 8dc:	9f 5f       	subi	r25, 0xFF	; 255
 8de:	c1 f7       	brne	.-16     	; 0x8d0 <__mulsf3_pse+0x90>
 8e0:	fe 2b       	or	r31, r30
 8e2:	88 0f       	add	r24, r24
 8e4:	91 1d       	adc	r25, r1
 8e6:	96 95       	lsr	r25
 8e8:	87 95       	ror	r24
 8ea:	97 f9       	bld	r25, 7
 8ec:	08 95       	ret

000008ee <__fp_inf>:
 8ee:	97 f9       	bld	r25, 7
 8f0:	9f 67       	ori	r25, 0x7F	; 127
 8f2:	80 e8       	ldi	r24, 0x80	; 128
 8f4:	70 e0       	ldi	r23, 0x00	; 0
 8f6:	60 e0       	ldi	r22, 0x00	; 0
 8f8:	08 95       	ret

000008fa <__fp_nan>:
 8fa:	9f ef       	ldi	r25, 0xFF	; 255
 8fc:	80 ec       	ldi	r24, 0xC0	; 192
 8fe:	08 95       	ret

00000900 <__fp_pscA>:
 900:	00 24       	eor	r0, r0
 902:	0a 94       	dec	r0
 904:	16 16       	cp	r1, r22
 906:	17 06       	cpc	r1, r23
 908:	18 06       	cpc	r1, r24
 90a:	09 06       	cpc	r0, r25
 90c:	08 95       	ret

0000090e <__fp_pscB>:
 90e:	00 24       	eor	r0, r0
 910:	0a 94       	dec	r0
 912:	12 16       	cp	r1, r18
 914:	13 06       	cpc	r1, r19
 916:	14 06       	cpc	r1, r20
 918:	05 06       	cpc	r0, r21
 91a:	08 95       	ret

0000091c <__fp_round>:
 91c:	09 2e       	mov	r0, r25
 91e:	03 94       	inc	r0
 920:	00 0c       	add	r0, r0
 922:	11 f4       	brne	.+4      	; 0x928 <__fp_round+0xc>
 924:	88 23       	and	r24, r24
 926:	52 f0       	brmi	.+20     	; 0x93c <__fp_round+0x20>
 928:	bb 0f       	add	r27, r27
 92a:	40 f4       	brcc	.+16     	; 0x93c <__fp_round+0x20>
 92c:	bf 2b       	or	r27, r31
 92e:	11 f4       	brne	.+4      	; 0x934 <__fp_round+0x18>
 930:	60 ff       	sbrs	r22, 0
 932:	04 c0       	rjmp	.+8      	; 0x93c <__fp_round+0x20>
 934:	6f 5f       	subi	r22, 0xFF	; 255
 936:	7f 4f       	sbci	r23, 0xFF	; 255
 938:	8f 4f       	sbci	r24, 0xFF	; 255
 93a:	9f 4f       	sbci	r25, 0xFF	; 255
 93c:	08 95       	ret

0000093e <printf>:
 93e:	a0 e0       	ldi	r26, 0x00	; 0
 940:	b0 e0       	ldi	r27, 0x00	; 0
 942:	e5 ea       	ldi	r30, 0xA5	; 165
 944:	f4 e0       	ldi	r31, 0x04	; 4
 946:	0c 94 56 07 	jmp	0xeac	; 0xeac <__prologue_saves__+0x20>
 94a:	ae 01       	movw	r20, r28
 94c:	4b 5f       	subi	r20, 0xFB	; 251
 94e:	5f 4f       	sbci	r21, 0xFF	; 255
 950:	fa 01       	movw	r30, r20
 952:	61 91       	ld	r22, Z+
 954:	71 91       	ld	r23, Z+
 956:	af 01       	movw	r20, r30
 958:	80 91 1f 20 	lds	r24, 0x201F	; 0x80201f <__iob+0x2>
 95c:	90 91 20 20 	lds	r25, 0x2020	; 0x802020 <__iob+0x3>
 960:	0e 94 b5 04 	call	0x96a	; 0x96a <vfprintf>
 964:	e2 e0       	ldi	r30, 0x02	; 2
 966:	0c 94 6f 07 	jmp	0xede	; 0xede <__epilogue_restores__+0x20>

0000096a <vfprintf>:
 96a:	ab e0       	ldi	r26, 0x0B	; 11
 96c:	b0 e0       	ldi	r27, 0x00	; 0
 96e:	eb eb       	ldi	r30, 0xBB	; 187
 970:	f4 e0       	ldi	r31, 0x04	; 4
 972:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__prologue_saves__>
 976:	6c 01       	movw	r12, r24
 978:	7b 01       	movw	r14, r22
 97a:	8a 01       	movw	r16, r20
 97c:	fc 01       	movw	r30, r24
 97e:	16 82       	std	Z+6, r1	; 0x06
 980:	17 82       	std	Z+7, r1	; 0x07
 982:	83 81       	ldd	r24, Z+3	; 0x03
 984:	81 ff       	sbrs	r24, 1
 986:	cc c1       	rjmp	.+920    	; 0xd20 <vfprintf+0x3b6>
 988:	ce 01       	movw	r24, r28
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	3c 01       	movw	r6, r24
 98e:	f6 01       	movw	r30, r12
 990:	93 81       	ldd	r25, Z+3	; 0x03
 992:	f7 01       	movw	r30, r14
 994:	93 fd       	sbrc	r25, 3
 996:	85 91       	lpm	r24, Z+
 998:	93 ff       	sbrs	r25, 3
 99a:	81 91       	ld	r24, Z+
 99c:	7f 01       	movw	r14, r30
 99e:	88 23       	and	r24, r24
 9a0:	09 f4       	brne	.+2      	; 0x9a4 <vfprintf+0x3a>
 9a2:	ba c1       	rjmp	.+884    	; 0xd18 <vfprintf+0x3ae>
 9a4:	85 32       	cpi	r24, 0x25	; 37
 9a6:	39 f4       	brne	.+14     	; 0x9b6 <vfprintf+0x4c>
 9a8:	93 fd       	sbrc	r25, 3
 9aa:	85 91       	lpm	r24, Z+
 9ac:	93 ff       	sbrs	r25, 3
 9ae:	81 91       	ld	r24, Z+
 9b0:	7f 01       	movw	r14, r30
 9b2:	85 32       	cpi	r24, 0x25	; 37
 9b4:	29 f4       	brne	.+10     	; 0x9c0 <vfprintf+0x56>
 9b6:	b6 01       	movw	r22, r12
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 9be:	e7 cf       	rjmp	.-50     	; 0x98e <vfprintf+0x24>
 9c0:	91 2c       	mov	r9, r1
 9c2:	21 2c       	mov	r2, r1
 9c4:	31 2c       	mov	r3, r1
 9c6:	ff e1       	ldi	r31, 0x1F	; 31
 9c8:	f3 15       	cp	r31, r3
 9ca:	d8 f0       	brcs	.+54     	; 0xa02 <vfprintf+0x98>
 9cc:	8b 32       	cpi	r24, 0x2B	; 43
 9ce:	79 f0       	breq	.+30     	; 0x9ee <vfprintf+0x84>
 9d0:	38 f4       	brcc	.+14     	; 0x9e0 <vfprintf+0x76>
 9d2:	80 32       	cpi	r24, 0x20	; 32
 9d4:	79 f0       	breq	.+30     	; 0x9f4 <vfprintf+0x8a>
 9d6:	83 32       	cpi	r24, 0x23	; 35
 9d8:	a1 f4       	brne	.+40     	; 0xa02 <vfprintf+0x98>
 9da:	23 2d       	mov	r18, r3
 9dc:	20 61       	ori	r18, 0x10	; 16
 9de:	1d c0       	rjmp	.+58     	; 0xa1a <vfprintf+0xb0>
 9e0:	8d 32       	cpi	r24, 0x2D	; 45
 9e2:	61 f0       	breq	.+24     	; 0x9fc <vfprintf+0x92>
 9e4:	80 33       	cpi	r24, 0x30	; 48
 9e6:	69 f4       	brne	.+26     	; 0xa02 <vfprintf+0x98>
 9e8:	23 2d       	mov	r18, r3
 9ea:	21 60       	ori	r18, 0x01	; 1
 9ec:	16 c0       	rjmp	.+44     	; 0xa1a <vfprintf+0xb0>
 9ee:	83 2d       	mov	r24, r3
 9f0:	82 60       	ori	r24, 0x02	; 2
 9f2:	38 2e       	mov	r3, r24
 9f4:	e3 2d       	mov	r30, r3
 9f6:	e4 60       	ori	r30, 0x04	; 4
 9f8:	3e 2e       	mov	r3, r30
 9fa:	2a c0       	rjmp	.+84     	; 0xa50 <vfprintf+0xe6>
 9fc:	f3 2d       	mov	r31, r3
 9fe:	f8 60       	ori	r31, 0x08	; 8
 a00:	1d c0       	rjmp	.+58     	; 0xa3c <vfprintf+0xd2>
 a02:	37 fc       	sbrc	r3, 7
 a04:	2d c0       	rjmp	.+90     	; 0xa60 <vfprintf+0xf6>
 a06:	20 ed       	ldi	r18, 0xD0	; 208
 a08:	28 0f       	add	r18, r24
 a0a:	2a 30       	cpi	r18, 0x0A	; 10
 a0c:	40 f0       	brcs	.+16     	; 0xa1e <vfprintf+0xb4>
 a0e:	8e 32       	cpi	r24, 0x2E	; 46
 a10:	b9 f4       	brne	.+46     	; 0xa40 <vfprintf+0xd6>
 a12:	36 fc       	sbrc	r3, 6
 a14:	81 c1       	rjmp	.+770    	; 0xd18 <vfprintf+0x3ae>
 a16:	23 2d       	mov	r18, r3
 a18:	20 64       	ori	r18, 0x40	; 64
 a1a:	32 2e       	mov	r3, r18
 a1c:	19 c0       	rjmp	.+50     	; 0xa50 <vfprintf+0xe6>
 a1e:	36 fe       	sbrs	r3, 6
 a20:	06 c0       	rjmp	.+12     	; 0xa2e <vfprintf+0xc4>
 a22:	8a e0       	ldi	r24, 0x0A	; 10
 a24:	98 9e       	mul	r9, r24
 a26:	20 0d       	add	r18, r0
 a28:	11 24       	eor	r1, r1
 a2a:	92 2e       	mov	r9, r18
 a2c:	11 c0       	rjmp	.+34     	; 0xa50 <vfprintf+0xe6>
 a2e:	ea e0       	ldi	r30, 0x0A	; 10
 a30:	2e 9e       	mul	r2, r30
 a32:	20 0d       	add	r18, r0
 a34:	11 24       	eor	r1, r1
 a36:	22 2e       	mov	r2, r18
 a38:	f3 2d       	mov	r31, r3
 a3a:	f0 62       	ori	r31, 0x20	; 32
 a3c:	3f 2e       	mov	r3, r31
 a3e:	08 c0       	rjmp	.+16     	; 0xa50 <vfprintf+0xe6>
 a40:	8c 36       	cpi	r24, 0x6C	; 108
 a42:	21 f4       	brne	.+8      	; 0xa4c <vfprintf+0xe2>
 a44:	83 2d       	mov	r24, r3
 a46:	80 68       	ori	r24, 0x80	; 128
 a48:	38 2e       	mov	r3, r24
 a4a:	02 c0       	rjmp	.+4      	; 0xa50 <vfprintf+0xe6>
 a4c:	88 36       	cpi	r24, 0x68	; 104
 a4e:	41 f4       	brne	.+16     	; 0xa60 <vfprintf+0xf6>
 a50:	f7 01       	movw	r30, r14
 a52:	93 fd       	sbrc	r25, 3
 a54:	85 91       	lpm	r24, Z+
 a56:	93 ff       	sbrs	r25, 3
 a58:	81 91       	ld	r24, Z+
 a5a:	7f 01       	movw	r14, r30
 a5c:	81 11       	cpse	r24, r1
 a5e:	b3 cf       	rjmp	.-154    	; 0x9c6 <vfprintf+0x5c>
 a60:	98 2f       	mov	r25, r24
 a62:	9f 7d       	andi	r25, 0xDF	; 223
 a64:	95 54       	subi	r25, 0x45	; 69
 a66:	93 30       	cpi	r25, 0x03	; 3
 a68:	28 f4       	brcc	.+10     	; 0xa74 <vfprintf+0x10a>
 a6a:	0c 5f       	subi	r16, 0xFC	; 252
 a6c:	1f 4f       	sbci	r17, 0xFF	; 255
 a6e:	9f e3       	ldi	r25, 0x3F	; 63
 a70:	99 83       	std	Y+1, r25	; 0x01
 a72:	0d c0       	rjmp	.+26     	; 0xa8e <vfprintf+0x124>
 a74:	83 36       	cpi	r24, 0x63	; 99
 a76:	31 f0       	breq	.+12     	; 0xa84 <vfprintf+0x11a>
 a78:	83 37       	cpi	r24, 0x73	; 115
 a7a:	71 f0       	breq	.+28     	; 0xa98 <vfprintf+0x12e>
 a7c:	83 35       	cpi	r24, 0x53	; 83
 a7e:	09 f0       	breq	.+2      	; 0xa82 <vfprintf+0x118>
 a80:	59 c0       	rjmp	.+178    	; 0xb34 <vfprintf+0x1ca>
 a82:	21 c0       	rjmp	.+66     	; 0xac6 <vfprintf+0x15c>
 a84:	f8 01       	movw	r30, r16
 a86:	80 81       	ld	r24, Z
 a88:	89 83       	std	Y+1, r24	; 0x01
 a8a:	0e 5f       	subi	r16, 0xFE	; 254
 a8c:	1f 4f       	sbci	r17, 0xFF	; 255
 a8e:	88 24       	eor	r8, r8
 a90:	83 94       	inc	r8
 a92:	91 2c       	mov	r9, r1
 a94:	53 01       	movw	r10, r6
 a96:	13 c0       	rjmp	.+38     	; 0xabe <vfprintf+0x154>
 a98:	28 01       	movw	r4, r16
 a9a:	f2 e0       	ldi	r31, 0x02	; 2
 a9c:	4f 0e       	add	r4, r31
 a9e:	51 1c       	adc	r5, r1
 aa0:	f8 01       	movw	r30, r16
 aa2:	a0 80       	ld	r10, Z
 aa4:	b1 80       	ldd	r11, Z+1	; 0x01
 aa6:	36 fe       	sbrs	r3, 6
 aa8:	03 c0       	rjmp	.+6      	; 0xab0 <vfprintf+0x146>
 aaa:	69 2d       	mov	r22, r9
 aac:	70 e0       	ldi	r23, 0x00	; 0
 aae:	02 c0       	rjmp	.+4      	; 0xab4 <vfprintf+0x14a>
 ab0:	6f ef       	ldi	r22, 0xFF	; 255
 ab2:	7f ef       	ldi	r23, 0xFF	; 255
 ab4:	c5 01       	movw	r24, r10
 ab6:	0e 94 a1 06 	call	0xd42	; 0xd42 <strnlen>
 aba:	4c 01       	movw	r8, r24
 abc:	82 01       	movw	r16, r4
 abe:	f3 2d       	mov	r31, r3
 ac0:	ff 77       	andi	r31, 0x7F	; 127
 ac2:	3f 2e       	mov	r3, r31
 ac4:	16 c0       	rjmp	.+44     	; 0xaf2 <vfprintf+0x188>
 ac6:	28 01       	movw	r4, r16
 ac8:	22 e0       	ldi	r18, 0x02	; 2
 aca:	42 0e       	add	r4, r18
 acc:	51 1c       	adc	r5, r1
 ace:	f8 01       	movw	r30, r16
 ad0:	a0 80       	ld	r10, Z
 ad2:	b1 80       	ldd	r11, Z+1	; 0x01
 ad4:	36 fe       	sbrs	r3, 6
 ad6:	03 c0       	rjmp	.+6      	; 0xade <vfprintf+0x174>
 ad8:	69 2d       	mov	r22, r9
 ada:	70 e0       	ldi	r23, 0x00	; 0
 adc:	02 c0       	rjmp	.+4      	; 0xae2 <vfprintf+0x178>
 ade:	6f ef       	ldi	r22, 0xFF	; 255
 ae0:	7f ef       	ldi	r23, 0xFF	; 255
 ae2:	c5 01       	movw	r24, r10
 ae4:	0e 94 96 06 	call	0xd2c	; 0xd2c <strnlen_P>
 ae8:	4c 01       	movw	r8, r24
 aea:	f3 2d       	mov	r31, r3
 aec:	f0 68       	ori	r31, 0x80	; 128
 aee:	3f 2e       	mov	r3, r31
 af0:	82 01       	movw	r16, r4
 af2:	33 fc       	sbrc	r3, 3
 af4:	1b c0       	rjmp	.+54     	; 0xb2c <vfprintf+0x1c2>
 af6:	82 2d       	mov	r24, r2
 af8:	90 e0       	ldi	r25, 0x00	; 0
 afa:	88 16       	cp	r8, r24
 afc:	99 06       	cpc	r9, r25
 afe:	b0 f4       	brcc	.+44     	; 0xb2c <vfprintf+0x1c2>
 b00:	b6 01       	movw	r22, r12
 b02:	80 e2       	ldi	r24, 0x20	; 32
 b04:	90 e0       	ldi	r25, 0x00	; 0
 b06:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 b0a:	2a 94       	dec	r2
 b0c:	f4 cf       	rjmp	.-24     	; 0xaf6 <vfprintf+0x18c>
 b0e:	f5 01       	movw	r30, r10
 b10:	37 fc       	sbrc	r3, 7
 b12:	85 91       	lpm	r24, Z+
 b14:	37 fe       	sbrs	r3, 7
 b16:	81 91       	ld	r24, Z+
 b18:	5f 01       	movw	r10, r30
 b1a:	b6 01       	movw	r22, r12
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 b22:	21 10       	cpse	r2, r1
 b24:	2a 94       	dec	r2
 b26:	21 e0       	ldi	r18, 0x01	; 1
 b28:	82 1a       	sub	r8, r18
 b2a:	91 08       	sbc	r9, r1
 b2c:	81 14       	cp	r8, r1
 b2e:	91 04       	cpc	r9, r1
 b30:	71 f7       	brne	.-36     	; 0xb0e <vfprintf+0x1a4>
 b32:	e8 c0       	rjmp	.+464    	; 0xd04 <vfprintf+0x39a>
 b34:	84 36       	cpi	r24, 0x64	; 100
 b36:	11 f0       	breq	.+4      	; 0xb3c <vfprintf+0x1d2>
 b38:	89 36       	cpi	r24, 0x69	; 105
 b3a:	41 f5       	brne	.+80     	; 0xb8c <vfprintf+0x222>
 b3c:	f8 01       	movw	r30, r16
 b3e:	37 fe       	sbrs	r3, 7
 b40:	07 c0       	rjmp	.+14     	; 0xb50 <vfprintf+0x1e6>
 b42:	60 81       	ld	r22, Z
 b44:	71 81       	ldd	r23, Z+1	; 0x01
 b46:	82 81       	ldd	r24, Z+2	; 0x02
 b48:	93 81       	ldd	r25, Z+3	; 0x03
 b4a:	0c 5f       	subi	r16, 0xFC	; 252
 b4c:	1f 4f       	sbci	r17, 0xFF	; 255
 b4e:	08 c0       	rjmp	.+16     	; 0xb60 <vfprintf+0x1f6>
 b50:	60 81       	ld	r22, Z
 b52:	71 81       	ldd	r23, Z+1	; 0x01
 b54:	07 2e       	mov	r0, r23
 b56:	00 0c       	add	r0, r0
 b58:	88 0b       	sbc	r24, r24
 b5a:	99 0b       	sbc	r25, r25
 b5c:	0e 5f       	subi	r16, 0xFE	; 254
 b5e:	1f 4f       	sbci	r17, 0xFF	; 255
 b60:	f3 2d       	mov	r31, r3
 b62:	ff 76       	andi	r31, 0x6F	; 111
 b64:	3f 2e       	mov	r3, r31
 b66:	97 ff       	sbrs	r25, 7
 b68:	09 c0       	rjmp	.+18     	; 0xb7c <vfprintf+0x212>
 b6a:	90 95       	com	r25
 b6c:	80 95       	com	r24
 b6e:	70 95       	com	r23
 b70:	61 95       	neg	r22
 b72:	7f 4f       	sbci	r23, 0xFF	; 255
 b74:	8f 4f       	sbci	r24, 0xFF	; 255
 b76:	9f 4f       	sbci	r25, 0xFF	; 255
 b78:	f0 68       	ori	r31, 0x80	; 128
 b7a:	3f 2e       	mov	r3, r31
 b7c:	2a e0       	ldi	r18, 0x0A	; 10
 b7e:	30 e0       	ldi	r19, 0x00	; 0
 b80:	a3 01       	movw	r20, r6
 b82:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__ultoa_invert>
 b86:	88 2e       	mov	r8, r24
 b88:	86 18       	sub	r8, r6
 b8a:	45 c0       	rjmp	.+138    	; 0xc16 <vfprintf+0x2ac>
 b8c:	85 37       	cpi	r24, 0x75	; 117
 b8e:	31 f4       	brne	.+12     	; 0xb9c <vfprintf+0x232>
 b90:	23 2d       	mov	r18, r3
 b92:	2f 7e       	andi	r18, 0xEF	; 239
 b94:	b2 2e       	mov	r11, r18
 b96:	2a e0       	ldi	r18, 0x0A	; 10
 b98:	30 e0       	ldi	r19, 0x00	; 0
 b9a:	25 c0       	rjmp	.+74     	; 0xbe6 <vfprintf+0x27c>
 b9c:	93 2d       	mov	r25, r3
 b9e:	99 7f       	andi	r25, 0xF9	; 249
 ba0:	b9 2e       	mov	r11, r25
 ba2:	8f 36       	cpi	r24, 0x6F	; 111
 ba4:	c1 f0       	breq	.+48     	; 0xbd6 <vfprintf+0x26c>
 ba6:	18 f4       	brcc	.+6      	; 0xbae <vfprintf+0x244>
 ba8:	88 35       	cpi	r24, 0x58	; 88
 baa:	79 f0       	breq	.+30     	; 0xbca <vfprintf+0x260>
 bac:	b5 c0       	rjmp	.+362    	; 0xd18 <vfprintf+0x3ae>
 bae:	80 37       	cpi	r24, 0x70	; 112
 bb0:	19 f0       	breq	.+6      	; 0xbb8 <vfprintf+0x24e>
 bb2:	88 37       	cpi	r24, 0x78	; 120
 bb4:	21 f0       	breq	.+8      	; 0xbbe <vfprintf+0x254>
 bb6:	b0 c0       	rjmp	.+352    	; 0xd18 <vfprintf+0x3ae>
 bb8:	e9 2f       	mov	r30, r25
 bba:	e0 61       	ori	r30, 0x10	; 16
 bbc:	be 2e       	mov	r11, r30
 bbe:	b4 fe       	sbrs	r11, 4
 bc0:	0d c0       	rjmp	.+26     	; 0xbdc <vfprintf+0x272>
 bc2:	fb 2d       	mov	r31, r11
 bc4:	f4 60       	ori	r31, 0x04	; 4
 bc6:	bf 2e       	mov	r11, r31
 bc8:	09 c0       	rjmp	.+18     	; 0xbdc <vfprintf+0x272>
 bca:	34 fe       	sbrs	r3, 4
 bcc:	0a c0       	rjmp	.+20     	; 0xbe2 <vfprintf+0x278>
 bce:	29 2f       	mov	r18, r25
 bd0:	26 60       	ori	r18, 0x06	; 6
 bd2:	b2 2e       	mov	r11, r18
 bd4:	06 c0       	rjmp	.+12     	; 0xbe2 <vfprintf+0x278>
 bd6:	28 e0       	ldi	r18, 0x08	; 8
 bd8:	30 e0       	ldi	r19, 0x00	; 0
 bda:	05 c0       	rjmp	.+10     	; 0xbe6 <vfprintf+0x27c>
 bdc:	20 e1       	ldi	r18, 0x10	; 16
 bde:	30 e0       	ldi	r19, 0x00	; 0
 be0:	02 c0       	rjmp	.+4      	; 0xbe6 <vfprintf+0x27c>
 be2:	20 e1       	ldi	r18, 0x10	; 16
 be4:	32 e0       	ldi	r19, 0x02	; 2
 be6:	f8 01       	movw	r30, r16
 be8:	b7 fe       	sbrs	r11, 7
 bea:	07 c0       	rjmp	.+14     	; 0xbfa <vfprintf+0x290>
 bec:	60 81       	ld	r22, Z
 bee:	71 81       	ldd	r23, Z+1	; 0x01
 bf0:	82 81       	ldd	r24, Z+2	; 0x02
 bf2:	93 81       	ldd	r25, Z+3	; 0x03
 bf4:	0c 5f       	subi	r16, 0xFC	; 252
 bf6:	1f 4f       	sbci	r17, 0xFF	; 255
 bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0x29c>
 bfa:	60 81       	ld	r22, Z
 bfc:	71 81       	ldd	r23, Z+1	; 0x01
 bfe:	80 e0       	ldi	r24, 0x00	; 0
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	0e 5f       	subi	r16, 0xFE	; 254
 c04:	1f 4f       	sbci	r17, 0xFF	; 255
 c06:	a3 01       	movw	r20, r6
 c08:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <__ultoa_invert>
 c0c:	88 2e       	mov	r8, r24
 c0e:	86 18       	sub	r8, r6
 c10:	fb 2d       	mov	r31, r11
 c12:	ff 77       	andi	r31, 0x7F	; 127
 c14:	3f 2e       	mov	r3, r31
 c16:	36 fe       	sbrs	r3, 6
 c18:	0d c0       	rjmp	.+26     	; 0xc34 <vfprintf+0x2ca>
 c1a:	23 2d       	mov	r18, r3
 c1c:	2e 7f       	andi	r18, 0xFE	; 254
 c1e:	a2 2e       	mov	r10, r18
 c20:	89 14       	cp	r8, r9
 c22:	58 f4       	brcc	.+22     	; 0xc3a <vfprintf+0x2d0>
 c24:	34 fe       	sbrs	r3, 4
 c26:	0b c0       	rjmp	.+22     	; 0xc3e <vfprintf+0x2d4>
 c28:	32 fc       	sbrc	r3, 2
 c2a:	09 c0       	rjmp	.+18     	; 0xc3e <vfprintf+0x2d4>
 c2c:	83 2d       	mov	r24, r3
 c2e:	8e 7e       	andi	r24, 0xEE	; 238
 c30:	a8 2e       	mov	r10, r24
 c32:	05 c0       	rjmp	.+10     	; 0xc3e <vfprintf+0x2d4>
 c34:	b8 2c       	mov	r11, r8
 c36:	a3 2c       	mov	r10, r3
 c38:	03 c0       	rjmp	.+6      	; 0xc40 <vfprintf+0x2d6>
 c3a:	b8 2c       	mov	r11, r8
 c3c:	01 c0       	rjmp	.+2      	; 0xc40 <vfprintf+0x2d6>
 c3e:	b9 2c       	mov	r11, r9
 c40:	a4 fe       	sbrs	r10, 4
 c42:	0f c0       	rjmp	.+30     	; 0xc62 <vfprintf+0x2f8>
 c44:	fe 01       	movw	r30, r28
 c46:	e8 0d       	add	r30, r8
 c48:	f1 1d       	adc	r31, r1
 c4a:	80 81       	ld	r24, Z
 c4c:	80 33       	cpi	r24, 0x30	; 48
 c4e:	21 f4       	brne	.+8      	; 0xc58 <vfprintf+0x2ee>
 c50:	9a 2d       	mov	r25, r10
 c52:	99 7e       	andi	r25, 0xE9	; 233
 c54:	a9 2e       	mov	r10, r25
 c56:	09 c0       	rjmp	.+18     	; 0xc6a <vfprintf+0x300>
 c58:	a2 fe       	sbrs	r10, 2
 c5a:	06 c0       	rjmp	.+12     	; 0xc68 <vfprintf+0x2fe>
 c5c:	b3 94       	inc	r11
 c5e:	b3 94       	inc	r11
 c60:	04 c0       	rjmp	.+8      	; 0xc6a <vfprintf+0x300>
 c62:	8a 2d       	mov	r24, r10
 c64:	86 78       	andi	r24, 0x86	; 134
 c66:	09 f0       	breq	.+2      	; 0xc6a <vfprintf+0x300>
 c68:	b3 94       	inc	r11
 c6a:	a3 fc       	sbrc	r10, 3
 c6c:	11 c0       	rjmp	.+34     	; 0xc90 <vfprintf+0x326>
 c6e:	a0 fe       	sbrs	r10, 0
 c70:	06 c0       	rjmp	.+12     	; 0xc7e <vfprintf+0x314>
 c72:	b2 14       	cp	r11, r2
 c74:	88 f4       	brcc	.+34     	; 0xc98 <vfprintf+0x32e>
 c76:	28 0c       	add	r2, r8
 c78:	92 2c       	mov	r9, r2
 c7a:	9b 18       	sub	r9, r11
 c7c:	0e c0       	rjmp	.+28     	; 0xc9a <vfprintf+0x330>
 c7e:	b2 14       	cp	r11, r2
 c80:	60 f4       	brcc	.+24     	; 0xc9a <vfprintf+0x330>
 c82:	b6 01       	movw	r22, r12
 c84:	80 e2       	ldi	r24, 0x20	; 32
 c86:	90 e0       	ldi	r25, 0x00	; 0
 c88:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 c8c:	b3 94       	inc	r11
 c8e:	f7 cf       	rjmp	.-18     	; 0xc7e <vfprintf+0x314>
 c90:	b2 14       	cp	r11, r2
 c92:	18 f4       	brcc	.+6      	; 0xc9a <vfprintf+0x330>
 c94:	2b 18       	sub	r2, r11
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x332>
 c98:	98 2c       	mov	r9, r8
 c9a:	21 2c       	mov	r2, r1
 c9c:	a4 fe       	sbrs	r10, 4
 c9e:	10 c0       	rjmp	.+32     	; 0xcc0 <vfprintf+0x356>
 ca0:	b6 01       	movw	r22, r12
 ca2:	80 e3       	ldi	r24, 0x30	; 48
 ca4:	90 e0       	ldi	r25, 0x00	; 0
 ca6:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 caa:	a2 fe       	sbrs	r10, 2
 cac:	17 c0       	rjmp	.+46     	; 0xcdc <vfprintf+0x372>
 cae:	a1 fc       	sbrc	r10, 1
 cb0:	03 c0       	rjmp	.+6      	; 0xcb8 <vfprintf+0x34e>
 cb2:	88 e7       	ldi	r24, 0x78	; 120
 cb4:	90 e0       	ldi	r25, 0x00	; 0
 cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x352>
 cb8:	88 e5       	ldi	r24, 0x58	; 88
 cba:	90 e0       	ldi	r25, 0x00	; 0
 cbc:	b6 01       	movw	r22, r12
 cbe:	0c c0       	rjmp	.+24     	; 0xcd8 <vfprintf+0x36e>
 cc0:	8a 2d       	mov	r24, r10
 cc2:	86 78       	andi	r24, 0x86	; 134
 cc4:	59 f0       	breq	.+22     	; 0xcdc <vfprintf+0x372>
 cc6:	a1 fe       	sbrs	r10, 1
 cc8:	02 c0       	rjmp	.+4      	; 0xcce <vfprintf+0x364>
 cca:	8b e2       	ldi	r24, 0x2B	; 43
 ccc:	01 c0       	rjmp	.+2      	; 0xcd0 <vfprintf+0x366>
 cce:	80 e2       	ldi	r24, 0x20	; 32
 cd0:	a7 fc       	sbrc	r10, 7
 cd2:	8d e2       	ldi	r24, 0x2D	; 45
 cd4:	b6 01       	movw	r22, r12
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 cdc:	89 14       	cp	r8, r9
 cde:	38 f4       	brcc	.+14     	; 0xcee <vfprintf+0x384>
 ce0:	b6 01       	movw	r22, r12
 ce2:	80 e3       	ldi	r24, 0x30	; 48
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 cea:	9a 94       	dec	r9
 cec:	f7 cf       	rjmp	.-18     	; 0xcdc <vfprintf+0x372>
 cee:	8a 94       	dec	r8
 cf0:	f3 01       	movw	r30, r6
 cf2:	e8 0d       	add	r30, r8
 cf4:	f1 1d       	adc	r31, r1
 cf6:	80 81       	ld	r24, Z
 cf8:	b6 01       	movw	r22, r12
 cfa:	90 e0       	ldi	r25, 0x00	; 0
 cfc:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 d00:	81 10       	cpse	r8, r1
 d02:	f5 cf       	rjmp	.-22     	; 0xcee <vfprintf+0x384>
 d04:	22 20       	and	r2, r2
 d06:	09 f4       	brne	.+2      	; 0xd0a <vfprintf+0x3a0>
 d08:	42 ce       	rjmp	.-892    	; 0x98e <vfprintf+0x24>
 d0a:	b6 01       	movw	r22, r12
 d0c:	80 e2       	ldi	r24, 0x20	; 32
 d0e:	90 e0       	ldi	r25, 0x00	; 0
 d10:	0e 94 ac 06 	call	0xd58	; 0xd58 <fputc>
 d14:	2a 94       	dec	r2
 d16:	f6 cf       	rjmp	.-20     	; 0xd04 <vfprintf+0x39a>
 d18:	f6 01       	movw	r30, r12
 d1a:	86 81       	ldd	r24, Z+6	; 0x06
 d1c:	97 81       	ldd	r25, Z+7	; 0x07
 d1e:	02 c0       	rjmp	.+4      	; 0xd24 <vfprintf+0x3ba>
 d20:	8f ef       	ldi	r24, 0xFF	; 255
 d22:	9f ef       	ldi	r25, 0xFF	; 255
 d24:	2b 96       	adiw	r28, 0x0b	; 11
 d26:	e2 e1       	ldi	r30, 0x12	; 18
 d28:	0c 94 5f 07 	jmp	0xebe	; 0xebe <__epilogue_restores__>

00000d2c <strnlen_P>:
 d2c:	fc 01       	movw	r30, r24
 d2e:	05 90       	lpm	r0, Z+
 d30:	61 50       	subi	r22, 0x01	; 1
 d32:	70 40       	sbci	r23, 0x00	; 0
 d34:	01 10       	cpse	r0, r1
 d36:	d8 f7       	brcc	.-10     	; 0xd2e <strnlen_P+0x2>
 d38:	80 95       	com	r24
 d3a:	90 95       	com	r25
 d3c:	8e 0f       	add	r24, r30
 d3e:	9f 1f       	adc	r25, r31
 d40:	08 95       	ret

00000d42 <strnlen>:
 d42:	fc 01       	movw	r30, r24
 d44:	61 50       	subi	r22, 0x01	; 1
 d46:	70 40       	sbci	r23, 0x00	; 0
 d48:	01 90       	ld	r0, Z+
 d4a:	01 10       	cpse	r0, r1
 d4c:	d8 f7       	brcc	.-10     	; 0xd44 <strnlen+0x2>
 d4e:	80 95       	com	r24
 d50:	90 95       	com	r25
 d52:	8e 0f       	add	r24, r30
 d54:	9f 1f       	adc	r25, r31
 d56:	08 95       	ret

00000d58 <fputc>:
 d58:	0f 93       	push	r16
 d5a:	1f 93       	push	r17
 d5c:	cf 93       	push	r28
 d5e:	df 93       	push	r29
 d60:	fb 01       	movw	r30, r22
 d62:	23 81       	ldd	r18, Z+3	; 0x03
 d64:	21 fd       	sbrc	r18, 1
 d66:	03 c0       	rjmp	.+6      	; 0xd6e <fputc+0x16>
 d68:	8f ef       	ldi	r24, 0xFF	; 255
 d6a:	9f ef       	ldi	r25, 0xFF	; 255
 d6c:	2c c0       	rjmp	.+88     	; 0xdc6 <fputc+0x6e>
 d6e:	22 ff       	sbrs	r18, 2
 d70:	16 c0       	rjmp	.+44     	; 0xd9e <fputc+0x46>
 d72:	46 81       	ldd	r20, Z+6	; 0x06
 d74:	57 81       	ldd	r21, Z+7	; 0x07
 d76:	24 81       	ldd	r18, Z+4	; 0x04
 d78:	35 81       	ldd	r19, Z+5	; 0x05
 d7a:	42 17       	cp	r20, r18
 d7c:	53 07       	cpc	r21, r19
 d7e:	44 f4       	brge	.+16     	; 0xd90 <fputc+0x38>
 d80:	a0 81       	ld	r26, Z
 d82:	b1 81       	ldd	r27, Z+1	; 0x01
 d84:	9d 01       	movw	r18, r26
 d86:	2f 5f       	subi	r18, 0xFF	; 255
 d88:	3f 4f       	sbci	r19, 0xFF	; 255
 d8a:	20 83       	st	Z, r18
 d8c:	31 83       	std	Z+1, r19	; 0x01
 d8e:	8c 93       	st	X, r24
 d90:	26 81       	ldd	r18, Z+6	; 0x06
 d92:	37 81       	ldd	r19, Z+7	; 0x07
 d94:	2f 5f       	subi	r18, 0xFF	; 255
 d96:	3f 4f       	sbci	r19, 0xFF	; 255
 d98:	26 83       	std	Z+6, r18	; 0x06
 d9a:	37 83       	std	Z+7, r19	; 0x07
 d9c:	14 c0       	rjmp	.+40     	; 0xdc6 <fputc+0x6e>
 d9e:	8b 01       	movw	r16, r22
 da0:	ec 01       	movw	r28, r24
 da2:	fb 01       	movw	r30, r22
 da4:	00 84       	ldd	r0, Z+8	; 0x08
 da6:	f1 85       	ldd	r31, Z+9	; 0x09
 da8:	e0 2d       	mov	r30, r0
 daa:	09 95       	icall
 dac:	89 2b       	or	r24, r25
 dae:	e1 f6       	brne	.-72     	; 0xd68 <fputc+0x10>
 db0:	d8 01       	movw	r26, r16
 db2:	16 96       	adiw	r26, 0x06	; 6
 db4:	8d 91       	ld	r24, X+
 db6:	9c 91       	ld	r25, X
 db8:	17 97       	sbiw	r26, 0x07	; 7
 dba:	01 96       	adiw	r24, 0x01	; 1
 dbc:	16 96       	adiw	r26, 0x06	; 6
 dbe:	8d 93       	st	X+, r24
 dc0:	9c 93       	st	X, r25
 dc2:	17 97       	sbiw	r26, 0x07	; 7
 dc4:	ce 01       	movw	r24, r28
 dc6:	df 91       	pop	r29
 dc8:	cf 91       	pop	r28
 dca:	1f 91       	pop	r17
 dcc:	0f 91       	pop	r16
 dce:	08 95       	ret

00000dd0 <__ultoa_invert>:
 dd0:	fa 01       	movw	r30, r20
 dd2:	aa 27       	eor	r26, r26
 dd4:	28 30       	cpi	r18, 0x08	; 8
 dd6:	51 f1       	breq	.+84     	; 0xe2c <__ultoa_invert+0x5c>
 dd8:	20 31       	cpi	r18, 0x10	; 16
 dda:	81 f1       	breq	.+96     	; 0xe3c <__ultoa_invert+0x6c>
 ddc:	e8 94       	clt
 dde:	6f 93       	push	r22
 de0:	6e 7f       	andi	r22, 0xFE	; 254
 de2:	6e 5f       	subi	r22, 0xFE	; 254
 de4:	7f 4f       	sbci	r23, 0xFF	; 255
 de6:	8f 4f       	sbci	r24, 0xFF	; 255
 de8:	9f 4f       	sbci	r25, 0xFF	; 255
 dea:	af 4f       	sbci	r26, 0xFF	; 255
 dec:	b1 e0       	ldi	r27, 0x01	; 1
 dee:	3e d0       	rcall	.+124    	; 0xe6c <__ultoa_invert+0x9c>
 df0:	b4 e0       	ldi	r27, 0x04	; 4
 df2:	3c d0       	rcall	.+120    	; 0xe6c <__ultoa_invert+0x9c>
 df4:	67 0f       	add	r22, r23
 df6:	78 1f       	adc	r23, r24
 df8:	89 1f       	adc	r24, r25
 dfa:	9a 1f       	adc	r25, r26
 dfc:	a1 1d       	adc	r26, r1
 dfe:	68 0f       	add	r22, r24
 e00:	79 1f       	adc	r23, r25
 e02:	8a 1f       	adc	r24, r26
 e04:	91 1d       	adc	r25, r1
 e06:	a1 1d       	adc	r26, r1
 e08:	6a 0f       	add	r22, r26
 e0a:	71 1d       	adc	r23, r1
 e0c:	81 1d       	adc	r24, r1
 e0e:	91 1d       	adc	r25, r1
 e10:	a1 1d       	adc	r26, r1
 e12:	20 d0       	rcall	.+64     	; 0xe54 <__ultoa_invert+0x84>
 e14:	09 f4       	brne	.+2      	; 0xe18 <__ultoa_invert+0x48>
 e16:	68 94       	set
 e18:	3f 91       	pop	r19
 e1a:	2a e0       	ldi	r18, 0x0A	; 10
 e1c:	26 9f       	mul	r18, r22
 e1e:	11 24       	eor	r1, r1
 e20:	30 19       	sub	r19, r0
 e22:	30 5d       	subi	r19, 0xD0	; 208
 e24:	31 93       	st	Z+, r19
 e26:	de f6       	brtc	.-74     	; 0xdde <__ultoa_invert+0xe>
 e28:	cf 01       	movw	r24, r30
 e2a:	08 95       	ret
 e2c:	46 2f       	mov	r20, r22
 e2e:	47 70       	andi	r20, 0x07	; 7
 e30:	40 5d       	subi	r20, 0xD0	; 208
 e32:	41 93       	st	Z+, r20
 e34:	b3 e0       	ldi	r27, 0x03	; 3
 e36:	0f d0       	rcall	.+30     	; 0xe56 <__ultoa_invert+0x86>
 e38:	c9 f7       	brne	.-14     	; 0xe2c <__ultoa_invert+0x5c>
 e3a:	f6 cf       	rjmp	.-20     	; 0xe28 <__ultoa_invert+0x58>
 e3c:	46 2f       	mov	r20, r22
 e3e:	4f 70       	andi	r20, 0x0F	; 15
 e40:	40 5d       	subi	r20, 0xD0	; 208
 e42:	4a 33       	cpi	r20, 0x3A	; 58
 e44:	18 f0       	brcs	.+6      	; 0xe4c <__ultoa_invert+0x7c>
 e46:	49 5d       	subi	r20, 0xD9	; 217
 e48:	31 fd       	sbrc	r19, 1
 e4a:	40 52       	subi	r20, 0x20	; 32
 e4c:	41 93       	st	Z+, r20
 e4e:	02 d0       	rcall	.+4      	; 0xe54 <__ultoa_invert+0x84>
 e50:	a9 f7       	brne	.-22     	; 0xe3c <__ultoa_invert+0x6c>
 e52:	ea cf       	rjmp	.-44     	; 0xe28 <__ultoa_invert+0x58>
 e54:	b4 e0       	ldi	r27, 0x04	; 4
 e56:	a6 95       	lsr	r26
 e58:	97 95       	ror	r25
 e5a:	87 95       	ror	r24
 e5c:	77 95       	ror	r23
 e5e:	67 95       	ror	r22
 e60:	ba 95       	dec	r27
 e62:	c9 f7       	brne	.-14     	; 0xe56 <__ultoa_invert+0x86>
 e64:	00 97       	sbiw	r24, 0x00	; 0
 e66:	61 05       	cpc	r22, r1
 e68:	71 05       	cpc	r23, r1
 e6a:	08 95       	ret
 e6c:	9b 01       	movw	r18, r22
 e6e:	ac 01       	movw	r20, r24
 e70:	0a 2e       	mov	r0, r26
 e72:	06 94       	lsr	r0
 e74:	57 95       	ror	r21
 e76:	47 95       	ror	r20
 e78:	37 95       	ror	r19
 e7a:	27 95       	ror	r18
 e7c:	ba 95       	dec	r27
 e7e:	c9 f7       	brne	.-14     	; 0xe72 <__ultoa_invert+0xa2>
 e80:	62 0f       	add	r22, r18
 e82:	73 1f       	adc	r23, r19
 e84:	84 1f       	adc	r24, r20
 e86:	95 1f       	adc	r25, r21
 e88:	a0 1d       	adc	r26, r0
 e8a:	08 95       	ret

00000e8c <__prologue_saves__>:
 e8c:	2f 92       	push	r2
 e8e:	3f 92       	push	r3
 e90:	4f 92       	push	r4
 e92:	5f 92       	push	r5
 e94:	6f 92       	push	r6
 e96:	7f 92       	push	r7
 e98:	8f 92       	push	r8
 e9a:	9f 92       	push	r9
 e9c:	af 92       	push	r10
 e9e:	bf 92       	push	r11
 ea0:	cf 92       	push	r12
 ea2:	df 92       	push	r13
 ea4:	ef 92       	push	r14
 ea6:	ff 92       	push	r15
 ea8:	0f 93       	push	r16
 eaa:	1f 93       	push	r17
 eac:	cf 93       	push	r28
 eae:	df 93       	push	r29
 eb0:	cd b7       	in	r28, 0x3d	; 61
 eb2:	de b7       	in	r29, 0x3e	; 62
 eb4:	ca 1b       	sub	r28, r26
 eb6:	db 0b       	sbc	r29, r27
 eb8:	cd bf       	out	0x3d, r28	; 61
 eba:	de bf       	out	0x3e, r29	; 62
 ebc:	09 94       	ijmp

00000ebe <__epilogue_restores__>:
 ebe:	2a 88       	ldd	r2, Y+18	; 0x12
 ec0:	39 88       	ldd	r3, Y+17	; 0x11
 ec2:	48 88       	ldd	r4, Y+16	; 0x10
 ec4:	5f 84       	ldd	r5, Y+15	; 0x0f
 ec6:	6e 84       	ldd	r6, Y+14	; 0x0e
 ec8:	7d 84       	ldd	r7, Y+13	; 0x0d
 eca:	8c 84       	ldd	r8, Y+12	; 0x0c
 ecc:	9b 84       	ldd	r9, Y+11	; 0x0b
 ece:	aa 84       	ldd	r10, Y+10	; 0x0a
 ed0:	b9 84       	ldd	r11, Y+9	; 0x09
 ed2:	c8 84       	ldd	r12, Y+8	; 0x08
 ed4:	df 80       	ldd	r13, Y+7	; 0x07
 ed6:	ee 80       	ldd	r14, Y+6	; 0x06
 ed8:	fd 80       	ldd	r15, Y+5	; 0x05
 eda:	0c 81       	ldd	r16, Y+4	; 0x04
 edc:	1b 81       	ldd	r17, Y+3	; 0x03
 ede:	aa 81       	ldd	r26, Y+2	; 0x02
 ee0:	b9 81       	ldd	r27, Y+1	; 0x01
 ee2:	ce 0f       	add	r28, r30
 ee4:	d1 1d       	adc	r29, r1
 ee6:	cd bf       	out	0x3d, r28	; 61
 ee8:	de bf       	out	0x3e, r29	; 62
 eea:	ed 01       	movw	r28, r26
 eec:	08 95       	ret

00000eee <_exit>:
 eee:	f8 94       	cli

00000ef0 <__stop_program>:
 ef0:	ff cf       	rjmp	.-2      	; 0xef0 <__stop_program>
