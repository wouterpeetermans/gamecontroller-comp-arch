
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fc8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00802000  00000fc8  0000105c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  0080201a  0080201a  00001076  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001076  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00001114  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d27  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000878  00000000  00000000  00002feb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ab3  00000000  00000000  00003863  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000494  00000000  00000000  00005318  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00014af1  00000000  00000000  000057ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000081e  00000000  00000000  0001a29d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  0001aabb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00005fa6  00000000  00000000  0001abdb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__ctors_end>
   4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
   8:	0c 94 9e 01 	jmp	0x33c	; 0x33c <__vector_2>
   c:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_3>
  10:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  14:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  18:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  1c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  20:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  24:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  28:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  2c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  30:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  34:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  38:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  3c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  40:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  44:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  48:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  4c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  50:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  54:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  58:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  5c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  60:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  68:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  6c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  70:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  74:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  78:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  7c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  80:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  84:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  88:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  8c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  90:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  94:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  98:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  9c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  a8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ac:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  b8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  bc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  c8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  cc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  d8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  dc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  e8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  ec:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f0:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f4:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  f8:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
  fc:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 100:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 104:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 108:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 10c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 110:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 114:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 118:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 11c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 120:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 124:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 128:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 12c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 130:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 134:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 138:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 13c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 140:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 144:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 148:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 14c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 150:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 154:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 158:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 15c:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 160:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 164:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>
 168:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <__bad_interrupt>

0000016c <__ctors_end>:
 16c:	11 24       	eor	r1, r1
 16e:	1f be       	out	0x3f, r1	; 63
 170:	cf ef       	ldi	r28, 0xFF	; 255
 172:	cd bf       	out	0x3d, r28	; 61
 174:	d7 e2       	ldi	r29, 0x27	; 39
 176:	de bf       	out	0x3e, r29	; 62

00000178 <__do_copy_data>:
 178:	10 e2       	ldi	r17, 0x20	; 32
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e2       	ldi	r27, 0x20	; 32
 17e:	e8 ec       	ldi	r30, 0xC8	; 200
 180:	ff e0       	ldi	r31, 0x0F	; 15
 182:	02 c0       	rjmp	.+4      	; 0x188 <__do_copy_data+0x10>
 184:	05 90       	lpm	r0, Z+
 186:	0d 92       	st	X+, r0
 188:	aa 31       	cpi	r26, 0x1A	; 26
 18a:	b1 07       	cpc	r27, r17
 18c:	d9 f7       	brne	.-10     	; 0x184 <__do_copy_data+0xc>

0000018e <__do_clear_bss>:
 18e:	20 e2       	ldi	r18, 0x20	; 32
 190:	aa e1       	ldi	r26, 0x1A	; 26
 192:	b0 e2       	ldi	r27, 0x20	; 32
 194:	01 c0       	rjmp	.+2      	; 0x198 <.do_clear_bss_start>

00000196 <.do_clear_bss_loop>:
 196:	1d 92       	st	X+, r1

00000198 <.do_clear_bss_start>:
 198:	a3 32       	cpi	r26, 0x23	; 35
 19a:	b2 07       	cpc	r27, r18
 19c:	e1 f7       	brne	.-8      	; 0x196 <.do_clear_bss_loop>
 19e:	0e 94 74 02 	call	0x4e8	; 0x4e8 <main>
 1a2:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <_exit>

000001a6 <__bad_interrupt>:
 1a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001aa <AccInit>:
#include "acc.h"



void AccInit(void)
{
 1aa:	cf 93       	push	r28
 1ac:	df 93       	push	r29
 1ae:	cd b7       	in	r28, 0x3d	; 61
 1b0:	de b7       	in	r29, 0x3e	; 62

	
}
 1b2:	00 00       	nop
 1b4:	df 91       	pop	r29
 1b6:	cf 91       	pop	r28
 1b8:	08 95       	ret

000001ba <AnalogInit>:
#include <inttypes.h>



void AnalogInit(void)
{
 1ba:	0f 93       	push	r16
 1bc:	1f 93       	push	r17
 1be:	cf 93       	push	r28
 1c0:	df 93       	push	r29
 1c2:	cd b7       	in	r28, 0x3d	; 61
 1c4:	de b7       	in	r29, 0x3e	; 62
//	PR.PRPB &= ~0x02; // Clear ADC bit in Power Reduction Port B Register
	
	// Calibration values are stored at production time
	// Load stored bytes into the calibration registers
	// First NVM read is junk and must be thrown away
 	ADCA.CALL = ReadCalibrationByte( offsetof(NVM_PROD_SIGNATURES_t, ADCBCAL0) );
 1c6:	00 e0       	ldi	r16, 0x00	; 0
 1c8:	12 e0       	ldi	r17, 0x02	; 2
 1ca:	84 e2       	ldi	r24, 0x24	; 36
 1cc:	0e 94 31 01 	call	0x262	; 0x262 <ReadCalibrationByte>
 1d0:	f8 01       	movw	r30, r16
 1d2:	84 87       	std	Z+12, r24	; 0x0c
 	ADCA.CALH = ReadCalibrationByte( offsetof(NVM_PROD_SIGNATURES_t, ADCBCAL1) );
 1d4:	00 e0       	ldi	r16, 0x00	; 0
 1d6:	12 e0       	ldi	r17, 0x02	; 2
 1d8:	85 e2       	ldi	r24, 0x25	; 37
 1da:	0e 94 31 01 	call	0x262	; 0x262 <ReadCalibrationByte>
 1de:	f8 01       	movw	r30, r16
 1e0:	85 87       	std	Z+13, r24	; 0x0d
 	ADCA.CALL = ReadCalibrationByte( offsetof(NVM_PROD_SIGNATURES_t, ADCBCAL0) );
 1e2:	00 e0       	ldi	r16, 0x00	; 0
 1e4:	12 e0       	ldi	r17, 0x02	; 2
 1e6:	84 e2       	ldi	r24, 0x24	; 36
 1e8:	0e 94 31 01 	call	0x262	; 0x262 <ReadCalibrationByte>
 1ec:	f8 01       	movw	r30, r16
 1ee:	84 87       	std	Z+12, r24	; 0x0c
 	ADCA.CALH = ReadCalibrationByte( offsetof(NVM_PROD_SIGNATURES_t, ADCBCAL1) );
 1f0:	00 e0       	ldi	r16, 0x00	; 0
 1f2:	12 e0       	ldi	r17, 0x02	; 2
 1f4:	85 e2       	ldi	r24, 0x25	; 37
 1f6:	0e 94 31 01 	call	0x262	; 0x262 <ReadCalibrationByte>
 1fa:	f8 01       	movw	r30, r16
 1fc:	85 87       	std	Z+13, r24	; 0x0d
	//     7        6       5        4        3        2       1       0
	// | START  |   -   |   -   |         GAIN[2:0]        | INPUTMODE[1:0] |
	//     0        0       0        0        0        0       0       0
	// Place ADC channel in single-ended mode
	// Gain set to 1
	ADCA.CH0.CTRL = ADC_CH_INPUTMODE0_bm; // 0x01
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	92 e0       	ldi	r25, 0x02	; 2
 202:	21 e0       	ldi	r18, 0x01	; 1
 204:	fc 01       	movw	r30, r24
 206:	20 a3       	std	Z+32, r18	; 0x20
	//     7        6       5        4        3        2       1       0
	// |   -    |           MUXPOS[3:0]             |     MUXNEG[2:0]     |
	//     0        0       0        0        0        0       0       0
	// Connect potentiometer (PB1) to positive input
	// MUXNEG bits are ignored in single-ended mode
	ADCA.CH0.MUXCTRL = ADC_CH_MUXINT0_bm; // 0x08
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	92 e0       	ldi	r25, 0x02	; 2
 20c:	28 e0       	ldi	r18, 0x08	; 8
 20e:	fc 01       	movw	r30, r24
 210:	21 a3       	std	Z+33, r18	; 0x21
	//     0        0       0         0         0         0       0        0
	// Apply no limit to ADC sample rate
	// Put ADC in signed mode
	// Disable Free-run mode (single conversion upon trigger)
	// Resolution set to 12-bit, right justified (11-bit effective in signed mode)
	ADCA.CTRLB = ADC_CONMODE_bm; // 0x10
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	92 e0       	ldi	r25, 0x02	; 2
 216:	20 e1       	ldi	r18, 0x10	; 16
 218:	fc 01       	movw	r30, r24
 21a:	21 83       	std	Z+1, r18	; 0x01
	// The ADC runs off of the CPU_per clock
	// In sys_clk_init() the internal 2MHz RC osc was used to source a 16 MHz PLL
	// The PLL is then divided using Prescalers A, B, and C setting CPU_per to 8 MHz
	// According to AVR1300, the ADC clock should run in the range 100 kHz ~ approx 1.4 MHz
	// Set ADC clock to 125kHz:  CPU_per/64    =>    8MHz/64 = 125kHz
	ADCA.PRESCALER = ADC_PRESCALER2_bm; // 0x04
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	92 e0       	ldi	r25, 0x02	; 2
 220:	24 e0       	ldi	r18, 0x04	; 4
 222:	fc 01       	movw	r30, r24
 224:	24 83       	std	Z+4, r18	; 0x04
	// |   -   |      REFSEL[2:0]      |   -   |   -   | BANDGAP | TEMPREF |
	//     0       0       0       0       0       0        0         0
	// Set Vref to Vcc/1.6.  This gives 3.3/1.6 = approx 2.06V
	// With effectively 11-bit resolution, this means each LSB
	// will represent approximately 1 mV.
	ADCA.REFCTRL = ADC_REFSEL0_bm; // 0x10
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	92 e0       	ldi	r25, 0x02	; 2
 22a:	20 e1       	ldi	r18, 0x10	; 16
 22c:	fc 01       	movw	r30, r24
 22e:	22 83       	std	Z+2, r18	; 0x02
	//ADCB.EVCTRL
	//     7       6       5       4       3       2       1       0
	// |   -   |   -   |   -   |   EVSEL[1:0]  |      EVACT[2:0]       |
	//     0       0       0       0       0       0       0       0
	// Not implementing Event System so ensure EVCTRL is reading zeros
	ADCA.EVCTRL = 0x00;
 230:	80 e0       	ldi	r24, 0x00	; 0
 232:	92 e0       	ldi	r25, 0x02	; 2
 234:	fc 01       	movw	r30, r24
 236:	13 82       	std	Z+3, r1	; 0x03
	//ADCB.INTFLAGS
	//     7       6       5       4       3       2       1       0
	// |   -   |   -   |   -   |   -   |   -   |   -   |   -   | CH0IF |
	//     0       0       0       0       0       0       0       0
	// Ensure the ADC complete flag is cleared (by writing a '1' to it)
	ADCA.INTFLAGS = ADC_CH0IF_bm; // 0x01
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	92 e0       	ldi	r25, 0x02	; 2
 23c:	21 e0       	ldi	r18, 0x01	; 1
 23e:	fc 01       	movw	r30, r24
 240:	26 83       	std	Z+6, r18	; 0x06
	//ADCB.CH0.INTCTRL
	//     7       6       5       4        3       2       1       0
	// |   -   |   -   |   -   |   -   |  INTMODE[1:0]  |  INTLVL[1:0]  |
	//     0       0       0       0        0       0       0       0
	// Configure interrupt on conversion complete with high priority
	ADCA.CH0.INTCTRL = ADC_CH_INTLVL1_bm | ADC_CH_INTLVL0_bm; // 0x03
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	92 e0       	ldi	r25, 0x02	; 2
 246:	23 e0       	ldi	r18, 0x03	; 3
 248:	fc 01       	movw	r30, r24
 24a:	22 a3       	std	Z+34, r18	; 0x22
	//ADCB.CTRLA
	//     7       6       5       4       3         2        1        0
	// |   -   |   -   |   -   |   -   |   -   | CH0START | FLUSH | ENABLE |
	//     0       0       0       0       0         0        0        0
	// Enable ADC, module B
	ADCA.CTRLA = ADC_ENABLE_bm; // 0x01
 24c:	80 e0       	ldi	r24, 0x00	; 0
 24e:	92 e0       	ldi	r25, 0x02	; 2
 250:	21 e0       	ldi	r18, 0x01	; 1
 252:	fc 01       	movw	r30, r24
 254:	20 83       	st	Z, r18
	//////////////////////////////////////////////////////////////////////
}
 256:	00 00       	nop
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	1f 91       	pop	r17
 25e:	0f 91       	pop	r16
 260:	08 95       	ret

00000262 <ReadCalibrationByte>:


uint8_t ReadCalibrationByte(uint8_t index) {
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	cd b7       	in	r28, 0x3d	; 61
 268:	de b7       	in	r29, 0x3e	; 62
 26a:	25 97       	sbiw	r28, 0x05	; 5
 26c:	cd bf       	out	0x3d, r28	; 61
 26e:	de bf       	out	0x3e, r29	; 62
 270:	8d 83       	std	Y+5, r24	; 0x05
	
	uint8_t result;
	NVM_CMD = NVM_CMD_READ_CALIB_ROW_gc;
 272:	8a ec       	ldi	r24, 0xCA	; 202
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	22 e0       	ldi	r18, 0x02	; 2
 278:	fc 01       	movw	r30, r24
 27a:	20 83       	st	Z, r18
	result = pgm_read_byte(index);
 27c:	8d 81       	ldd	r24, Y+5	; 0x05
 27e:	88 2f       	mov	r24, r24
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	89 83       	std	Y+1, r24	; 0x01
 284:	9a 83       	std	Y+2, r25	; 0x02
 286:	89 81       	ldd	r24, Y+1	; 0x01
 288:	9a 81       	ldd	r25, Y+2	; 0x02
 28a:	fc 01       	movw	r30, r24
 28c:	84 91       	lpm	r24, Z
 28e:	8b 83       	std	Y+3, r24	; 0x03
 290:	8b 81       	ldd	r24, Y+3	; 0x03
 292:	8c 83       	std	Y+4, r24	; 0x04
	
	NVM_CMD = NVM_CMD_NO_OPERATION_gc;
 294:	8a ec       	ldi	r24, 0xCA	; 202
 296:	91 e0       	ldi	r25, 0x01	; 1
 298:	fc 01       	movw	r30, r24
 29a:	10 82       	st	Z, r1
	
	return result;
 29c:	8c 81       	ldd	r24, Y+4	; 0x04
}
 29e:	25 96       	adiw	r28, 0x05	; 5
 2a0:	cd bf       	out	0x3d, r28	; 61
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	df 91       	pop	r29
 2a6:	cf 91       	pop	r28
 2a8:	08 95       	ret

000002aa <ClockInit>:
#pragma GCC push_options
#pragma GCC optimize ("O2") //This function must be optimized to avoid too long time interval betwee CCP write and CLK.CTRL write (4 CLK CYC max)

void ClockInit(void)
{
	OSC.XOSCCTRL=0b11001011; //Clock<=16MHz	
 2aa:	8b ec       	ldi	r24, 0xCB	; 203
 2ac:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
	OSC.CTRL=0b01000; //Enable oscillator	
 2b0:	88 e0       	ldi	r24, 0x08	; 8
 2b2:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
	while (!(OSC.STATUS&0b1000)); //Wait until XTAL osc is ready
 2b6:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 2ba:	83 ff       	sbrs	r24, 3
 2bc:	fc cf       	rjmp	.-8      	; 0x2b6 <ClockInit+0xc>
	
	//Select XTAL osc as system CLK source
	CCP=0xd8;
 2be:	88 ed       	ldi	r24, 0xD8	; 216
 2c0:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL=0b0011;
 2c2:	83 e0       	ldi	r24, 0x03	; 3
 2c4:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 2c8:	08 95       	ret

000002ca <EncoderInit>:
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	cd b7       	in	r28, 0x3d	; 61
 2d0:	de b7       	in	r29, 0x3e	; 62
 2d2:	80 e4       	ldi	r24, 0x40	; 64
 2d4:	96 e0       	ldi	r25, 0x06	; 6
 2d6:	20 e4       	ldi	r18, 0x40	; 64
 2d8:	36 e0       	ldi	r19, 0x06	; 6
 2da:	f9 01       	movw	r30, r18
 2dc:	20 81       	ld	r18, Z
 2de:	2f 7c       	andi	r18, 0xCF	; 207
 2e0:	fc 01       	movw	r30, r24
 2e2:	20 83       	st	Z, r18
 2e4:	80 e4       	ldi	r24, 0x40	; 64
 2e6:	96 e0       	ldi	r25, 0x06	; 6
 2e8:	2f e0       	ldi	r18, 0x0F	; 15
 2ea:	fc 01       	movw	r30, r24
 2ec:	21 87       	std	Z+9, r18	; 0x09
 2ee:	80 e4       	ldi	r24, 0x40	; 64
 2f0:	96 e0       	ldi	r25, 0x06	; 6
 2f2:	20 e1       	ldi	r18, 0x10	; 16
 2f4:	fc 01       	movw	r30, r24
 2f6:	22 87       	std	Z+10, r18	; 0x0a
 2f8:	80 e4       	ldi	r24, 0x40	; 64
 2fa:	96 e0       	ldi	r25, 0x06	; 6
 2fc:	28 e0       	ldi	r18, 0x08	; 8
 2fe:	fc 01       	movw	r30, r24
 300:	23 87       	std	Z+11, r18	; 0x0b
 302:	8f e3       	ldi	r24, 0x3F	; 63
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	2f e3       	ldi	r18, 0x3F	; 63
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	f9 01       	movw	r30, r18
 30c:	20 81       	ld	r18, Z
 30e:	20 68       	ori	r18, 0x80	; 128
 310:	fc 01       	movw	r30, r24
 312:	20 83       	st	Z, r18
 314:	80 ea       	ldi	r24, 0xA0	; 160
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	24 e0       	ldi	r18, 0x04	; 4
 31a:	fc 01       	movw	r30, r24
 31c:	22 83       	std	Z+2, r18	; 0x02
 31e:	00 00       	nop
 320:	df 91       	pop	r29
 322:	cf 91       	pop	r28
 324:	08 95       	ret

00000326 <EncoderGetPos>:
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
 32a:	cd b7       	in	r28, 0x3d	; 61
 32c:	de b7       	in	r29, 0x3e	; 62
 32e:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end>
 332:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x1>
 336:	df 91       	pop	r29
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <__vector_2>:
 33c:	1f 92       	push	r1
 33e:	0f 92       	push	r0
 340:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 344:	0f 92       	push	r0
 346:	11 24       	eor	r1, r1
 348:	2f 93       	push	r18
 34a:	3f 93       	push	r19
 34c:	4f 93       	push	r20
 34e:	5f 93       	push	r21
 350:	6f 93       	push	r22
 352:	7f 93       	push	r23
 354:	8f 93       	push	r24
 356:	9f 93       	push	r25
 358:	af 93       	push	r26
 35a:	bf 93       	push	r27
 35c:	ef 93       	push	r30
 35e:	ff 93       	push	r31
 360:	cf 93       	push	r28
 362:	df 93       	push	r29
 364:	cd b7       	in	r28, 0x3d	; 61
 366:	de b7       	in	r29, 0x3e	; 62
 368:	0e 94 0e 02 	call	0x41c	; 0x41c <readEncoder>
 36c:	9c 01       	movw	r18, r24
 36e:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end>
 372:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x1>
 376:	82 0f       	add	r24, r18
 378:	93 1f       	adc	r25, r19
 37a:	80 93 1a 20 	sts	0x201A, r24	; 0x80201a <__data_end>
 37e:	90 93 1b 20 	sts	0x201B, r25	; 0x80201b <__data_end+0x1>
 382:	00 00       	nop
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	ff 91       	pop	r31
 38a:	ef 91       	pop	r30
 38c:	bf 91       	pop	r27
 38e:	af 91       	pop	r26
 390:	9f 91       	pop	r25
 392:	8f 91       	pop	r24
 394:	7f 91       	pop	r23
 396:	6f 91       	pop	r22
 398:	5f 91       	pop	r21
 39a:	4f 91       	pop	r20
 39c:	3f 91       	pop	r19
 39e:	2f 91       	pop	r18
 3a0:	0f 90       	pop	r0
 3a2:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 3a6:	0f 90       	pop	r0
 3a8:	1f 90       	pop	r1
 3aa:	18 95       	reti

000003ac <__vector_3>:
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 3b4:	0f 92       	push	r0
 3b6:	11 24       	eor	r1, r1
 3b8:	2f 93       	push	r18
 3ba:	3f 93       	push	r19
 3bc:	4f 93       	push	r20
 3be:	5f 93       	push	r21
 3c0:	6f 93       	push	r22
 3c2:	7f 93       	push	r23
 3c4:	8f 93       	push	r24
 3c6:	9f 93       	push	r25
 3c8:	af 93       	push	r26
 3ca:	bf 93       	push	r27
 3cc:	ef 93       	push	r30
 3ce:	ff 93       	push	r31
 3d0:	cf 93       	push	r28
 3d2:	df 93       	push	r29
 3d4:	cd b7       	in	r28, 0x3d	; 61
 3d6:	de b7       	in	r29, 0x3e	; 62
 3d8:	0e 94 0e 02 	call	0x41c	; 0x41c <readEncoder>
 3dc:	9c 01       	movw	r18, r24
 3de:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end>
 3e2:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x1>
 3e6:	82 0f       	add	r24, r18
 3e8:	93 1f       	adc	r25, r19
 3ea:	80 93 1a 20 	sts	0x201A, r24	; 0x80201a <__data_end>
 3ee:	90 93 1b 20 	sts	0x201B, r25	; 0x80201b <__data_end+0x1>
 3f2:	00 00       	nop
 3f4:	df 91       	pop	r29
 3f6:	cf 91       	pop	r28
 3f8:	ff 91       	pop	r31
 3fa:	ef 91       	pop	r30
 3fc:	bf 91       	pop	r27
 3fe:	af 91       	pop	r26
 400:	9f 91       	pop	r25
 402:	8f 91       	pop	r24
 404:	7f 91       	pop	r23
 406:	6f 91       	pop	r22
 408:	5f 91       	pop	r21
 40a:	4f 91       	pop	r20
 40c:	3f 91       	pop	r19
 40e:	2f 91       	pop	r18
 410:	0f 90       	pop	r0
 412:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 416:	0f 90       	pop	r0
 418:	1f 90       	pop	r1
 41a:	18 95       	reti

0000041c <readEncoder>:
 41c:	cf 93       	push	r28
 41e:	df 93       	push	r29
 420:	1f 92       	push	r1
 422:	cd b7       	in	r28, 0x3d	; 61
 424:	de b7       	in	r29, 0x3e	; 62
 426:	80 e4       	ldi	r24, 0x40	; 64
 428:	96 e0       	ldi	r25, 0x06	; 6
 42a:	fc 01       	movw	r30, r24
 42c:	80 85       	ldd	r24, Z+8	; 0x08
 42e:	86 95       	lsr	r24
 430:	86 95       	lsr	r24
 432:	86 95       	lsr	r24
 434:	83 70       	andi	r24, 0x03	; 3
 436:	89 83       	std	Y+1, r24	; 0x01
 438:	89 81       	ldd	r24, Y+1	; 0x01
 43a:	88 2f       	mov	r24, r24
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	81 30       	cpi	r24, 0x01	; 1
 440:	91 05       	cpc	r25, r1
 442:	d1 f0       	breq	.+52     	; 0x478 <readEncoder+0x5c>
 444:	82 30       	cpi	r24, 0x02	; 2
 446:	91 05       	cpc	r25, r1
 448:	1c f4       	brge	.+6      	; 0x450 <readEncoder+0x34>
 44a:	89 2b       	or	r24, r25
 44c:	39 f0       	breq	.+14     	; 0x45c <readEncoder+0x40>
 44e:	3e c0       	rjmp	.+124    	; 0x4cc <readEncoder+0xb0>
 450:	82 30       	cpi	r24, 0x02	; 2
 452:	91 05       	cpc	r25, r1
 454:	f9 f0       	breq	.+62     	; 0x494 <readEncoder+0x78>
 456:	03 97       	sbiw	r24, 0x03	; 3
 458:	59 f1       	breq	.+86     	; 0x4b0 <readEncoder+0x94>
 45a:	38 c0       	rjmp	.+112    	; 0x4cc <readEncoder+0xb0>
 45c:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 460:	83 30       	cpi	r24, 0x03	; 3
 462:	19 f4       	brne	.+6      	; 0x46a <readEncoder+0x4e>
 464:	81 e0       	ldi	r24, 0x01	; 1
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	3b c0       	rjmp	.+118    	; 0x4e0 <readEncoder+0xc4>
 46a:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 46e:	81 30       	cpi	r24, 0x01	; 1
 470:	81 f5       	brne	.+96     	; 0x4d2 <readEncoder+0xb6>
 472:	8f ef       	ldi	r24, 0xFF	; 255
 474:	9f ef       	ldi	r25, 0xFF	; 255
 476:	34 c0       	rjmp	.+104    	; 0x4e0 <readEncoder+0xc4>
 478:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 47c:	88 23       	and	r24, r24
 47e:	19 f4       	brne	.+6      	; 0x486 <readEncoder+0x6a>
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	2d c0       	rjmp	.+90     	; 0x4e0 <readEncoder+0xc4>
 486:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 48a:	82 30       	cpi	r24, 0x02	; 2
 48c:	21 f5       	brne	.+72     	; 0x4d6 <readEncoder+0xba>
 48e:	8f ef       	ldi	r24, 0xFF	; 255
 490:	9f ef       	ldi	r25, 0xFF	; 255
 492:	26 c0       	rjmp	.+76     	; 0x4e0 <readEncoder+0xc4>
 494:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 498:	81 30       	cpi	r24, 0x01	; 1
 49a:	19 f4       	brne	.+6      	; 0x4a2 <readEncoder+0x86>
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	1f c0       	rjmp	.+62     	; 0x4e0 <readEncoder+0xc4>
 4a2:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 4a6:	83 30       	cpi	r24, 0x03	; 3
 4a8:	c1 f4       	brne	.+48     	; 0x4da <readEncoder+0xbe>
 4aa:	8f ef       	ldi	r24, 0xFF	; 255
 4ac:	9f ef       	ldi	r25, 0xFF	; 255
 4ae:	18 c0       	rjmp	.+48     	; 0x4e0 <readEncoder+0xc4>
 4b0:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 4b4:	82 30       	cpi	r24, 0x02	; 2
 4b6:	19 f4       	brne	.+6      	; 0x4be <readEncoder+0xa2>
 4b8:	81 e0       	ldi	r24, 0x01	; 1
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	11 c0       	rjmp	.+34     	; 0x4e0 <readEncoder+0xc4>
 4be:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <prevpos>
 4c2:	88 23       	and	r24, r24
 4c4:	61 f4       	brne	.+24     	; 0x4de <readEncoder+0xc2>
 4c6:	8f ef       	ldi	r24, 0xFF	; 255
 4c8:	9f ef       	ldi	r25, 0xFF	; 255
 4ca:	0a c0       	rjmp	.+20     	; 0x4e0 <readEncoder+0xc4>
 4cc:	80 e0       	ldi	r24, 0x00	; 0
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <readEncoder+0xc4>
 4d2:	00 00       	nop
 4d4:	05 c0       	rjmp	.+10     	; 0x4e0 <readEncoder+0xc4>
 4d6:	00 00       	nop
 4d8:	03 c0       	rjmp	.+6      	; 0x4e0 <readEncoder+0xc4>
 4da:	00 00       	nop
 4dc:	01 c0       	rjmp	.+2      	; 0x4e0 <readEncoder+0xc4>
 4de:	00 00       	nop
 4e0:	0f 90       	pop	r0
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	08 95       	ret

000004e8 <main>:
char a;

void SimpleFunction(void);	//A simple function: print a counter (0 to 9) to the terminal

int main(void)
{	
 4e8:	cf 93       	push	r28
 4ea:	df 93       	push	r29
 4ec:	cd b7       	in	r28, 0x3d	; 61
 4ee:	de b7       	in	r29, 0x3e	; 62
 4f0:	2e 97       	sbiw	r28, 0x0e	; 14
 4f2:	cd bf       	out	0x3d, r28	; 61
 4f4:	de bf       	out	0x3e, r29	; 62
	//###1###
	 
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 4f6:	0e 94 55 01 	call	0x2aa	; 0x2aa <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 4fa:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <USARTInit>
	AnalogInit();			//Initialize ADC
 4fe:	0e 94 dd 00 	call	0x1ba	; 0x1ba <AnalogInit>
	AccInit();				//Initialize accelerometer system
 502:	0e 94 d5 00 	call	0x1aa	; 0x1aa <AccInit>
	LEDInit();				//Initialize LEDs
 506:	0e 94 2b 03 	call	0x656	; 0x656 <LEDInit>
	SwitchInit();			//Initialize switches
 50a:	0e 94 54 03 	call	0x6a8	; 0x6a8 <SwitchInit>
	EncoderInit();			//Initialize encoder
 50e:	0e 94 65 01 	call	0x2ca	; 0x2ca <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 512:	0e 94 4c 03 	call	0x698	; 0x698 <SpeakerInit>
	
	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 516:	80 ea       	ldi	r24, 0xA0	; 160
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	20 ea       	ldi	r18, 0xA0	; 160
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	f9 01       	movw	r30, r18
 520:	22 81       	ldd	r18, Z+2	; 0x02
 522:	27 60       	ori	r18, 0x07	; 7
 524:	fc 01       	movw	r30, r24
 526:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Global interrupt enable
 528:	8f e3       	ldi	r24, 0x3F	; 63
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	2f e3       	ldi	r18, 0x3F	; 63
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	f9 01       	movw	r30, r18
 532:	20 81       	ld	r18, Z
 534:	20 68       	ori	r18, 0x80	; 128
 536:	fc 01       	movw	r30, r24
 538:	20 83       	st	Z, r18
 53a:	80 e0       	ldi	r24, 0x00	; 0
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	aa ef       	ldi	r26, 0xFA	; 250
 540:	b3 e4       	ldi	r27, 0x43	; 67
 542:	89 83       	std	Y+1, r24	; 0x01
 544:	9a 83       	std	Y+2, r25	; 0x02
 546:	ab 83       	std	Y+3, r26	; 0x03
 548:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 54a:	20 e0       	ldi	r18, 0x00	; 0
 54c:	30 e0       	ldi	r19, 0x00	; 0
 54e:	4a e7       	ldi	r20, 0x7A	; 122
 550:	55 e4       	ldi	r21, 0x45	; 69
 552:	69 81       	ldd	r22, Y+1	; 0x01
 554:	7a 81       	ldd	r23, Y+2	; 0x02
 556:	8b 81       	ldd	r24, Y+3	; 0x03
 558:	9c 81       	ldd	r25, Y+4	; 0x04
 55a:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
 55e:	dc 01       	movw	r26, r24
 560:	cb 01       	movw	r24, r22
 562:	8d 83       	std	Y+5, r24	; 0x05
 564:	9e 83       	std	Y+6, r25	; 0x06
 566:	af 83       	std	Y+7, r26	; 0x07
 568:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 56a:	20 e0       	ldi	r18, 0x00	; 0
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	40 e8       	ldi	r20, 0x80	; 128
 570:	5f e3       	ldi	r21, 0x3F	; 63
 572:	6d 81       	ldd	r22, Y+5	; 0x05
 574:	7e 81       	ldd	r23, Y+6	; 0x06
 576:	8f 81       	ldd	r24, Y+7	; 0x07
 578:	98 85       	ldd	r25, Y+8	; 0x08
 57a:	0e 94 ef 03 	call	0x7de	; 0x7de <__cmpsf2>
 57e:	88 23       	and	r24, r24
 580:	2c f4       	brge	.+10     	; 0x58c <main+0xa4>
		__ticks = 1;
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	89 87       	std	Y+9, r24	; 0x09
 588:	9a 87       	std	Y+10, r25	; 0x0a
 58a:	3f c0       	rjmp	.+126    	; 0x60a <main+0x122>
	else if (__tmp > 65535)
 58c:	20 e0       	ldi	r18, 0x00	; 0
 58e:	3f ef       	ldi	r19, 0xFF	; 255
 590:	4f e7       	ldi	r20, 0x7F	; 127
 592:	57 e4       	ldi	r21, 0x47	; 71
 594:	6d 81       	ldd	r22, Y+5	; 0x05
 596:	7e 81       	ldd	r23, Y+6	; 0x06
 598:	8f 81       	ldd	r24, Y+7	; 0x07
 59a:	98 85       	ldd	r25, Y+8	; 0x08
 59c:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__gesf2>
 5a0:	18 16       	cp	r1, r24
 5a2:	4c f5       	brge	.+82     	; 0x5f6 <main+0x10e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 5a4:	20 e0       	ldi	r18, 0x00	; 0
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	40 e2       	ldi	r20, 0x20	; 32
 5aa:	51 e4       	ldi	r21, 0x41	; 65
 5ac:	69 81       	ldd	r22, Y+1	; 0x01
 5ae:	7a 81       	ldd	r23, Y+2	; 0x02
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	9c 81       	ldd	r25, Y+4	; 0x04
 5b4:	0e 94 75 04 	call	0x8ea	; 0x8ea <__mulsf3>
 5b8:	dc 01       	movw	r26, r24
 5ba:	cb 01       	movw	r24, r22
 5bc:	bc 01       	movw	r22, r24
 5be:	cd 01       	movw	r24, r26
 5c0:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__fixunssfsi>
 5c4:	dc 01       	movw	r26, r24
 5c6:	cb 01       	movw	r24, r22
 5c8:	89 87       	std	Y+9, r24	; 0x09
 5ca:	9a 87       	std	Y+10, r25	; 0x0a
 5cc:	0f c0       	rjmp	.+30     	; 0x5ec <main+0x104>
 5ce:	80 e9       	ldi	r24, 0x90	; 144
 5d0:	91 e0       	ldi	r25, 0x01	; 1
 5d2:	8b 87       	std	Y+11, r24	; 0x0b
 5d4:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 5d6:	8b 85       	ldd	r24, Y+11	; 0x0b
 5d8:	9c 85       	ldd	r25, Y+12	; 0x0c
 5da:	01 97       	sbiw	r24, 0x01	; 1
 5dc:	f1 f7       	brne	.-4      	; 0x5da <main+0xf2>
 5de:	8b 87       	std	Y+11, r24	; 0x0b
 5e0:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 5e2:	89 85       	ldd	r24, Y+9	; 0x09
 5e4:	9a 85       	ldd	r25, Y+10	; 0x0a
 5e6:	01 97       	sbiw	r24, 0x01	; 1
 5e8:	89 87       	std	Y+9, r24	; 0x09
 5ea:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 5ec:	89 85       	ldd	r24, Y+9	; 0x09
 5ee:	9a 85       	ldd	r25, Y+10	; 0x0a
 5f0:	89 2b       	or	r24, r25
 5f2:	69 f7       	brne	.-38     	; 0x5ce <main+0xe6>
 5f4:	14 c0       	rjmp	.+40     	; 0x61e <main+0x136>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 5f6:	6d 81       	ldd	r22, Y+5	; 0x05
 5f8:	7e 81       	ldd	r23, Y+6	; 0x06
 5fa:	8f 81       	ldd	r24, Y+7	; 0x07
 5fc:	98 85       	ldd	r25, Y+8	; 0x08
 5fe:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__fixunssfsi>
 602:	dc 01       	movw	r26, r24
 604:	cb 01       	movw	r24, r22
 606:	89 87       	std	Y+9, r24	; 0x09
 608:	9a 87       	std	Y+10, r25	; 0x0a
 60a:	89 85       	ldd	r24, Y+9	; 0x09
 60c:	9a 85       	ldd	r25, Y+10	; 0x0a
 60e:	8d 87       	std	Y+13, r24	; 0x0d
 610:	9e 87       	std	Y+14, r25	; 0x0e
 612:	8d 85       	ldd	r24, Y+13	; 0x0d
 614:	9e 85       	ldd	r25, Y+14	; 0x0e
 616:	01 97       	sbiw	r24, 0x01	; 1
 618:	f1 f7       	brne	.-4      	; 0x616 <main+0x12e>
 61a:	8d 87       	std	Y+13, r24	; 0x0d
 61c:	9e 87       	std	Y+14, r25	; 0x0e
	
	
	
	while (1){
		// Start ADC conversion
		ADCA.CH0.CTRL |= 0x80;
 61e:	80 e0       	ldi	r24, 0x00	; 0
 620:	92 e0       	ldi	r25, 0x02	; 2
 622:	20 e0       	ldi	r18, 0x00	; 0
 624:	32 e0       	ldi	r19, 0x02	; 2
 626:	f9 01       	movw	r30, r18
 628:	20 a1       	ldd	r18, Z+32	; 0x20
 62a:	20 68       	ori	r18, 0x80	; 128
 62c:	fc 01       	movw	r30, r24
 62e:	20 a3       	std	Z+32, r18	; 0x20
		printf("encoder: %d",EncoderGetPos());
 630:	0e 94 93 01 	call	0x326	; 0x326 <EncoderGetPos>
 634:	29 2f       	mov	r18, r25
 636:	2f 93       	push	r18
 638:	8f 93       	push	r24
 63a:	8e e0       	ldi	r24, 0x0E	; 14
 63c:	90 e2       	ldi	r25, 0x20	; 32
 63e:	89 2f       	mov	r24, r25
 640:	8f 93       	push	r24
 642:	8e e0       	ldi	r24, 0x0E	; 14
 644:	90 e2       	ldi	r25, 0x20	; 32
 646:	8f 93       	push	r24
 648:	0e 94 0a 05 	call	0xa14	; 0xa14 <printf>
 64c:	0f 90       	pop	r0
 64e:	0f 90       	pop	r0
 650:	0f 90       	pop	r0
 652:	0f 90       	pop	r0
		
		
		//putchar('U');
	}
 654:	e4 cf       	rjmp	.-56     	; 0x61e <main+0x136>

00000656 <LEDInit>:
#include "LED.h"
#include <avr/io.h>

void LEDInit(void)
{
 656:	cf 93       	push	r28
 658:	df 93       	push	r29
 65a:	cd b7       	in	r28, 0x3d	; 61
 65c:	de b7       	in	r29, 0x3e	; 62
	PORTE.DIRSET=0b00001111;
 65e:	80 e8       	ldi	r24, 0x80	; 128
 660:	96 e0       	ldi	r25, 0x06	; 6
 662:	2f e0       	ldi	r18, 0x0F	; 15
 664:	fc 01       	movw	r30, r24
 666:	21 83       	std	Z+1, r18	; 0x01
	PORTE.PIN0CTRL=0b01000000;
 668:	80 e8       	ldi	r24, 0x80	; 128
 66a:	96 e0       	ldi	r25, 0x06	; 6
 66c:	20 e4       	ldi	r18, 0x40	; 64
 66e:	fc 01       	movw	r30, r24
 670:	20 8b       	std	Z+16, r18	; 0x10
	PORTE.PIN1CTRL=0b01000000;
 672:	80 e8       	ldi	r24, 0x80	; 128
 674:	96 e0       	ldi	r25, 0x06	; 6
 676:	20 e4       	ldi	r18, 0x40	; 64
 678:	fc 01       	movw	r30, r24
 67a:	21 8b       	std	Z+17, r18	; 0x11
	PORTE.PIN2CTRL=0b01000000;
 67c:	80 e8       	ldi	r24, 0x80	; 128
 67e:	96 e0       	ldi	r25, 0x06	; 6
 680:	20 e4       	ldi	r18, 0x40	; 64
 682:	fc 01       	movw	r30, r24
 684:	22 8b       	std	Z+18, r18	; 0x12
	PORTE.PIN3CTRL=0b01000000;
 686:	80 e8       	ldi	r24, 0x80	; 128
 688:	96 e0       	ldi	r25, 0x06	; 6
 68a:	20 e4       	ldi	r18, 0x40	; 64
 68c:	fc 01       	movw	r30, r24
 68e:	23 8b       	std	Z+19, r18	; 0x13
	
}
 690:	00 00       	nop
 692:	df 91       	pop	r29
 694:	cf 91       	pop	r28
 696:	08 95       	ret

00000698 <SpeakerInit>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "speaker.h"

void SpeakerInit(void)
{
 698:	cf 93       	push	r28
 69a:	df 93       	push	r29
 69c:	cd b7       	in	r28, 0x3d	; 61
 69e:	de b7       	in	r29, 0x3e	; 62
		//TCC1.CTRLB=
		//TCC1.CTRLC=
		//TCC1.CTRLD=
		//TCC1.CTRLE=
		
}
 6a0:	00 00       	nop
 6a2:	df 91       	pop	r29
 6a4:	cf 91       	pop	r28
 6a6:	08 95       	ret

000006a8 <SwitchInit>:
#include "switch.h"
#include <avr/io.h>

void SwitchInit(void)
{
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
 6ac:	cd b7       	in	r28, 0x3d	; 61
 6ae:	de b7       	in	r29, 0x3e	; 62
	PORTD.DIRCLR=0b11110001;
 6b0:	80 e6       	ldi	r24, 0x60	; 96
 6b2:	96 e0       	ldi	r25, 0x06	; 6
 6b4:	21 ef       	ldi	r18, 0xF1	; 241
 6b6:	fc 01       	movw	r30, r24
 6b8:	22 83       	std	Z+2, r18	; 0x02
	PORTD.PIN0CTRL=0b01011000;
 6ba:	80 e6       	ldi	r24, 0x60	; 96
 6bc:	96 e0       	ldi	r25, 0x06	; 6
 6be:	28 e5       	ldi	r18, 0x58	; 88
 6c0:	fc 01       	movw	r30, r24
 6c2:	20 8b       	std	Z+16, r18	; 0x10
	PORTD.PIN4CTRL=0b01011000;
 6c4:	80 e6       	ldi	r24, 0x60	; 96
 6c6:	96 e0       	ldi	r25, 0x06	; 6
 6c8:	28 e5       	ldi	r18, 0x58	; 88
 6ca:	fc 01       	movw	r30, r24
 6cc:	24 8b       	std	Z+20, r18	; 0x14
	PORTD.PIN5CTRL=0b01011000;
 6ce:	80 e6       	ldi	r24, 0x60	; 96
 6d0:	96 e0       	ldi	r25, 0x06	; 6
 6d2:	28 e5       	ldi	r18, 0x58	; 88
 6d4:	fc 01       	movw	r30, r24
 6d6:	25 8b       	std	Z+21, r18	; 0x15
	PORTD.PIN6CTRL=0b01011000;
 6d8:	80 e6       	ldi	r24, 0x60	; 96
 6da:	96 e0       	ldi	r25, 0x06	; 6
 6dc:	28 e5       	ldi	r18, 0x58	; 88
 6de:	fc 01       	movw	r30, r24
 6e0:	26 8b       	std	Z+22, r18	; 0x16
	PORTD.PIN7CTRL=0b01011000;
 6e2:	80 e6       	ldi	r24, 0x60	; 96
 6e4:	96 e0       	ldi	r25, 0x06	; 6
 6e6:	28 e5       	ldi	r18, 0x58	; 88
 6e8:	fc 01       	movw	r30, r24
 6ea:	27 8b       	std	Z+23, r18	; 0x17
}
 6ec:	00 00       	nop
 6ee:	df 91       	pop	r29
 6f0:	cf 91       	pop	r28
 6f2:	08 95       	ret

000006f4 <USARTInit>:
 int stdio_putchar(char c, FILE * stream);
 int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 6f4:	cf 93       	push	r28
 6f6:	df 93       	push	r29
 6f8:	cd b7       	in	r28, 0x3d	; 61
 6fa:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	
 6fc:	80 e4       	ldi	r24, 0x40	; 64
 6fe:	96 e0       	ldi	r25, 0x06	; 6
 700:	28 e0       	ldi	r18, 0x08	; 8
 702:	fc 01       	movw	r30, r24
 704:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 706:	80 e4       	ldi	r24, 0x40	; 64
 708:	96 e0       	ldi	r25, 0x06	; 6
 70a:	24 e0       	ldi	r18, 0x04	; 4
 70c:	fc 01       	movw	r30, r24
 70e:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000;
 710:	80 ea       	ldi	r24, 0xA0	; 160
 712:	98 e0       	ldi	r25, 0x08	; 8
 714:	fc 01       	movw	r30, r24
 716:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000;
 718:	80 ea       	ldi	r24, 0xA0	; 160
 71a:	98 e0       	ldi	r25, 0x08	; 8
 71c:	28 e1       	ldi	r18, 0x18	; 24
 71e:	fc 01       	movw	r30, r24
 720:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011;
 722:	80 ea       	ldi	r24, 0xA0	; 160
 724:	98 e0       	ldi	r25, 0x08	; 8
 726:	23 e0       	ldi	r18, 0x03	; 3
 728:	fc 01       	movw	r30, r24
 72a:	25 83       	std	Z+5, r18	; 0x05
	
	USART.BAUDCTRLA=0xD7; //BSEL=3301, BSCALE=-5 9600 baud
 72c:	80 ea       	ldi	r24, 0xA0	; 160
 72e:	98 e0       	ldi	r25, 0x08	; 8
 730:	27 ed       	ldi	r18, 0xD7	; 215
 732:	fc 01       	movw	r30, r24
 734:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0x93; 
 736:	80 ea       	ldi	r24, 0xA0	; 160
 738:	98 e0       	ldi	r25, 0x08	; 8
 73a:	23 e9       	ldi	r18, 0x93	; 147
 73c:	fc 01       	movw	r30, r24
 73e:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio;
 740:	80 e0       	ldi	r24, 0x00	; 0
 742:	90 e2       	ldi	r25, 0x20	; 32
 744:	80 93 1f 20 	sts	0x201F, r24	; 0x80201f <__iob+0x2>
 748:	90 93 20 20 	sts	0x2020, r25	; 0x802020 <__iob+0x3>
	stdin=&UsartStdio;
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	90 e2       	ldi	r25, 0x20	; 32
 750:	80 93 1d 20 	sts	0x201D, r24	; 0x80201d <__iob>
 754:	90 93 1e 20 	sts	0x201E, r25	; 0x80201e <__iob+0x1>
}
 758:	00 00       	nop
 75a:	df 91       	pop	r29
 75c:	cf 91       	pop	r28
 75e:	08 95       	ret

00000760 <stdio_putchar>:


int stdio_putchar(char c, FILE * stream)
{
 760:	cf 93       	push	r28
 762:	df 93       	push	r29
 764:	00 d0       	rcall	.+0      	; 0x766 <stdio_putchar+0x6>
 766:	1f 92       	push	r1
 768:	cd b7       	in	r28, 0x3d	; 61
 76a:	de b7       	in	r29, 0x3e	; 62
 76c:	89 83       	std	Y+1, r24	; 0x01
 76e:	6a 83       	std	Y+2, r22	; 0x02
 770:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = c;
 772:	80 ea       	ldi	r24, 0xA0	; 160
 774:	98 e0       	ldi	r25, 0x08	; 8
 776:	29 81       	ldd	r18, Y+1	; 0x01
 778:	fc 01       	movw	r30, r24
 77a:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000));
 77c:	00 00       	nop
 77e:	80 ea       	ldi	r24, 0xA0	; 160
 780:	98 e0       	ldi	r25, 0x08	; 8
 782:	fc 01       	movw	r30, r24
 784:	81 81       	ldd	r24, Z+1	; 0x01
 786:	88 2f       	mov	r24, r24
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	80 74       	andi	r24, 0x40	; 64
 78c:	99 27       	eor	r25, r25
 78e:	89 2b       	or	r24, r25
 790:	b1 f3       	breq	.-20     	; 0x77e <stdio_putchar+0x1e>
	USART.STATUS=0b01000000;
 792:	80 ea       	ldi	r24, 0xA0	; 160
 794:	98 e0       	ldi	r25, 0x08	; 8
 796:	20 e4       	ldi	r18, 0x40	; 64
 798:	fc 01       	movw	r30, r24
 79a:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 79c:	80 e0       	ldi	r24, 0x00	; 0
 79e:	90 e0       	ldi	r25, 0x00	; 0
}
 7a0:	23 96       	adiw	r28, 0x03	; 3
 7a2:	cd bf       	out	0x3d, r28	; 61
 7a4:	de bf       	out	0x3e, r29	; 62
 7a6:	df 91       	pop	r29
 7a8:	cf 91       	pop	r28
 7aa:	08 95       	ret

000007ac <stdio_getchar>:
	
int stdio_getchar(FILE *stream)
{
 7ac:	cf 93       	push	r28
 7ae:	df 93       	push	r29
 7b0:	00 d0       	rcall	.+0      	; 0x7b2 <stdio_getchar+0x6>
 7b2:	cd b7       	in	r28, 0x3d	; 61
 7b4:	de b7       	in	r29, 0x3e	; 62
 7b6:	89 83       	std	Y+1, r24	; 0x01
 7b8:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000));
 7ba:	00 00       	nop
 7bc:	80 ea       	ldi	r24, 0xA0	; 160
 7be:	98 e0       	ldi	r25, 0x08	; 8
 7c0:	fc 01       	movw	r30, r24
 7c2:	81 81       	ldd	r24, Z+1	; 0x01
 7c4:	88 23       	and	r24, r24
 7c6:	d4 f7       	brge	.-12     	; 0x7bc <stdio_getchar+0x10>
	return USART.DATA;
 7c8:	80 ea       	ldi	r24, 0xA0	; 160
 7ca:	98 e0       	ldi	r25, 0x08	; 8
 7cc:	fc 01       	movw	r30, r24
 7ce:	80 81       	ld	r24, Z
 7d0:	88 2f       	mov	r24, r24
 7d2:	90 e0       	ldi	r25, 0x00	; 0
}
 7d4:	0f 90       	pop	r0
 7d6:	0f 90       	pop	r0
 7d8:	df 91       	pop	r29
 7da:	cf 91       	pop	r28
 7dc:	08 95       	ret

000007de <__cmpsf2>:
 7de:	0e 94 23 04 	call	0x846	; 0x846 <__fp_cmp>
 7e2:	08 f4       	brcc	.+2      	; 0x7e6 <__cmpsf2+0x8>
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	08 95       	ret

000007e8 <__fixunssfsi>:
 7e8:	0e 94 4f 04 	call	0x89e	; 0x89e <__fp_splitA>
 7ec:	88 f0       	brcs	.+34     	; 0x810 <__fixunssfsi+0x28>
 7ee:	9f 57       	subi	r25, 0x7F	; 127
 7f0:	98 f0       	brcs	.+38     	; 0x818 <__fixunssfsi+0x30>
 7f2:	b9 2f       	mov	r27, r25
 7f4:	99 27       	eor	r25, r25
 7f6:	b7 51       	subi	r27, 0x17	; 23
 7f8:	b0 f0       	brcs	.+44     	; 0x826 <__fixunssfsi+0x3e>
 7fa:	e1 f0       	breq	.+56     	; 0x834 <__fixunssfsi+0x4c>
 7fc:	66 0f       	add	r22, r22
 7fe:	77 1f       	adc	r23, r23
 800:	88 1f       	adc	r24, r24
 802:	99 1f       	adc	r25, r25
 804:	1a f0       	brmi	.+6      	; 0x80c <__fixunssfsi+0x24>
 806:	ba 95       	dec	r27
 808:	c9 f7       	brne	.-14     	; 0x7fc <__fixunssfsi+0x14>
 80a:	14 c0       	rjmp	.+40     	; 0x834 <__fixunssfsi+0x4c>
 80c:	b1 30       	cpi	r27, 0x01	; 1
 80e:	91 f0       	breq	.+36     	; 0x834 <__fixunssfsi+0x4c>
 810:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_zero>
 814:	b1 e0       	ldi	r27, 0x01	; 1
 816:	08 95       	ret
 818:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_zero>
 81c:	67 2f       	mov	r22, r23
 81e:	78 2f       	mov	r23, r24
 820:	88 27       	eor	r24, r24
 822:	b8 5f       	subi	r27, 0xF8	; 248
 824:	39 f0       	breq	.+14     	; 0x834 <__fixunssfsi+0x4c>
 826:	b9 3f       	cpi	r27, 0xF9	; 249
 828:	cc f3       	brlt	.-14     	; 0x81c <__fixunssfsi+0x34>
 82a:	86 95       	lsr	r24
 82c:	77 95       	ror	r23
 82e:	67 95       	ror	r22
 830:	b3 95       	inc	r27
 832:	d9 f7       	brne	.-10     	; 0x82a <__fixunssfsi+0x42>
 834:	3e f4       	brtc	.+14     	; 0x844 <__fixunssfsi+0x5c>
 836:	90 95       	com	r25
 838:	80 95       	com	r24
 83a:	70 95       	com	r23
 83c:	61 95       	neg	r22
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	08 95       	ret

00000846 <__fp_cmp>:
 846:	99 0f       	add	r25, r25
 848:	00 08       	sbc	r0, r0
 84a:	55 0f       	add	r21, r21
 84c:	aa 0b       	sbc	r26, r26
 84e:	e0 e8       	ldi	r30, 0x80	; 128
 850:	fe ef       	ldi	r31, 0xFE	; 254
 852:	16 16       	cp	r1, r22
 854:	17 06       	cpc	r1, r23
 856:	e8 07       	cpc	r30, r24
 858:	f9 07       	cpc	r31, r25
 85a:	c0 f0       	brcs	.+48     	; 0x88c <__fp_cmp+0x46>
 85c:	12 16       	cp	r1, r18
 85e:	13 06       	cpc	r1, r19
 860:	e4 07       	cpc	r30, r20
 862:	f5 07       	cpc	r31, r21
 864:	98 f0       	brcs	.+38     	; 0x88c <__fp_cmp+0x46>
 866:	62 1b       	sub	r22, r18
 868:	73 0b       	sbc	r23, r19
 86a:	84 0b       	sbc	r24, r20
 86c:	95 0b       	sbc	r25, r21
 86e:	39 f4       	brne	.+14     	; 0x87e <__fp_cmp+0x38>
 870:	0a 26       	eor	r0, r26
 872:	61 f0       	breq	.+24     	; 0x88c <__fp_cmp+0x46>
 874:	23 2b       	or	r18, r19
 876:	24 2b       	or	r18, r20
 878:	25 2b       	or	r18, r21
 87a:	21 f4       	brne	.+8      	; 0x884 <__fp_cmp+0x3e>
 87c:	08 95       	ret
 87e:	0a 26       	eor	r0, r26
 880:	09 f4       	brne	.+2      	; 0x884 <__fp_cmp+0x3e>
 882:	a1 40       	sbci	r26, 0x01	; 1
 884:	a6 95       	lsr	r26
 886:	8f ef       	ldi	r24, 0xFF	; 255
 888:	81 1d       	adc	r24, r1
 88a:	81 1d       	adc	r24, r1
 88c:	08 95       	ret

0000088e <__fp_split3>:
 88e:	57 fd       	sbrc	r21, 7
 890:	90 58       	subi	r25, 0x80	; 128
 892:	44 0f       	add	r20, r20
 894:	55 1f       	adc	r21, r21
 896:	59 f0       	breq	.+22     	; 0x8ae <__fp_splitA+0x10>
 898:	5f 3f       	cpi	r21, 0xFF	; 255
 89a:	71 f0       	breq	.+28     	; 0x8b8 <__fp_splitA+0x1a>
 89c:	47 95       	ror	r20

0000089e <__fp_splitA>:
 89e:	88 0f       	add	r24, r24
 8a0:	97 fb       	bst	r25, 7
 8a2:	99 1f       	adc	r25, r25
 8a4:	61 f0       	breq	.+24     	; 0x8be <__fp_splitA+0x20>
 8a6:	9f 3f       	cpi	r25, 0xFF	; 255
 8a8:	79 f0       	breq	.+30     	; 0x8c8 <__fp_splitA+0x2a>
 8aa:	87 95       	ror	r24
 8ac:	08 95       	ret
 8ae:	12 16       	cp	r1, r18
 8b0:	13 06       	cpc	r1, r19
 8b2:	14 06       	cpc	r1, r20
 8b4:	55 1f       	adc	r21, r21
 8b6:	f2 cf       	rjmp	.-28     	; 0x89c <__fp_split3+0xe>
 8b8:	46 95       	lsr	r20
 8ba:	f1 df       	rcall	.-30     	; 0x89e <__fp_splitA>
 8bc:	08 c0       	rjmp	.+16     	; 0x8ce <__fp_splitA+0x30>
 8be:	16 16       	cp	r1, r22
 8c0:	17 06       	cpc	r1, r23
 8c2:	18 06       	cpc	r1, r24
 8c4:	99 1f       	adc	r25, r25
 8c6:	f1 cf       	rjmp	.-30     	; 0x8aa <__fp_splitA+0xc>
 8c8:	86 95       	lsr	r24
 8ca:	71 05       	cpc	r23, r1
 8cc:	61 05       	cpc	r22, r1
 8ce:	08 94       	sec
 8d0:	08 95       	ret

000008d2 <__fp_zero>:
 8d2:	e8 94       	clt

000008d4 <__fp_szero>:
 8d4:	bb 27       	eor	r27, r27
 8d6:	66 27       	eor	r22, r22
 8d8:	77 27       	eor	r23, r23
 8da:	cb 01       	movw	r24, r22
 8dc:	97 f9       	bld	r25, 7
 8de:	08 95       	ret

000008e0 <__gesf2>:
 8e0:	0e 94 23 04 	call	0x846	; 0x846 <__fp_cmp>
 8e4:	08 f4       	brcc	.+2      	; 0x8e8 <__gesf2+0x8>
 8e6:	8f ef       	ldi	r24, 0xFF	; 255
 8e8:	08 95       	ret

000008ea <__mulsf3>:
 8ea:	0e 94 88 04 	call	0x910	; 0x910 <__mulsf3x>
 8ee:	0c 94 f9 04 	jmp	0x9f2	; 0x9f2 <__fp_round>
 8f2:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__fp_pscA>
 8f6:	38 f0       	brcs	.+14     	; 0x906 <__mulsf3+0x1c>
 8f8:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__fp_pscB>
 8fc:	20 f0       	brcs	.+8      	; 0x906 <__mulsf3+0x1c>
 8fe:	95 23       	and	r25, r21
 900:	11 f0       	breq	.+4      	; 0x906 <__mulsf3+0x1c>
 902:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_inf>
 906:	0c 94 e8 04 	jmp	0x9d0	; 0x9d0 <__fp_nan>
 90a:	11 24       	eor	r1, r1
 90c:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>

00000910 <__mulsf3x>:
 910:	0e 94 47 04 	call	0x88e	; 0x88e <__fp_split3>
 914:	70 f3       	brcs	.-36     	; 0x8f2 <__mulsf3+0x8>

00000916 <__mulsf3_pse>:
 916:	95 9f       	mul	r25, r21
 918:	c1 f3       	breq	.-16     	; 0x90a <__mulsf3+0x20>
 91a:	95 0f       	add	r25, r21
 91c:	50 e0       	ldi	r21, 0x00	; 0
 91e:	55 1f       	adc	r21, r21
 920:	62 9f       	mul	r22, r18
 922:	f0 01       	movw	r30, r0
 924:	72 9f       	mul	r23, r18
 926:	bb 27       	eor	r27, r27
 928:	f0 0d       	add	r31, r0
 92a:	b1 1d       	adc	r27, r1
 92c:	63 9f       	mul	r22, r19
 92e:	aa 27       	eor	r26, r26
 930:	f0 0d       	add	r31, r0
 932:	b1 1d       	adc	r27, r1
 934:	aa 1f       	adc	r26, r26
 936:	64 9f       	mul	r22, r20
 938:	66 27       	eor	r22, r22
 93a:	b0 0d       	add	r27, r0
 93c:	a1 1d       	adc	r26, r1
 93e:	66 1f       	adc	r22, r22
 940:	82 9f       	mul	r24, r18
 942:	22 27       	eor	r18, r18
 944:	b0 0d       	add	r27, r0
 946:	a1 1d       	adc	r26, r1
 948:	62 1f       	adc	r22, r18
 94a:	73 9f       	mul	r23, r19
 94c:	b0 0d       	add	r27, r0
 94e:	a1 1d       	adc	r26, r1
 950:	62 1f       	adc	r22, r18
 952:	83 9f       	mul	r24, r19
 954:	a0 0d       	add	r26, r0
 956:	61 1d       	adc	r22, r1
 958:	22 1f       	adc	r18, r18
 95a:	74 9f       	mul	r23, r20
 95c:	33 27       	eor	r19, r19
 95e:	a0 0d       	add	r26, r0
 960:	61 1d       	adc	r22, r1
 962:	23 1f       	adc	r18, r19
 964:	84 9f       	mul	r24, r20
 966:	60 0d       	add	r22, r0
 968:	21 1d       	adc	r18, r1
 96a:	82 2f       	mov	r24, r18
 96c:	76 2f       	mov	r23, r22
 96e:	6a 2f       	mov	r22, r26
 970:	11 24       	eor	r1, r1
 972:	9f 57       	subi	r25, 0x7F	; 127
 974:	50 40       	sbci	r21, 0x00	; 0
 976:	9a f0       	brmi	.+38     	; 0x99e <__mulsf3_pse+0x88>
 978:	f1 f0       	breq	.+60     	; 0x9b6 <__mulsf3_pse+0xa0>
 97a:	88 23       	and	r24, r24
 97c:	4a f0       	brmi	.+18     	; 0x990 <__mulsf3_pse+0x7a>
 97e:	ee 0f       	add	r30, r30
 980:	ff 1f       	adc	r31, r31
 982:	bb 1f       	adc	r27, r27
 984:	66 1f       	adc	r22, r22
 986:	77 1f       	adc	r23, r23
 988:	88 1f       	adc	r24, r24
 98a:	91 50       	subi	r25, 0x01	; 1
 98c:	50 40       	sbci	r21, 0x00	; 0
 98e:	a9 f7       	brne	.-22     	; 0x97a <__mulsf3_pse+0x64>
 990:	9e 3f       	cpi	r25, 0xFE	; 254
 992:	51 05       	cpc	r21, r1
 994:	80 f0       	brcs	.+32     	; 0x9b6 <__mulsf3_pse+0xa0>
 996:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_inf>
 99a:	0c 94 6a 04 	jmp	0x8d4	; 0x8d4 <__fp_szero>
 99e:	5f 3f       	cpi	r21, 0xFF	; 255
 9a0:	e4 f3       	brlt	.-8      	; 0x99a <__mulsf3_pse+0x84>
 9a2:	98 3e       	cpi	r25, 0xE8	; 232
 9a4:	d4 f3       	brlt	.-12     	; 0x99a <__mulsf3_pse+0x84>
 9a6:	86 95       	lsr	r24
 9a8:	77 95       	ror	r23
 9aa:	67 95       	ror	r22
 9ac:	b7 95       	ror	r27
 9ae:	f7 95       	ror	r31
 9b0:	e7 95       	ror	r30
 9b2:	9f 5f       	subi	r25, 0xFF	; 255
 9b4:	c1 f7       	brne	.-16     	; 0x9a6 <__mulsf3_pse+0x90>
 9b6:	fe 2b       	or	r31, r30
 9b8:	88 0f       	add	r24, r24
 9ba:	91 1d       	adc	r25, r1
 9bc:	96 95       	lsr	r25
 9be:	87 95       	ror	r24
 9c0:	97 f9       	bld	r25, 7
 9c2:	08 95       	ret

000009c4 <__fp_inf>:
 9c4:	97 f9       	bld	r25, 7
 9c6:	9f 67       	ori	r25, 0x7F	; 127
 9c8:	80 e8       	ldi	r24, 0x80	; 128
 9ca:	70 e0       	ldi	r23, 0x00	; 0
 9cc:	60 e0       	ldi	r22, 0x00	; 0
 9ce:	08 95       	ret

000009d0 <__fp_nan>:
 9d0:	9f ef       	ldi	r25, 0xFF	; 255
 9d2:	80 ec       	ldi	r24, 0xC0	; 192
 9d4:	08 95       	ret

000009d6 <__fp_pscA>:
 9d6:	00 24       	eor	r0, r0
 9d8:	0a 94       	dec	r0
 9da:	16 16       	cp	r1, r22
 9dc:	17 06       	cpc	r1, r23
 9de:	18 06       	cpc	r1, r24
 9e0:	09 06       	cpc	r0, r25
 9e2:	08 95       	ret

000009e4 <__fp_pscB>:
 9e4:	00 24       	eor	r0, r0
 9e6:	0a 94       	dec	r0
 9e8:	12 16       	cp	r1, r18
 9ea:	13 06       	cpc	r1, r19
 9ec:	14 06       	cpc	r1, r20
 9ee:	05 06       	cpc	r0, r21
 9f0:	08 95       	ret

000009f2 <__fp_round>:
 9f2:	09 2e       	mov	r0, r25
 9f4:	03 94       	inc	r0
 9f6:	00 0c       	add	r0, r0
 9f8:	11 f4       	brne	.+4      	; 0x9fe <__fp_round+0xc>
 9fa:	88 23       	and	r24, r24
 9fc:	52 f0       	brmi	.+20     	; 0xa12 <__fp_round+0x20>
 9fe:	bb 0f       	add	r27, r27
 a00:	40 f4       	brcc	.+16     	; 0xa12 <__fp_round+0x20>
 a02:	bf 2b       	or	r27, r31
 a04:	11 f4       	brne	.+4      	; 0xa0a <__fp_round+0x18>
 a06:	60 ff       	sbrs	r22, 0
 a08:	04 c0       	rjmp	.+8      	; 0xa12 <__fp_round+0x20>
 a0a:	6f 5f       	subi	r22, 0xFF	; 255
 a0c:	7f 4f       	sbci	r23, 0xFF	; 255
 a0e:	8f 4f       	sbci	r24, 0xFF	; 255
 a10:	9f 4f       	sbci	r25, 0xFF	; 255
 a12:	08 95       	ret

00000a14 <printf>:
 a14:	a0 e0       	ldi	r26, 0x00	; 0
 a16:	b0 e0       	ldi	r27, 0x00	; 0
 a18:	e0 e1       	ldi	r30, 0x10	; 16
 a1a:	f5 e0       	ldi	r31, 0x05	; 5
 a1c:	0c 94 c1 07 	jmp	0xf82	; 0xf82 <__prologue_saves__+0x20>
 a20:	ae 01       	movw	r20, r28
 a22:	4b 5f       	subi	r20, 0xFB	; 251
 a24:	5f 4f       	sbci	r21, 0xFF	; 255
 a26:	fa 01       	movw	r30, r20
 a28:	61 91       	ld	r22, Z+
 a2a:	71 91       	ld	r23, Z+
 a2c:	af 01       	movw	r20, r30
 a2e:	80 91 1f 20 	lds	r24, 0x201F	; 0x80201f <__iob+0x2>
 a32:	90 91 20 20 	lds	r25, 0x2020	; 0x802020 <__iob+0x3>
 a36:	0e 94 20 05 	call	0xa40	; 0xa40 <vfprintf>
 a3a:	e2 e0       	ldi	r30, 0x02	; 2
 a3c:	0c 94 da 07 	jmp	0xfb4	; 0xfb4 <__epilogue_restores__+0x20>

00000a40 <vfprintf>:
 a40:	ab e0       	ldi	r26, 0x0B	; 11
 a42:	b0 e0       	ldi	r27, 0x00	; 0
 a44:	e6 e2       	ldi	r30, 0x26	; 38
 a46:	f5 e0       	ldi	r31, 0x05	; 5
 a48:	0c 94 b1 07 	jmp	0xf62	; 0xf62 <__prologue_saves__>
 a4c:	6c 01       	movw	r12, r24
 a4e:	7b 01       	movw	r14, r22
 a50:	8a 01       	movw	r16, r20
 a52:	fc 01       	movw	r30, r24
 a54:	16 82       	std	Z+6, r1	; 0x06
 a56:	17 82       	std	Z+7, r1	; 0x07
 a58:	83 81       	ldd	r24, Z+3	; 0x03
 a5a:	81 ff       	sbrs	r24, 1
 a5c:	cc c1       	rjmp	.+920    	; 0xdf6 <vfprintf+0x3b6>
 a5e:	ce 01       	movw	r24, r28
 a60:	01 96       	adiw	r24, 0x01	; 1
 a62:	3c 01       	movw	r6, r24
 a64:	f6 01       	movw	r30, r12
 a66:	93 81       	ldd	r25, Z+3	; 0x03
 a68:	f7 01       	movw	r30, r14
 a6a:	93 fd       	sbrc	r25, 3
 a6c:	85 91       	lpm	r24, Z+
 a6e:	93 ff       	sbrs	r25, 3
 a70:	81 91       	ld	r24, Z+
 a72:	7f 01       	movw	r14, r30
 a74:	88 23       	and	r24, r24
 a76:	09 f4       	brne	.+2      	; 0xa7a <vfprintf+0x3a>
 a78:	ba c1       	rjmp	.+884    	; 0xdee <vfprintf+0x3ae>
 a7a:	85 32       	cpi	r24, 0x25	; 37
 a7c:	39 f4       	brne	.+14     	; 0xa8c <vfprintf+0x4c>
 a7e:	93 fd       	sbrc	r25, 3
 a80:	85 91       	lpm	r24, Z+
 a82:	93 ff       	sbrs	r25, 3
 a84:	81 91       	ld	r24, Z+
 a86:	7f 01       	movw	r14, r30
 a88:	85 32       	cpi	r24, 0x25	; 37
 a8a:	29 f4       	brne	.+10     	; 0xa96 <vfprintf+0x56>
 a8c:	b6 01       	movw	r22, r12
 a8e:	90 e0       	ldi	r25, 0x00	; 0
 a90:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 a94:	e7 cf       	rjmp	.-50     	; 0xa64 <vfprintf+0x24>
 a96:	91 2c       	mov	r9, r1
 a98:	21 2c       	mov	r2, r1
 a9a:	31 2c       	mov	r3, r1
 a9c:	ff e1       	ldi	r31, 0x1F	; 31
 a9e:	f3 15       	cp	r31, r3
 aa0:	d8 f0       	brcs	.+54     	; 0xad8 <vfprintf+0x98>
 aa2:	8b 32       	cpi	r24, 0x2B	; 43
 aa4:	79 f0       	breq	.+30     	; 0xac4 <vfprintf+0x84>
 aa6:	38 f4       	brcc	.+14     	; 0xab6 <vfprintf+0x76>
 aa8:	80 32       	cpi	r24, 0x20	; 32
 aaa:	79 f0       	breq	.+30     	; 0xaca <vfprintf+0x8a>
 aac:	83 32       	cpi	r24, 0x23	; 35
 aae:	a1 f4       	brne	.+40     	; 0xad8 <vfprintf+0x98>
 ab0:	23 2d       	mov	r18, r3
 ab2:	20 61       	ori	r18, 0x10	; 16
 ab4:	1d c0       	rjmp	.+58     	; 0xaf0 <vfprintf+0xb0>
 ab6:	8d 32       	cpi	r24, 0x2D	; 45
 ab8:	61 f0       	breq	.+24     	; 0xad2 <vfprintf+0x92>
 aba:	80 33       	cpi	r24, 0x30	; 48
 abc:	69 f4       	brne	.+26     	; 0xad8 <vfprintf+0x98>
 abe:	23 2d       	mov	r18, r3
 ac0:	21 60       	ori	r18, 0x01	; 1
 ac2:	16 c0       	rjmp	.+44     	; 0xaf0 <vfprintf+0xb0>
 ac4:	83 2d       	mov	r24, r3
 ac6:	82 60       	ori	r24, 0x02	; 2
 ac8:	38 2e       	mov	r3, r24
 aca:	e3 2d       	mov	r30, r3
 acc:	e4 60       	ori	r30, 0x04	; 4
 ace:	3e 2e       	mov	r3, r30
 ad0:	2a c0       	rjmp	.+84     	; 0xb26 <vfprintf+0xe6>
 ad2:	f3 2d       	mov	r31, r3
 ad4:	f8 60       	ori	r31, 0x08	; 8
 ad6:	1d c0       	rjmp	.+58     	; 0xb12 <vfprintf+0xd2>
 ad8:	37 fc       	sbrc	r3, 7
 ada:	2d c0       	rjmp	.+90     	; 0xb36 <vfprintf+0xf6>
 adc:	20 ed       	ldi	r18, 0xD0	; 208
 ade:	28 0f       	add	r18, r24
 ae0:	2a 30       	cpi	r18, 0x0A	; 10
 ae2:	40 f0       	brcs	.+16     	; 0xaf4 <vfprintf+0xb4>
 ae4:	8e 32       	cpi	r24, 0x2E	; 46
 ae6:	b9 f4       	brne	.+46     	; 0xb16 <vfprintf+0xd6>
 ae8:	36 fc       	sbrc	r3, 6
 aea:	81 c1       	rjmp	.+770    	; 0xdee <vfprintf+0x3ae>
 aec:	23 2d       	mov	r18, r3
 aee:	20 64       	ori	r18, 0x40	; 64
 af0:	32 2e       	mov	r3, r18
 af2:	19 c0       	rjmp	.+50     	; 0xb26 <vfprintf+0xe6>
 af4:	36 fe       	sbrs	r3, 6
 af6:	06 c0       	rjmp	.+12     	; 0xb04 <vfprintf+0xc4>
 af8:	8a e0       	ldi	r24, 0x0A	; 10
 afa:	98 9e       	mul	r9, r24
 afc:	20 0d       	add	r18, r0
 afe:	11 24       	eor	r1, r1
 b00:	92 2e       	mov	r9, r18
 b02:	11 c0       	rjmp	.+34     	; 0xb26 <vfprintf+0xe6>
 b04:	ea e0       	ldi	r30, 0x0A	; 10
 b06:	2e 9e       	mul	r2, r30
 b08:	20 0d       	add	r18, r0
 b0a:	11 24       	eor	r1, r1
 b0c:	22 2e       	mov	r2, r18
 b0e:	f3 2d       	mov	r31, r3
 b10:	f0 62       	ori	r31, 0x20	; 32
 b12:	3f 2e       	mov	r3, r31
 b14:	08 c0       	rjmp	.+16     	; 0xb26 <vfprintf+0xe6>
 b16:	8c 36       	cpi	r24, 0x6C	; 108
 b18:	21 f4       	brne	.+8      	; 0xb22 <vfprintf+0xe2>
 b1a:	83 2d       	mov	r24, r3
 b1c:	80 68       	ori	r24, 0x80	; 128
 b1e:	38 2e       	mov	r3, r24
 b20:	02 c0       	rjmp	.+4      	; 0xb26 <vfprintf+0xe6>
 b22:	88 36       	cpi	r24, 0x68	; 104
 b24:	41 f4       	brne	.+16     	; 0xb36 <vfprintf+0xf6>
 b26:	f7 01       	movw	r30, r14
 b28:	93 fd       	sbrc	r25, 3
 b2a:	85 91       	lpm	r24, Z+
 b2c:	93 ff       	sbrs	r25, 3
 b2e:	81 91       	ld	r24, Z+
 b30:	7f 01       	movw	r14, r30
 b32:	81 11       	cpse	r24, r1
 b34:	b3 cf       	rjmp	.-154    	; 0xa9c <vfprintf+0x5c>
 b36:	98 2f       	mov	r25, r24
 b38:	9f 7d       	andi	r25, 0xDF	; 223
 b3a:	95 54       	subi	r25, 0x45	; 69
 b3c:	93 30       	cpi	r25, 0x03	; 3
 b3e:	28 f4       	brcc	.+10     	; 0xb4a <vfprintf+0x10a>
 b40:	0c 5f       	subi	r16, 0xFC	; 252
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	9f e3       	ldi	r25, 0x3F	; 63
 b46:	99 83       	std	Y+1, r25	; 0x01
 b48:	0d c0       	rjmp	.+26     	; 0xb64 <vfprintf+0x124>
 b4a:	83 36       	cpi	r24, 0x63	; 99
 b4c:	31 f0       	breq	.+12     	; 0xb5a <vfprintf+0x11a>
 b4e:	83 37       	cpi	r24, 0x73	; 115
 b50:	71 f0       	breq	.+28     	; 0xb6e <vfprintf+0x12e>
 b52:	83 35       	cpi	r24, 0x53	; 83
 b54:	09 f0       	breq	.+2      	; 0xb58 <vfprintf+0x118>
 b56:	59 c0       	rjmp	.+178    	; 0xc0a <vfprintf+0x1ca>
 b58:	21 c0       	rjmp	.+66     	; 0xb9c <vfprintf+0x15c>
 b5a:	f8 01       	movw	r30, r16
 b5c:	80 81       	ld	r24, Z
 b5e:	89 83       	std	Y+1, r24	; 0x01
 b60:	0e 5f       	subi	r16, 0xFE	; 254
 b62:	1f 4f       	sbci	r17, 0xFF	; 255
 b64:	88 24       	eor	r8, r8
 b66:	83 94       	inc	r8
 b68:	91 2c       	mov	r9, r1
 b6a:	53 01       	movw	r10, r6
 b6c:	13 c0       	rjmp	.+38     	; 0xb94 <vfprintf+0x154>
 b6e:	28 01       	movw	r4, r16
 b70:	f2 e0       	ldi	r31, 0x02	; 2
 b72:	4f 0e       	add	r4, r31
 b74:	51 1c       	adc	r5, r1
 b76:	f8 01       	movw	r30, r16
 b78:	a0 80       	ld	r10, Z
 b7a:	b1 80       	ldd	r11, Z+1	; 0x01
 b7c:	36 fe       	sbrs	r3, 6
 b7e:	03 c0       	rjmp	.+6      	; 0xb86 <vfprintf+0x146>
 b80:	69 2d       	mov	r22, r9
 b82:	70 e0       	ldi	r23, 0x00	; 0
 b84:	02 c0       	rjmp	.+4      	; 0xb8a <vfprintf+0x14a>
 b86:	6f ef       	ldi	r22, 0xFF	; 255
 b88:	7f ef       	ldi	r23, 0xFF	; 255
 b8a:	c5 01       	movw	r24, r10
 b8c:	0e 94 0c 07 	call	0xe18	; 0xe18 <strnlen>
 b90:	4c 01       	movw	r8, r24
 b92:	82 01       	movw	r16, r4
 b94:	f3 2d       	mov	r31, r3
 b96:	ff 77       	andi	r31, 0x7F	; 127
 b98:	3f 2e       	mov	r3, r31
 b9a:	16 c0       	rjmp	.+44     	; 0xbc8 <vfprintf+0x188>
 b9c:	28 01       	movw	r4, r16
 b9e:	22 e0       	ldi	r18, 0x02	; 2
 ba0:	42 0e       	add	r4, r18
 ba2:	51 1c       	adc	r5, r1
 ba4:	f8 01       	movw	r30, r16
 ba6:	a0 80       	ld	r10, Z
 ba8:	b1 80       	ldd	r11, Z+1	; 0x01
 baa:	36 fe       	sbrs	r3, 6
 bac:	03 c0       	rjmp	.+6      	; 0xbb4 <vfprintf+0x174>
 bae:	69 2d       	mov	r22, r9
 bb0:	70 e0       	ldi	r23, 0x00	; 0
 bb2:	02 c0       	rjmp	.+4      	; 0xbb8 <vfprintf+0x178>
 bb4:	6f ef       	ldi	r22, 0xFF	; 255
 bb6:	7f ef       	ldi	r23, 0xFF	; 255
 bb8:	c5 01       	movw	r24, r10
 bba:	0e 94 01 07 	call	0xe02	; 0xe02 <strnlen_P>
 bbe:	4c 01       	movw	r8, r24
 bc0:	f3 2d       	mov	r31, r3
 bc2:	f0 68       	ori	r31, 0x80	; 128
 bc4:	3f 2e       	mov	r3, r31
 bc6:	82 01       	movw	r16, r4
 bc8:	33 fc       	sbrc	r3, 3
 bca:	1b c0       	rjmp	.+54     	; 0xc02 <vfprintf+0x1c2>
 bcc:	82 2d       	mov	r24, r2
 bce:	90 e0       	ldi	r25, 0x00	; 0
 bd0:	88 16       	cp	r8, r24
 bd2:	99 06       	cpc	r9, r25
 bd4:	b0 f4       	brcc	.+44     	; 0xc02 <vfprintf+0x1c2>
 bd6:	b6 01       	movw	r22, r12
 bd8:	80 e2       	ldi	r24, 0x20	; 32
 bda:	90 e0       	ldi	r25, 0x00	; 0
 bdc:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 be0:	2a 94       	dec	r2
 be2:	f4 cf       	rjmp	.-24     	; 0xbcc <vfprintf+0x18c>
 be4:	f5 01       	movw	r30, r10
 be6:	37 fc       	sbrc	r3, 7
 be8:	85 91       	lpm	r24, Z+
 bea:	37 fe       	sbrs	r3, 7
 bec:	81 91       	ld	r24, Z+
 bee:	5f 01       	movw	r10, r30
 bf0:	b6 01       	movw	r22, r12
 bf2:	90 e0       	ldi	r25, 0x00	; 0
 bf4:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 bf8:	21 10       	cpse	r2, r1
 bfa:	2a 94       	dec	r2
 bfc:	21 e0       	ldi	r18, 0x01	; 1
 bfe:	82 1a       	sub	r8, r18
 c00:	91 08       	sbc	r9, r1
 c02:	81 14       	cp	r8, r1
 c04:	91 04       	cpc	r9, r1
 c06:	71 f7       	brne	.-36     	; 0xbe4 <vfprintf+0x1a4>
 c08:	e8 c0       	rjmp	.+464    	; 0xdda <vfprintf+0x39a>
 c0a:	84 36       	cpi	r24, 0x64	; 100
 c0c:	11 f0       	breq	.+4      	; 0xc12 <vfprintf+0x1d2>
 c0e:	89 36       	cpi	r24, 0x69	; 105
 c10:	41 f5       	brne	.+80     	; 0xc62 <vfprintf+0x222>
 c12:	f8 01       	movw	r30, r16
 c14:	37 fe       	sbrs	r3, 7
 c16:	07 c0       	rjmp	.+14     	; 0xc26 <vfprintf+0x1e6>
 c18:	60 81       	ld	r22, Z
 c1a:	71 81       	ldd	r23, Z+1	; 0x01
 c1c:	82 81       	ldd	r24, Z+2	; 0x02
 c1e:	93 81       	ldd	r25, Z+3	; 0x03
 c20:	0c 5f       	subi	r16, 0xFC	; 252
 c22:	1f 4f       	sbci	r17, 0xFF	; 255
 c24:	08 c0       	rjmp	.+16     	; 0xc36 <vfprintf+0x1f6>
 c26:	60 81       	ld	r22, Z
 c28:	71 81       	ldd	r23, Z+1	; 0x01
 c2a:	07 2e       	mov	r0, r23
 c2c:	00 0c       	add	r0, r0
 c2e:	88 0b       	sbc	r24, r24
 c30:	99 0b       	sbc	r25, r25
 c32:	0e 5f       	subi	r16, 0xFE	; 254
 c34:	1f 4f       	sbci	r17, 0xFF	; 255
 c36:	f3 2d       	mov	r31, r3
 c38:	ff 76       	andi	r31, 0x6F	; 111
 c3a:	3f 2e       	mov	r3, r31
 c3c:	97 ff       	sbrs	r25, 7
 c3e:	09 c0       	rjmp	.+18     	; 0xc52 <vfprintf+0x212>
 c40:	90 95       	com	r25
 c42:	80 95       	com	r24
 c44:	70 95       	com	r23
 c46:	61 95       	neg	r22
 c48:	7f 4f       	sbci	r23, 0xFF	; 255
 c4a:	8f 4f       	sbci	r24, 0xFF	; 255
 c4c:	9f 4f       	sbci	r25, 0xFF	; 255
 c4e:	f0 68       	ori	r31, 0x80	; 128
 c50:	3f 2e       	mov	r3, r31
 c52:	2a e0       	ldi	r18, 0x0A	; 10
 c54:	30 e0       	ldi	r19, 0x00	; 0
 c56:	a3 01       	movw	r20, r6
 c58:	0e 94 53 07 	call	0xea6	; 0xea6 <__ultoa_invert>
 c5c:	88 2e       	mov	r8, r24
 c5e:	86 18       	sub	r8, r6
 c60:	45 c0       	rjmp	.+138    	; 0xcec <vfprintf+0x2ac>
 c62:	85 37       	cpi	r24, 0x75	; 117
 c64:	31 f4       	brne	.+12     	; 0xc72 <vfprintf+0x232>
 c66:	23 2d       	mov	r18, r3
 c68:	2f 7e       	andi	r18, 0xEF	; 239
 c6a:	b2 2e       	mov	r11, r18
 c6c:	2a e0       	ldi	r18, 0x0A	; 10
 c6e:	30 e0       	ldi	r19, 0x00	; 0
 c70:	25 c0       	rjmp	.+74     	; 0xcbc <vfprintf+0x27c>
 c72:	93 2d       	mov	r25, r3
 c74:	99 7f       	andi	r25, 0xF9	; 249
 c76:	b9 2e       	mov	r11, r25
 c78:	8f 36       	cpi	r24, 0x6F	; 111
 c7a:	c1 f0       	breq	.+48     	; 0xcac <vfprintf+0x26c>
 c7c:	18 f4       	brcc	.+6      	; 0xc84 <vfprintf+0x244>
 c7e:	88 35       	cpi	r24, 0x58	; 88
 c80:	79 f0       	breq	.+30     	; 0xca0 <vfprintf+0x260>
 c82:	b5 c0       	rjmp	.+362    	; 0xdee <vfprintf+0x3ae>
 c84:	80 37       	cpi	r24, 0x70	; 112
 c86:	19 f0       	breq	.+6      	; 0xc8e <vfprintf+0x24e>
 c88:	88 37       	cpi	r24, 0x78	; 120
 c8a:	21 f0       	breq	.+8      	; 0xc94 <vfprintf+0x254>
 c8c:	b0 c0       	rjmp	.+352    	; 0xdee <vfprintf+0x3ae>
 c8e:	e9 2f       	mov	r30, r25
 c90:	e0 61       	ori	r30, 0x10	; 16
 c92:	be 2e       	mov	r11, r30
 c94:	b4 fe       	sbrs	r11, 4
 c96:	0d c0       	rjmp	.+26     	; 0xcb2 <vfprintf+0x272>
 c98:	fb 2d       	mov	r31, r11
 c9a:	f4 60       	ori	r31, 0x04	; 4
 c9c:	bf 2e       	mov	r11, r31
 c9e:	09 c0       	rjmp	.+18     	; 0xcb2 <vfprintf+0x272>
 ca0:	34 fe       	sbrs	r3, 4
 ca2:	0a c0       	rjmp	.+20     	; 0xcb8 <vfprintf+0x278>
 ca4:	29 2f       	mov	r18, r25
 ca6:	26 60       	ori	r18, 0x06	; 6
 ca8:	b2 2e       	mov	r11, r18
 caa:	06 c0       	rjmp	.+12     	; 0xcb8 <vfprintf+0x278>
 cac:	28 e0       	ldi	r18, 0x08	; 8
 cae:	30 e0       	ldi	r19, 0x00	; 0
 cb0:	05 c0       	rjmp	.+10     	; 0xcbc <vfprintf+0x27c>
 cb2:	20 e1       	ldi	r18, 0x10	; 16
 cb4:	30 e0       	ldi	r19, 0x00	; 0
 cb6:	02 c0       	rjmp	.+4      	; 0xcbc <vfprintf+0x27c>
 cb8:	20 e1       	ldi	r18, 0x10	; 16
 cba:	32 e0       	ldi	r19, 0x02	; 2
 cbc:	f8 01       	movw	r30, r16
 cbe:	b7 fe       	sbrs	r11, 7
 cc0:	07 c0       	rjmp	.+14     	; 0xcd0 <vfprintf+0x290>
 cc2:	60 81       	ld	r22, Z
 cc4:	71 81       	ldd	r23, Z+1	; 0x01
 cc6:	82 81       	ldd	r24, Z+2	; 0x02
 cc8:	93 81       	ldd	r25, Z+3	; 0x03
 cca:	0c 5f       	subi	r16, 0xFC	; 252
 ccc:	1f 4f       	sbci	r17, 0xFF	; 255
 cce:	06 c0       	rjmp	.+12     	; 0xcdc <vfprintf+0x29c>
 cd0:	60 81       	ld	r22, Z
 cd2:	71 81       	ldd	r23, Z+1	; 0x01
 cd4:	80 e0       	ldi	r24, 0x00	; 0
 cd6:	90 e0       	ldi	r25, 0x00	; 0
 cd8:	0e 5f       	subi	r16, 0xFE	; 254
 cda:	1f 4f       	sbci	r17, 0xFF	; 255
 cdc:	a3 01       	movw	r20, r6
 cde:	0e 94 53 07 	call	0xea6	; 0xea6 <__ultoa_invert>
 ce2:	88 2e       	mov	r8, r24
 ce4:	86 18       	sub	r8, r6
 ce6:	fb 2d       	mov	r31, r11
 ce8:	ff 77       	andi	r31, 0x7F	; 127
 cea:	3f 2e       	mov	r3, r31
 cec:	36 fe       	sbrs	r3, 6
 cee:	0d c0       	rjmp	.+26     	; 0xd0a <vfprintf+0x2ca>
 cf0:	23 2d       	mov	r18, r3
 cf2:	2e 7f       	andi	r18, 0xFE	; 254
 cf4:	a2 2e       	mov	r10, r18
 cf6:	89 14       	cp	r8, r9
 cf8:	58 f4       	brcc	.+22     	; 0xd10 <vfprintf+0x2d0>
 cfa:	34 fe       	sbrs	r3, 4
 cfc:	0b c0       	rjmp	.+22     	; 0xd14 <vfprintf+0x2d4>
 cfe:	32 fc       	sbrc	r3, 2
 d00:	09 c0       	rjmp	.+18     	; 0xd14 <vfprintf+0x2d4>
 d02:	83 2d       	mov	r24, r3
 d04:	8e 7e       	andi	r24, 0xEE	; 238
 d06:	a8 2e       	mov	r10, r24
 d08:	05 c0       	rjmp	.+10     	; 0xd14 <vfprintf+0x2d4>
 d0a:	b8 2c       	mov	r11, r8
 d0c:	a3 2c       	mov	r10, r3
 d0e:	03 c0       	rjmp	.+6      	; 0xd16 <vfprintf+0x2d6>
 d10:	b8 2c       	mov	r11, r8
 d12:	01 c0       	rjmp	.+2      	; 0xd16 <vfprintf+0x2d6>
 d14:	b9 2c       	mov	r11, r9
 d16:	a4 fe       	sbrs	r10, 4
 d18:	0f c0       	rjmp	.+30     	; 0xd38 <vfprintf+0x2f8>
 d1a:	fe 01       	movw	r30, r28
 d1c:	e8 0d       	add	r30, r8
 d1e:	f1 1d       	adc	r31, r1
 d20:	80 81       	ld	r24, Z
 d22:	80 33       	cpi	r24, 0x30	; 48
 d24:	21 f4       	brne	.+8      	; 0xd2e <vfprintf+0x2ee>
 d26:	9a 2d       	mov	r25, r10
 d28:	99 7e       	andi	r25, 0xE9	; 233
 d2a:	a9 2e       	mov	r10, r25
 d2c:	09 c0       	rjmp	.+18     	; 0xd40 <vfprintf+0x300>
 d2e:	a2 fe       	sbrs	r10, 2
 d30:	06 c0       	rjmp	.+12     	; 0xd3e <vfprintf+0x2fe>
 d32:	b3 94       	inc	r11
 d34:	b3 94       	inc	r11
 d36:	04 c0       	rjmp	.+8      	; 0xd40 <vfprintf+0x300>
 d38:	8a 2d       	mov	r24, r10
 d3a:	86 78       	andi	r24, 0x86	; 134
 d3c:	09 f0       	breq	.+2      	; 0xd40 <vfprintf+0x300>
 d3e:	b3 94       	inc	r11
 d40:	a3 fc       	sbrc	r10, 3
 d42:	11 c0       	rjmp	.+34     	; 0xd66 <vfprintf+0x326>
 d44:	a0 fe       	sbrs	r10, 0
 d46:	06 c0       	rjmp	.+12     	; 0xd54 <vfprintf+0x314>
 d48:	b2 14       	cp	r11, r2
 d4a:	88 f4       	brcc	.+34     	; 0xd6e <vfprintf+0x32e>
 d4c:	28 0c       	add	r2, r8
 d4e:	92 2c       	mov	r9, r2
 d50:	9b 18       	sub	r9, r11
 d52:	0e c0       	rjmp	.+28     	; 0xd70 <vfprintf+0x330>
 d54:	b2 14       	cp	r11, r2
 d56:	60 f4       	brcc	.+24     	; 0xd70 <vfprintf+0x330>
 d58:	b6 01       	movw	r22, r12
 d5a:	80 e2       	ldi	r24, 0x20	; 32
 d5c:	90 e0       	ldi	r25, 0x00	; 0
 d5e:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 d62:	b3 94       	inc	r11
 d64:	f7 cf       	rjmp	.-18     	; 0xd54 <vfprintf+0x314>
 d66:	b2 14       	cp	r11, r2
 d68:	18 f4       	brcc	.+6      	; 0xd70 <vfprintf+0x330>
 d6a:	2b 18       	sub	r2, r11
 d6c:	02 c0       	rjmp	.+4      	; 0xd72 <vfprintf+0x332>
 d6e:	98 2c       	mov	r9, r8
 d70:	21 2c       	mov	r2, r1
 d72:	a4 fe       	sbrs	r10, 4
 d74:	10 c0       	rjmp	.+32     	; 0xd96 <vfprintf+0x356>
 d76:	b6 01       	movw	r22, r12
 d78:	80 e3       	ldi	r24, 0x30	; 48
 d7a:	90 e0       	ldi	r25, 0x00	; 0
 d7c:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 d80:	a2 fe       	sbrs	r10, 2
 d82:	17 c0       	rjmp	.+46     	; 0xdb2 <vfprintf+0x372>
 d84:	a1 fc       	sbrc	r10, 1
 d86:	03 c0       	rjmp	.+6      	; 0xd8e <vfprintf+0x34e>
 d88:	88 e7       	ldi	r24, 0x78	; 120
 d8a:	90 e0       	ldi	r25, 0x00	; 0
 d8c:	02 c0       	rjmp	.+4      	; 0xd92 <vfprintf+0x352>
 d8e:	88 e5       	ldi	r24, 0x58	; 88
 d90:	90 e0       	ldi	r25, 0x00	; 0
 d92:	b6 01       	movw	r22, r12
 d94:	0c c0       	rjmp	.+24     	; 0xdae <vfprintf+0x36e>
 d96:	8a 2d       	mov	r24, r10
 d98:	86 78       	andi	r24, 0x86	; 134
 d9a:	59 f0       	breq	.+22     	; 0xdb2 <vfprintf+0x372>
 d9c:	a1 fe       	sbrs	r10, 1
 d9e:	02 c0       	rjmp	.+4      	; 0xda4 <vfprintf+0x364>
 da0:	8b e2       	ldi	r24, 0x2B	; 43
 da2:	01 c0       	rjmp	.+2      	; 0xda6 <vfprintf+0x366>
 da4:	80 e2       	ldi	r24, 0x20	; 32
 da6:	a7 fc       	sbrc	r10, 7
 da8:	8d e2       	ldi	r24, 0x2D	; 45
 daa:	b6 01       	movw	r22, r12
 dac:	90 e0       	ldi	r25, 0x00	; 0
 dae:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 db2:	89 14       	cp	r8, r9
 db4:	38 f4       	brcc	.+14     	; 0xdc4 <vfprintf+0x384>
 db6:	b6 01       	movw	r22, r12
 db8:	80 e3       	ldi	r24, 0x30	; 48
 dba:	90 e0       	ldi	r25, 0x00	; 0
 dbc:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 dc0:	9a 94       	dec	r9
 dc2:	f7 cf       	rjmp	.-18     	; 0xdb2 <vfprintf+0x372>
 dc4:	8a 94       	dec	r8
 dc6:	f3 01       	movw	r30, r6
 dc8:	e8 0d       	add	r30, r8
 dca:	f1 1d       	adc	r31, r1
 dcc:	80 81       	ld	r24, Z
 dce:	b6 01       	movw	r22, r12
 dd0:	90 e0       	ldi	r25, 0x00	; 0
 dd2:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 dd6:	81 10       	cpse	r8, r1
 dd8:	f5 cf       	rjmp	.-22     	; 0xdc4 <vfprintf+0x384>
 dda:	22 20       	and	r2, r2
 ddc:	09 f4       	brne	.+2      	; 0xde0 <vfprintf+0x3a0>
 dde:	42 ce       	rjmp	.-892    	; 0xa64 <vfprintf+0x24>
 de0:	b6 01       	movw	r22, r12
 de2:	80 e2       	ldi	r24, 0x20	; 32
 de4:	90 e0       	ldi	r25, 0x00	; 0
 de6:	0e 94 17 07 	call	0xe2e	; 0xe2e <fputc>
 dea:	2a 94       	dec	r2
 dec:	f6 cf       	rjmp	.-20     	; 0xdda <vfprintf+0x39a>
 dee:	f6 01       	movw	r30, r12
 df0:	86 81       	ldd	r24, Z+6	; 0x06
 df2:	97 81       	ldd	r25, Z+7	; 0x07
 df4:	02 c0       	rjmp	.+4      	; 0xdfa <vfprintf+0x3ba>
 df6:	8f ef       	ldi	r24, 0xFF	; 255
 df8:	9f ef       	ldi	r25, 0xFF	; 255
 dfa:	2b 96       	adiw	r28, 0x0b	; 11
 dfc:	e2 e1       	ldi	r30, 0x12	; 18
 dfe:	0c 94 ca 07 	jmp	0xf94	; 0xf94 <__epilogue_restores__>

00000e02 <strnlen_P>:
 e02:	fc 01       	movw	r30, r24
 e04:	05 90       	lpm	r0, Z+
 e06:	61 50       	subi	r22, 0x01	; 1
 e08:	70 40       	sbci	r23, 0x00	; 0
 e0a:	01 10       	cpse	r0, r1
 e0c:	d8 f7       	brcc	.-10     	; 0xe04 <strnlen_P+0x2>
 e0e:	80 95       	com	r24
 e10:	90 95       	com	r25
 e12:	8e 0f       	add	r24, r30
 e14:	9f 1f       	adc	r25, r31
 e16:	08 95       	ret

00000e18 <strnlen>:
 e18:	fc 01       	movw	r30, r24
 e1a:	61 50       	subi	r22, 0x01	; 1
 e1c:	70 40       	sbci	r23, 0x00	; 0
 e1e:	01 90       	ld	r0, Z+
 e20:	01 10       	cpse	r0, r1
 e22:	d8 f7       	brcc	.-10     	; 0xe1a <strnlen+0x2>
 e24:	80 95       	com	r24
 e26:	90 95       	com	r25
 e28:	8e 0f       	add	r24, r30
 e2a:	9f 1f       	adc	r25, r31
 e2c:	08 95       	ret

00000e2e <fputc>:
 e2e:	0f 93       	push	r16
 e30:	1f 93       	push	r17
 e32:	cf 93       	push	r28
 e34:	df 93       	push	r29
 e36:	fb 01       	movw	r30, r22
 e38:	23 81       	ldd	r18, Z+3	; 0x03
 e3a:	21 fd       	sbrc	r18, 1
 e3c:	03 c0       	rjmp	.+6      	; 0xe44 <fputc+0x16>
 e3e:	8f ef       	ldi	r24, 0xFF	; 255
 e40:	9f ef       	ldi	r25, 0xFF	; 255
 e42:	2c c0       	rjmp	.+88     	; 0xe9c <fputc+0x6e>
 e44:	22 ff       	sbrs	r18, 2
 e46:	16 c0       	rjmp	.+44     	; 0xe74 <fputc+0x46>
 e48:	46 81       	ldd	r20, Z+6	; 0x06
 e4a:	57 81       	ldd	r21, Z+7	; 0x07
 e4c:	24 81       	ldd	r18, Z+4	; 0x04
 e4e:	35 81       	ldd	r19, Z+5	; 0x05
 e50:	42 17       	cp	r20, r18
 e52:	53 07       	cpc	r21, r19
 e54:	44 f4       	brge	.+16     	; 0xe66 <fputc+0x38>
 e56:	a0 81       	ld	r26, Z
 e58:	b1 81       	ldd	r27, Z+1	; 0x01
 e5a:	9d 01       	movw	r18, r26
 e5c:	2f 5f       	subi	r18, 0xFF	; 255
 e5e:	3f 4f       	sbci	r19, 0xFF	; 255
 e60:	20 83       	st	Z, r18
 e62:	31 83       	std	Z+1, r19	; 0x01
 e64:	8c 93       	st	X, r24
 e66:	26 81       	ldd	r18, Z+6	; 0x06
 e68:	37 81       	ldd	r19, Z+7	; 0x07
 e6a:	2f 5f       	subi	r18, 0xFF	; 255
 e6c:	3f 4f       	sbci	r19, 0xFF	; 255
 e6e:	26 83       	std	Z+6, r18	; 0x06
 e70:	37 83       	std	Z+7, r19	; 0x07
 e72:	14 c0       	rjmp	.+40     	; 0xe9c <fputc+0x6e>
 e74:	8b 01       	movw	r16, r22
 e76:	ec 01       	movw	r28, r24
 e78:	fb 01       	movw	r30, r22
 e7a:	00 84       	ldd	r0, Z+8	; 0x08
 e7c:	f1 85       	ldd	r31, Z+9	; 0x09
 e7e:	e0 2d       	mov	r30, r0
 e80:	09 95       	icall
 e82:	89 2b       	or	r24, r25
 e84:	e1 f6       	brne	.-72     	; 0xe3e <fputc+0x10>
 e86:	d8 01       	movw	r26, r16
 e88:	16 96       	adiw	r26, 0x06	; 6
 e8a:	8d 91       	ld	r24, X+
 e8c:	9c 91       	ld	r25, X
 e8e:	17 97       	sbiw	r26, 0x07	; 7
 e90:	01 96       	adiw	r24, 0x01	; 1
 e92:	16 96       	adiw	r26, 0x06	; 6
 e94:	8d 93       	st	X+, r24
 e96:	9c 93       	st	X, r25
 e98:	17 97       	sbiw	r26, 0x07	; 7
 e9a:	ce 01       	movw	r24, r28
 e9c:	df 91       	pop	r29
 e9e:	cf 91       	pop	r28
 ea0:	1f 91       	pop	r17
 ea2:	0f 91       	pop	r16
 ea4:	08 95       	ret

00000ea6 <__ultoa_invert>:
 ea6:	fa 01       	movw	r30, r20
 ea8:	aa 27       	eor	r26, r26
 eaa:	28 30       	cpi	r18, 0x08	; 8
 eac:	51 f1       	breq	.+84     	; 0xf02 <__ultoa_invert+0x5c>
 eae:	20 31       	cpi	r18, 0x10	; 16
 eb0:	81 f1       	breq	.+96     	; 0xf12 <__ultoa_invert+0x6c>
 eb2:	e8 94       	clt
 eb4:	6f 93       	push	r22
 eb6:	6e 7f       	andi	r22, 0xFE	; 254
 eb8:	6e 5f       	subi	r22, 0xFE	; 254
 eba:	7f 4f       	sbci	r23, 0xFF	; 255
 ebc:	8f 4f       	sbci	r24, 0xFF	; 255
 ebe:	9f 4f       	sbci	r25, 0xFF	; 255
 ec0:	af 4f       	sbci	r26, 0xFF	; 255
 ec2:	b1 e0       	ldi	r27, 0x01	; 1
 ec4:	3e d0       	rcall	.+124    	; 0xf42 <__ultoa_invert+0x9c>
 ec6:	b4 e0       	ldi	r27, 0x04	; 4
 ec8:	3c d0       	rcall	.+120    	; 0xf42 <__ultoa_invert+0x9c>
 eca:	67 0f       	add	r22, r23
 ecc:	78 1f       	adc	r23, r24
 ece:	89 1f       	adc	r24, r25
 ed0:	9a 1f       	adc	r25, r26
 ed2:	a1 1d       	adc	r26, r1
 ed4:	68 0f       	add	r22, r24
 ed6:	79 1f       	adc	r23, r25
 ed8:	8a 1f       	adc	r24, r26
 eda:	91 1d       	adc	r25, r1
 edc:	a1 1d       	adc	r26, r1
 ede:	6a 0f       	add	r22, r26
 ee0:	71 1d       	adc	r23, r1
 ee2:	81 1d       	adc	r24, r1
 ee4:	91 1d       	adc	r25, r1
 ee6:	a1 1d       	adc	r26, r1
 ee8:	20 d0       	rcall	.+64     	; 0xf2a <__ultoa_invert+0x84>
 eea:	09 f4       	brne	.+2      	; 0xeee <__ultoa_invert+0x48>
 eec:	68 94       	set
 eee:	3f 91       	pop	r19
 ef0:	2a e0       	ldi	r18, 0x0A	; 10
 ef2:	26 9f       	mul	r18, r22
 ef4:	11 24       	eor	r1, r1
 ef6:	30 19       	sub	r19, r0
 ef8:	30 5d       	subi	r19, 0xD0	; 208
 efa:	31 93       	st	Z+, r19
 efc:	de f6       	brtc	.-74     	; 0xeb4 <__ultoa_invert+0xe>
 efe:	cf 01       	movw	r24, r30
 f00:	08 95       	ret
 f02:	46 2f       	mov	r20, r22
 f04:	47 70       	andi	r20, 0x07	; 7
 f06:	40 5d       	subi	r20, 0xD0	; 208
 f08:	41 93       	st	Z+, r20
 f0a:	b3 e0       	ldi	r27, 0x03	; 3
 f0c:	0f d0       	rcall	.+30     	; 0xf2c <__ultoa_invert+0x86>
 f0e:	c9 f7       	brne	.-14     	; 0xf02 <__ultoa_invert+0x5c>
 f10:	f6 cf       	rjmp	.-20     	; 0xefe <__ultoa_invert+0x58>
 f12:	46 2f       	mov	r20, r22
 f14:	4f 70       	andi	r20, 0x0F	; 15
 f16:	40 5d       	subi	r20, 0xD0	; 208
 f18:	4a 33       	cpi	r20, 0x3A	; 58
 f1a:	18 f0       	brcs	.+6      	; 0xf22 <__ultoa_invert+0x7c>
 f1c:	49 5d       	subi	r20, 0xD9	; 217
 f1e:	31 fd       	sbrc	r19, 1
 f20:	40 52       	subi	r20, 0x20	; 32
 f22:	41 93       	st	Z+, r20
 f24:	02 d0       	rcall	.+4      	; 0xf2a <__ultoa_invert+0x84>
 f26:	a9 f7       	brne	.-22     	; 0xf12 <__ultoa_invert+0x6c>
 f28:	ea cf       	rjmp	.-44     	; 0xefe <__ultoa_invert+0x58>
 f2a:	b4 e0       	ldi	r27, 0x04	; 4
 f2c:	a6 95       	lsr	r26
 f2e:	97 95       	ror	r25
 f30:	87 95       	ror	r24
 f32:	77 95       	ror	r23
 f34:	67 95       	ror	r22
 f36:	ba 95       	dec	r27
 f38:	c9 f7       	brne	.-14     	; 0xf2c <__ultoa_invert+0x86>
 f3a:	00 97       	sbiw	r24, 0x00	; 0
 f3c:	61 05       	cpc	r22, r1
 f3e:	71 05       	cpc	r23, r1
 f40:	08 95       	ret
 f42:	9b 01       	movw	r18, r22
 f44:	ac 01       	movw	r20, r24
 f46:	0a 2e       	mov	r0, r26
 f48:	06 94       	lsr	r0
 f4a:	57 95       	ror	r21
 f4c:	47 95       	ror	r20
 f4e:	37 95       	ror	r19
 f50:	27 95       	ror	r18
 f52:	ba 95       	dec	r27
 f54:	c9 f7       	brne	.-14     	; 0xf48 <__ultoa_invert+0xa2>
 f56:	62 0f       	add	r22, r18
 f58:	73 1f       	adc	r23, r19
 f5a:	84 1f       	adc	r24, r20
 f5c:	95 1f       	adc	r25, r21
 f5e:	a0 1d       	adc	r26, r0
 f60:	08 95       	ret

00000f62 <__prologue_saves__>:
 f62:	2f 92       	push	r2
 f64:	3f 92       	push	r3
 f66:	4f 92       	push	r4
 f68:	5f 92       	push	r5
 f6a:	6f 92       	push	r6
 f6c:	7f 92       	push	r7
 f6e:	8f 92       	push	r8
 f70:	9f 92       	push	r9
 f72:	af 92       	push	r10
 f74:	bf 92       	push	r11
 f76:	cf 92       	push	r12
 f78:	df 92       	push	r13
 f7a:	ef 92       	push	r14
 f7c:	ff 92       	push	r15
 f7e:	0f 93       	push	r16
 f80:	1f 93       	push	r17
 f82:	cf 93       	push	r28
 f84:	df 93       	push	r29
 f86:	cd b7       	in	r28, 0x3d	; 61
 f88:	de b7       	in	r29, 0x3e	; 62
 f8a:	ca 1b       	sub	r28, r26
 f8c:	db 0b       	sbc	r29, r27
 f8e:	cd bf       	out	0x3d, r28	; 61
 f90:	de bf       	out	0x3e, r29	; 62
 f92:	09 94       	ijmp

00000f94 <__epilogue_restores__>:
 f94:	2a 88       	ldd	r2, Y+18	; 0x12
 f96:	39 88       	ldd	r3, Y+17	; 0x11
 f98:	48 88       	ldd	r4, Y+16	; 0x10
 f9a:	5f 84       	ldd	r5, Y+15	; 0x0f
 f9c:	6e 84       	ldd	r6, Y+14	; 0x0e
 f9e:	7d 84       	ldd	r7, Y+13	; 0x0d
 fa0:	8c 84       	ldd	r8, Y+12	; 0x0c
 fa2:	9b 84       	ldd	r9, Y+11	; 0x0b
 fa4:	aa 84       	ldd	r10, Y+10	; 0x0a
 fa6:	b9 84       	ldd	r11, Y+9	; 0x09
 fa8:	c8 84       	ldd	r12, Y+8	; 0x08
 faa:	df 80       	ldd	r13, Y+7	; 0x07
 fac:	ee 80       	ldd	r14, Y+6	; 0x06
 fae:	fd 80       	ldd	r15, Y+5	; 0x05
 fb0:	0c 81       	ldd	r16, Y+4	; 0x04
 fb2:	1b 81       	ldd	r17, Y+3	; 0x03
 fb4:	aa 81       	ldd	r26, Y+2	; 0x02
 fb6:	b9 81       	ldd	r27, Y+1	; 0x01
 fb8:	ce 0f       	add	r28, r30
 fba:	d1 1d       	adc	r29, r1
 fbc:	cd bf       	out	0x3d, r28	; 61
 fbe:	de bf       	out	0x3e, r29	; 62
 fc0:	ed 01       	movw	r28, r26
 fc2:	08 95       	ret

00000fc4 <_exit>:
 fc4:	f8 94       	cli

00000fc6 <__stop_program>:
 fc6:	ff cf       	rjmp	.-2      	; 0xfc6 <__stop_program>
