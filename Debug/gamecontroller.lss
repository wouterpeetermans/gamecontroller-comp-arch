
gamecontroller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000fa8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00802000  00000fa8  0000103c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  0080201c  0080201c  00001058  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001058  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  000010f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c24  00000000  00000000  0000129c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000839  00000000  00000000  00002ec0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019ee  00000000  00000000  000036f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000046c  00000000  00000000  000050e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00011eb6  00000000  00000000  00005554  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007bd  00000000  00000000  0001740a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  00017bc7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000597a  00000000  00000000  00017cdf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c6 00 	jmp	0x18c	; 0x18c <__ctors_end>
   4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
   8:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__vector_2>
   c:	0c 94 85 01 	jmp	0x30a	; 0x30a <__vector_3>
  10:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  14:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  18:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  1c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  20:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  24:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  28:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  2c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  30:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  34:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  38:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  3c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  40:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  44:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  48:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  4c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  50:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  54:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  58:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  5c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  60:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  64:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  68:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  6c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  70:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  74:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  78:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  7c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  80:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  84:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  88:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  8c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  90:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  94:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  98:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  9c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  a0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  a4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  a8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  ac:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  b0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  b4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  b8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  bc:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  c0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  c4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  c8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  cc:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  d0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  d4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  d8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  dc:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  e0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  e4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  e8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  ec:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  f0:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  f4:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  f8:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
  fc:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 100:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 104:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 108:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 10c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 110:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 114:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 118:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 11c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 120:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 124:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 128:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 12c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 130:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 134:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 138:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 13c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 140:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 144:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 148:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 14c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 150:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 154:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 158:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 15c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 160:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 164:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 168:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__bad_interrupt>
 16c:	08 02       	muls	r16, r24
 16e:	f0 01       	movw	r30, r0
 170:	f6 01       	movw	r30, r12
 172:	fc 01       	movw	r30, r24
 174:	f6 01       	movw	r30, r12
 176:	08 02       	muls	r16, r24
 178:	02 02       	muls	r16, r18
 17a:	f0 01       	movw	r30, r0
 17c:	f0 01       	movw	r30, r0
 17e:	02 02       	muls	r16, r18
 180:	08 02       	muls	r16, r24
 182:	f6 01       	movw	r30, r12
 184:	fc 01       	movw	r30, r24
 186:	f6 01       	movw	r30, r12
 188:	f0 01       	movw	r30, r0
 18a:	08 02       	muls	r16, r24

0000018c <__ctors_end>:
 18c:	11 24       	eor	r1, r1
 18e:	1f be       	out	0x3f, r1	; 63
 190:	cf ef       	ldi	r28, 0xFF	; 255
 192:	cd bf       	out	0x3d, r28	; 61
 194:	d7 e2       	ldi	r29, 0x27	; 39
 196:	de bf       	out	0x3e, r29	; 62

00000198 <__do_copy_data>:
 198:	10 e2       	ldi	r17, 0x20	; 32
 19a:	a0 e0       	ldi	r26, 0x00	; 0
 19c:	b0 e2       	ldi	r27, 0x20	; 32
 19e:	e8 ea       	ldi	r30, 0xA8	; 168
 1a0:	ff e0       	ldi	r31, 0x0F	; 15
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <__do_copy_data+0x10>
 1a4:	05 90       	lpm	r0, Z+
 1a6:	0d 92       	st	X+, r0
 1a8:	ac 31       	cpi	r26, 0x1C	; 28
 1aa:	b1 07       	cpc	r27, r17
 1ac:	d9 f7       	brne	.-10     	; 0x1a4 <__do_copy_data+0xc>

000001ae <__do_clear_bss>:
 1ae:	20 e2       	ldi	r18, 0x20	; 32
 1b0:	ac e1       	ldi	r26, 0x1C	; 28
 1b2:	b0 e2       	ldi	r27, 0x20	; 32
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <.do_clear_bss_start>

000001b6 <.do_clear_bss_loop>:
 1b6:	1d 92       	st	X+, r1

000001b8 <.do_clear_bss_start>:
 1b8:	a6 33       	cpi	r26, 0x36	; 54
 1ba:	b2 07       	cpc	r27, r18
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <.do_clear_bss_loop>
 1be:	0e 94 15 02 	call	0x42a	; 0x42a <main>
 1c2:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <_exit>

000001c6 <__bad_interrupt>:
 1c6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ca <AccInit>:
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	cd b7       	in	r28, 0x3d	; 61
 1d0:	de b7       	in	r29, 0x3e	; 62
 1d2:	00 00       	nop
 1d4:	df 91       	pop	r29
 1d6:	cf 91       	pop	r28
 1d8:	08 95       	ret

000001da <AnalogInit>:
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	cd b7       	in	r28, 0x3d	; 61
 1e0:	de b7       	in	r29, 0x3e	; 62
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	92 e0       	ldi	r25, 0x02	; 2
 1e6:	27 e0       	ldi	r18, 0x07	; 7
 1e8:	fc 01       	movw	r30, r24
 1ea:	20 83       	st	Z, r18
 1ec:	00 00       	nop
 1ee:	df 91       	pop	r29
 1f0:	cf 91       	pop	r28
 1f2:	08 95       	ret

000001f4 <ClockInit>:
 1f4:	8b ec       	ldi	r24, 0xCB	; 203
 1f6:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
 1fa:	88 e0       	ldi	r24, 0x08	; 8
 1fc:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 200:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
 204:	83 ff       	sbrs	r24, 3
 206:	fc cf       	rjmp	.-8      	; 0x200 <ClockInit+0xc>
 208:	88 ed       	ldi	r24, 0xD8	; 216
 20a:	84 bf       	out	0x34, r24	; 52
 20c:	83 e0       	ldi	r24, 0x03	; 3
 20e:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 212:	08 95       	ret

00000214 <EncoderInit>:
volatile int encoderPos = 0;
volatile uint8_t prevpos;
volatile uint8_t currentPos;

void EncoderInit(void)
{
 214:	cf 93       	push	r28
 216:	df 93       	push	r29
 218:	cd b7       	in	r28, 0x3d	; 61
 21a:	de b7       	in	r29, 0x3e	; 62
	PORTC.DIR = (PORTC.DIR & 0b11001111);
 21c:	80 e4       	ldi	r24, 0x40	; 64
 21e:	96 e0       	ldi	r25, 0x06	; 6
 220:	20 e4       	ldi	r18, 0x40	; 64
 222:	36 e0       	ldi	r19, 0x06	; 6
 224:	f9 01       	movw	r30, r18
 226:	20 81       	ld	r18, Z
 228:	2f 7c       	andi	r18, 0xCF	; 207
 22a:	fc 01       	movw	r30, r24
 22c:	20 83       	st	Z, r18
	PORTC.PIN4CTRL = 0b00011000;
 22e:	80 e4       	ldi	r24, 0x40	; 64
 230:	96 e0       	ldi	r25, 0x06	; 6
 232:	28 e1       	ldi	r18, 0x18	; 24
 234:	fc 01       	movw	r30, r24
 236:	24 8b       	std	Z+20, r18	; 0x14
	PORTC.PIN5CTRL = 0b00011000;
 238:	80 e4       	ldi	r24, 0x40	; 64
 23a:	96 e0       	ldi	r25, 0x06	; 6
 23c:	28 e1       	ldi	r18, 0x18	; 24
 23e:	fc 01       	movw	r30, r24
 240:	25 8b       	std	Z+21, r18	; 0x15
	PORTC.INTCTRL = 0b00001111;
 242:	80 e4       	ldi	r24, 0x40	; 64
 244:	96 e0       	ldi	r25, 0x06	; 6
 246:	2f e0       	ldi	r18, 0x0F	; 15
 248:	fc 01       	movw	r30, r24
 24a:	21 87       	std	Z+9, r18	; 0x09
	PORTC.INT0MASK = 0b00010000;
 24c:	80 e4       	ldi	r24, 0x40	; 64
 24e:	96 e0       	ldi	r25, 0x06	; 6
 250:	20 e1       	ldi	r18, 0x10	; 16
 252:	fc 01       	movw	r30, r24
 254:	22 87       	std	Z+10, r18	; 0x0a
	PORTC.INT1MASK = 0b00100000;
 256:	80 e4       	ldi	r24, 0x40	; 64
 258:	96 e0       	ldi	r25, 0x06	; 6
 25a:	20 e2       	ldi	r18, 0x20	; 32
 25c:	fc 01       	movw	r30, r24
 25e:	23 87       	std	Z+11, r18	; 0x0b
	SREG = (SREG | 0b10000000);
 260:	8f e3       	ldi	r24, 0x3F	; 63
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	2f e3       	ldi	r18, 0x3F	; 63
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	f9 01       	movw	r30, r18
 26a:	20 81       	ld	r18, Z
 26c:	20 68       	ori	r18, 0x80	; 128
 26e:	fc 01       	movw	r30, r24
 270:	20 83       	st	Z, r18
	PMIC.CTRL = 0b00000100;
 272:	80 ea       	ldi	r24, 0xA0	; 160
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	24 e0       	ldi	r18, 0x04	; 4
 278:	fc 01       	movw	r30, r24
 27a:	22 83       	std	Z+2, r18	; 0x02
	
	
	
}
 27c:	00 00       	nop
 27e:	df 91       	pop	r29
 280:	cf 91       	pop	r28
 282:	08 95       	ret

00000284 <EncoderGetPos>:
int EncoderGetPos(void)
{
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
	return encoderPos;
 28c:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <__data_end>
 290:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <__data_end+0x1>
}
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	08 95       	ret

0000029a <__vector_2>:

ISR(PORTC_INT0_vect){
 29a:	1f 92       	push	r1
 29c:	0f 92       	push	r0
 29e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 2a2:	0f 92       	push	r0
 2a4:	11 24       	eor	r1, r1
 2a6:	2f 93       	push	r18
 2a8:	3f 93       	push	r19
 2aa:	4f 93       	push	r20
 2ac:	5f 93       	push	r21
 2ae:	6f 93       	push	r22
 2b0:	7f 93       	push	r23
 2b2:	8f 93       	push	r24
 2b4:	9f 93       	push	r25
 2b6:	af 93       	push	r26
 2b8:	bf 93       	push	r27
 2ba:	ef 93       	push	r30
 2bc:	ff 93       	push	r31
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62
	encoderPos += readEncoder();
 2c6:	0e 94 bd 01 	call	0x37a	; 0x37a <readEncoder>
 2ca:	9c 01       	movw	r18, r24
 2cc:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <__data_end>
 2d0:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <__data_end+0x1>
 2d4:	82 0f       	add	r24, r18
 2d6:	93 1f       	adc	r25, r19
 2d8:	80 93 1c 20 	sts	0x201C, r24	; 0x80201c <__data_end>
 2dc:	90 93 1d 20 	sts	0x201D, r25	; 0x80201d <__data_end+0x1>
}
 2e0:	00 00       	nop
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	ff 91       	pop	r31
 2e8:	ef 91       	pop	r30
 2ea:	bf 91       	pop	r27
 2ec:	af 91       	pop	r26
 2ee:	9f 91       	pop	r25
 2f0:	8f 91       	pop	r24
 2f2:	7f 91       	pop	r23
 2f4:	6f 91       	pop	r22
 2f6:	5f 91       	pop	r21
 2f8:	4f 91       	pop	r20
 2fa:	3f 91       	pop	r19
 2fc:	2f 91       	pop	r18
 2fe:	0f 90       	pop	r0
 300:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 304:	0f 90       	pop	r0
 306:	1f 90       	pop	r1
 308:	18 95       	reti

0000030a <__vector_3>:

ISR(PORTC_INT1_vect){
 30a:	1f 92       	push	r1
 30c:	0f 92       	push	r0
 30e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 312:	0f 92       	push	r0
 314:	11 24       	eor	r1, r1
 316:	2f 93       	push	r18
 318:	3f 93       	push	r19
 31a:	4f 93       	push	r20
 31c:	5f 93       	push	r21
 31e:	6f 93       	push	r22
 320:	7f 93       	push	r23
 322:	8f 93       	push	r24
 324:	9f 93       	push	r25
 326:	af 93       	push	r26
 328:	bf 93       	push	r27
 32a:	ef 93       	push	r30
 32c:	ff 93       	push	r31
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	cd b7       	in	r28, 0x3d	; 61
 334:	de b7       	in	r29, 0x3e	; 62
	encoderPos += readEncoder();
 336:	0e 94 bd 01 	call	0x37a	; 0x37a <readEncoder>
 33a:	9c 01       	movw	r18, r24
 33c:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <__data_end>
 340:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <__data_end+0x1>
 344:	82 0f       	add	r24, r18
 346:	93 1f       	adc	r25, r19
 348:	80 93 1c 20 	sts	0x201C, r24	; 0x80201c <__data_end>
 34c:	90 93 1d 20 	sts	0x201D, r25	; 0x80201d <__data_end+0x1>
}
 350:	00 00       	nop
 352:	df 91       	pop	r29
 354:	cf 91       	pop	r28
 356:	ff 91       	pop	r31
 358:	ef 91       	pop	r30
 35a:	bf 91       	pop	r27
 35c:	af 91       	pop	r26
 35e:	9f 91       	pop	r25
 360:	8f 91       	pop	r24
 362:	7f 91       	pop	r23
 364:	6f 91       	pop	r22
 366:	5f 91       	pop	r21
 368:	4f 91       	pop	r20
 36a:	3f 91       	pop	r19
 36c:	2f 91       	pop	r18
 36e:	0f 90       	pop	r0
 370:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 374:	0f 90       	pop	r0
 376:	1f 90       	pop	r1
 378:	18 95       	reti

0000037a <readEncoder>:
		}
		state = (s >> 2);
	}
*/

int readEncoder(){
 37a:	cf 93       	push	r28
 37c:	df 93       	push	r29
 37e:	00 d0       	rcall	.+0      	; 0x380 <readEncoder+0x6>
 380:	1f 92       	push	r1
 382:	cd b7       	in	r28, 0x3d	; 61
 384:	de b7       	in	r29, 0x3e	; 62
	currentPos = (PORTC.IN >> 4) & 3;
 386:	80 e4       	ldi	r24, 0x40	; 64
 388:	96 e0       	ldi	r25, 0x06	; 6
 38a:	fc 01       	movw	r30, r24
 38c:	80 85       	ldd	r24, Z+8	; 0x08
 38e:	82 95       	swap	r24
 390:	8f 70       	andi	r24, 0x0F	; 15
 392:	83 70       	andi	r24, 0x03	; 3
 394:	80 93 1e 20 	sts	0x201E, r24	; 0x80201e <currentPos>
	uint8_t s = (currentPos << 2) | prevpos;
 398:	80 91 1e 20 	lds	r24, 0x201E	; 0x80201e <currentPos>
 39c:	88 2f       	mov	r24, r24
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	88 0f       	add	r24, r24
 3a2:	99 1f       	adc	r25, r25
 3a4:	88 0f       	add	r24, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	98 2f       	mov	r25, r24
 3aa:	80 91 1f 20 	lds	r24, 0x201F	; 0x80201f <prevpos>
 3ae:	89 2b       	or	r24, r25
 3b0:	8b 83       	std	Y+3, r24	; 0x03
	int position = 0;
 3b2:	19 82       	std	Y+1, r1	; 0x01
 3b4:	1a 82       	std	Y+2, r1	; 0x02
	switch (s) {
 3b6:	8b 81       	ldd	r24, Y+3	; 0x03
 3b8:	88 2f       	mov	r24, r24
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	09 2e       	mov	r0, r25
 3be:	00 0c       	add	r0, r0
 3c0:	aa 0b       	sbc	r26, r26
 3c2:	bb 0b       	sbc	r27, r27
 3c4:	40 e0       	ldi	r20, 0x00	; 0
 3c6:	50 e0       	ldi	r21, 0x00	; 0
 3c8:	2f e0       	ldi	r18, 0x0F	; 15
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	84 1b       	sub	r24, r20
 3ce:	95 0b       	sbc	r25, r21
 3d0:	28 17       	cp	r18, r24
 3d2:	39 07       	cpc	r19, r25
 3d4:	b8 f0       	brcs	.+46     	; 0x404 <__FUSE_REGION_LENGTH__+0x4>
 3d6:	8a 54       	subi	r24, 0x4A	; 74
 3d8:	9f 4f       	sbci	r25, 0xFF	; 255
 3da:	fc 01       	movw	r30, r24
 3dc:	0c 94 b8 04 	jmp	0x970	; 0x970 <__tablejump2__>
		case 0: case 5: case 10: case 15:
		break;
		case 1: case 7: case 8: case 14:
		position++; break;
 3e0:	89 81       	ldd	r24, Y+1	; 0x01
 3e2:	9a 81       	ldd	r25, Y+2	; 0x02
 3e4:	01 96       	adiw	r24, 0x01	; 1
 3e6:	89 83       	std	Y+1, r24	; 0x01
 3e8:	9a 83       	std	Y+2, r25	; 0x02
 3ea:	13 c0       	rjmp	.+38     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		case 2: case 4: case 11: case 13:
		position--; break;
 3ec:	89 81       	ldd	r24, Y+1	; 0x01
 3ee:	9a 81       	ldd	r25, Y+2	; 0x02
 3f0:	01 97       	sbiw	r24, 0x01	; 1
 3f2:	89 83       	std	Y+1, r24	; 0x01
 3f4:	9a 83       	std	Y+2, r25	; 0x02
 3f6:	0d c0       	rjmp	.+26     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		case 3: case 12:
		position += 2; break;
 3f8:	89 81       	ldd	r24, Y+1	; 0x01
 3fa:	9a 81       	ldd	r25, Y+2	; 0x02
 3fc:	02 96       	adiw	r24, 0x02	; 2
 3fe:	89 83       	std	Y+1, r24	; 0x01
 400:	9a 83       	std	Y+2, r25	; 0x02
 402:	07 c0       	rjmp	.+14     	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
		default:
		position -= 2; break;
 404:	89 81       	ldd	r24, Y+1	; 0x01
 406:	9a 81       	ldd	r25, Y+2	; 0x02
 408:	02 97       	sbiw	r24, 0x02	; 2
 40a:	89 83       	std	Y+1, r24	; 0x01
 40c:	9a 83       	std	Y+2, r25	; 0x02
 40e:	01 c0       	rjmp	.+2      	; 0x412 <__FUSE_REGION_LENGTH__+0x12>
	currentPos = (PORTC.IN >> 4) & 3;
	uint8_t s = (currentPos << 2) | prevpos;
	int position = 0;
	switch (s) {
		case 0: case 5: case 10: case 15:
		break;
 410:	00 00       	nop
		case 3: case 12:
		position += 2; break;
		default:
		position -= 2; break;
	}
	prevpos = currentPos;
 412:	80 91 1e 20 	lds	r24, 0x201E	; 0x80201e <currentPos>
 416:	80 93 1f 20 	sts	0x201F, r24	; 0x80201f <prevpos>
	return position;
 41a:	89 81       	ldd	r24, Y+1	; 0x01
 41c:	9a 81       	ldd	r25, Y+2	; 0x02
}
 41e:	23 96       	adiw	r28, 0x03	; 3
 420:	cd bf       	out	0x3d, r28	; 61
 422:	de bf       	out	0x3e, r29	; 62
 424:	df 91       	pop	r29
 426:	cf 91       	pop	r28
 428:	08 95       	ret

0000042a <main>:
char a;

void SimpleFunction(void);	//A simple function: print a counter (0 to 9) to the terminal

int main(void)
{	
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	cd b7       	in	r28, 0x3d	; 61
 430:	de b7       	in	r29, 0x3e	; 62
 432:	2e 97       	sbiw	r28, 0x0e	; 14
 434:	cd bf       	out	0x3d, r28	; 61
 436:	de bf       	out	0x3e, r29	; 62
	//###1###
	 
	//Initialize subsystems
	ClockInit();			//Initialize system clock (16 MHz)
 438:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <ClockInit>
	USARTInit();			//Initialize USART and bind to stdout,stdin
 43c:	0e 94 28 03 	call	0x650	; 0x650 <USARTInit>
	AnalogInit();			//Initialize ADC
 440:	0e 94 ed 00 	call	0x1da	; 0x1da <AnalogInit>
	AccInit();				//Initialize accelerometer system
 444:	0e 94 e5 00 	call	0x1ca	; 0x1ca <AccInit>
	LEDInit();				//Initialize LEDs
 448:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <LEDInit>
	SwitchInit();			//Initialize switches
 44c:	0e 94 02 03 	call	0x604	; 0x604 <SwitchInit>
	EncoderInit();			//Initialize encoder
 450:	0e 94 0a 01 	call	0x214	; 0x214 <EncoderInit>
	SpeakerInit();			//Initialize speaker system
 454:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <SpeakerInit>
	
	//Enable interrupts
	PMIC.CTRL|=0b00000111;  //Enable low, medium, high priority interrupts
 458:	80 ea       	ldi	r24, 0xA0	; 160
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	20 ea       	ldi	r18, 0xA0	; 160
 45e:	30 e0       	ldi	r19, 0x00	; 0
 460:	f9 01       	movw	r30, r18
 462:	22 81       	ldd	r18, Z+2	; 0x02
 464:	27 60       	ori	r18, 0x07	; 7
 466:	fc 01       	movw	r30, r24
 468:	22 83       	std	Z+2, r18	; 0x02
	SREG|=0b10000000;		//Global interrupt enable
 46a:	8f e3       	ldi	r24, 0x3F	; 63
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	2f e3       	ldi	r18, 0x3F	; 63
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	f9 01       	movw	r30, r18
 474:	20 81       	ld	r18, Z
 476:	20 68       	ori	r18, 0x80	; 128
 478:	fc 01       	movw	r30, r24
 47a:	20 83       	st	Z, r18
 47c:	80 e0       	ldi	r24, 0x00	; 0
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	aa ef       	ldi	r26, 0xFA	; 250
 482:	b3 e4       	ldi	r27, 0x43	; 67
 484:	89 83       	std	Y+1, r24	; 0x01
 486:	9a 83       	std	Y+2, r25	; 0x02
 488:	ab 83       	std	Y+3, r26	; 0x03
 48a:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 48c:	20 e0       	ldi	r18, 0x00	; 0
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	4a e7       	ldi	r20, 0x7A	; 122
 492:	55 e4       	ldi	r21, 0x45	; 69
 494:	69 81       	ldd	r22, Y+1	; 0x01
 496:	7a 81       	ldd	r23, Y+2	; 0x02
 498:	8b 81       	ldd	r24, Y+3	; 0x03
 49a:	9c 81       	ldd	r25, Y+4	; 0x04
 49c:	0e 94 23 04 	call	0x846	; 0x846 <__mulsf3>
 4a0:	dc 01       	movw	r26, r24
 4a2:	cb 01       	movw	r24, r22
 4a4:	8d 83       	std	Y+5, r24	; 0x05
 4a6:	9e 83       	std	Y+6, r25	; 0x06
 4a8:	af 83       	std	Y+7, r26	; 0x07
 4aa:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 4ac:	20 e0       	ldi	r18, 0x00	; 0
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	40 e8       	ldi	r20, 0x80	; 128
 4b2:	5f e3       	ldi	r21, 0x3F	; 63
 4b4:	6d 81       	ldd	r22, Y+5	; 0x05
 4b6:	7e 81       	ldd	r23, Y+6	; 0x06
 4b8:	8f 81       	ldd	r24, Y+7	; 0x07
 4ba:	98 85       	ldd	r25, Y+8	; 0x08
 4bc:	0e 94 9d 03 	call	0x73a	; 0x73a <__cmpsf2>
 4c0:	88 23       	and	r24, r24
 4c2:	2c f4       	brge	.+10     	; 0x4ce <main+0xa4>
		__ticks = 1;
 4c4:	81 e0       	ldi	r24, 0x01	; 1
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	89 87       	std	Y+9, r24	; 0x09
 4ca:	9a 87       	std	Y+10, r25	; 0x0a
 4cc:	3f c0       	rjmp	.+126    	; 0x54c <main+0x122>
	else if (__tmp > 65535)
 4ce:	20 e0       	ldi	r18, 0x00	; 0
 4d0:	3f ef       	ldi	r19, 0xFF	; 255
 4d2:	4f e7       	ldi	r20, 0x7F	; 127
 4d4:	57 e4       	ldi	r21, 0x47	; 71
 4d6:	6d 81       	ldd	r22, Y+5	; 0x05
 4d8:	7e 81       	ldd	r23, Y+6	; 0x06
 4da:	8f 81       	ldd	r24, Y+7	; 0x07
 4dc:	98 85       	ldd	r25, Y+8	; 0x08
 4de:	0e 94 1e 04 	call	0x83c	; 0x83c <__gesf2>
 4e2:	18 16       	cp	r1, r24
 4e4:	4c f5       	brge	.+82     	; 0x538 <main+0x10e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4e6:	20 e0       	ldi	r18, 0x00	; 0
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	40 e2       	ldi	r20, 0x20	; 32
 4ec:	51 e4       	ldi	r21, 0x41	; 65
 4ee:	69 81       	ldd	r22, Y+1	; 0x01
 4f0:	7a 81       	ldd	r23, Y+2	; 0x02
 4f2:	8b 81       	ldd	r24, Y+3	; 0x03
 4f4:	9c 81       	ldd	r25, Y+4	; 0x04
 4f6:	0e 94 23 04 	call	0x846	; 0x846 <__mulsf3>
 4fa:	dc 01       	movw	r26, r24
 4fc:	cb 01       	movw	r24, r22
 4fe:	bc 01       	movw	r22, r24
 500:	cd 01       	movw	r24, r26
 502:	0e 94 a2 03 	call	0x744	; 0x744 <__fixunssfsi>
 506:	dc 01       	movw	r26, r24
 508:	cb 01       	movw	r24, r22
 50a:	89 87       	std	Y+9, r24	; 0x09
 50c:	9a 87       	std	Y+10, r25	; 0x0a
 50e:	0f c0       	rjmp	.+30     	; 0x52e <main+0x104>
 510:	80 e9       	ldi	r24, 0x90	; 144
 512:	91 e0       	ldi	r25, 0x01	; 1
 514:	8b 87       	std	Y+11, r24	; 0x0b
 516:	9c 87       	std	Y+12, r25	; 0x0c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 518:	8b 85       	ldd	r24, Y+11	; 0x0b
 51a:	9c 85       	ldd	r25, Y+12	; 0x0c
 51c:	01 97       	sbiw	r24, 0x01	; 1
 51e:	f1 f7       	brne	.-4      	; 0x51c <main+0xf2>
 520:	8b 87       	std	Y+11, r24	; 0x0b
 522:	9c 87       	std	Y+12, r25	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 524:	89 85       	ldd	r24, Y+9	; 0x09
 526:	9a 85       	ldd	r25, Y+10	; 0x0a
 528:	01 97       	sbiw	r24, 0x01	; 1
 52a:	89 87       	std	Y+9, r24	; 0x09
 52c:	9a 87       	std	Y+10, r25	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 52e:	89 85       	ldd	r24, Y+9	; 0x09
 530:	9a 85       	ldd	r25, Y+10	; 0x0a
 532:	89 2b       	or	r24, r25
 534:	69 f7       	brne	.-38     	; 0x510 <main+0xe6>
 536:	14 c0       	rjmp	.+40     	; 0x560 <main+0x136>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 538:	6d 81       	ldd	r22, Y+5	; 0x05
 53a:	7e 81       	ldd	r23, Y+6	; 0x06
 53c:	8f 81       	ldd	r24, Y+7	; 0x07
 53e:	98 85       	ldd	r25, Y+8	; 0x08
 540:	0e 94 a2 03 	call	0x744	; 0x744 <__fixunssfsi>
 544:	dc 01       	movw	r26, r24
 546:	cb 01       	movw	r24, r22
 548:	89 87       	std	Y+9, r24	; 0x09
 54a:	9a 87       	std	Y+10, r25	; 0x0a
 54c:	89 85       	ldd	r24, Y+9	; 0x09
 54e:	9a 85       	ldd	r25, Y+10	; 0x0a
 550:	8d 87       	std	Y+13, r24	; 0x0d
 552:	9e 87       	std	Y+14, r25	; 0x0e
 554:	8d 85       	ldd	r24, Y+13	; 0x0d
 556:	9e 85       	ldd	r25, Y+14	; 0x0e
 558:	01 97       	sbiw	r24, 0x01	; 1
 55a:	f1 f7       	brne	.-4      	; 0x558 <main+0x12e>
 55c:	8d 87       	std	Y+13, r24	; 0x0d
 55e:	9e 87       	std	Y+14, r25	; 0x0e
	
	
	
	while (1){
		// Start ADC conversion
		ADCA.CH0.CTRL |= 0x80;
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	92 e0       	ldi	r25, 0x02	; 2
 564:	20 e0       	ldi	r18, 0x00	; 0
 566:	32 e0       	ldi	r19, 0x02	; 2
 568:	f9 01       	movw	r30, r18
 56a:	20 a1       	ldd	r18, Z+32	; 0x20
 56c:	20 68       	ori	r18, 0x80	; 128
 56e:	fc 01       	movw	r30, r24
 570:	20 a3       	std	Z+32, r18	; 0x20
		sprintf(text, "encoder: %d\r",EncoderGetPos());
 572:	0e 94 42 01 	call	0x284	; 0x284 <EncoderGetPos>
 576:	29 2f       	mov	r18, r25
 578:	2f 93       	push	r18
 57a:	8f 93       	push	r24
 57c:	8e e0       	ldi	r24, 0x0E	; 14
 57e:	90 e2       	ldi	r25, 0x20	; 32
 580:	89 2f       	mov	r24, r25
 582:	8f 93       	push	r24
 584:	8e e0       	ldi	r24, 0x0E	; 14
 586:	90 e2       	ldi	r25, 0x20	; 32
 588:	8f 93       	push	r24
 58a:	80 e2       	ldi	r24, 0x20	; 32
 58c:	90 e2       	ldi	r25, 0x20	; 32
 58e:	89 2f       	mov	r24, r25
 590:	8f 93       	push	r24
 592:	80 e2       	ldi	r24, 0x20	; 32
 594:	90 e2       	ldi	r25, 0x20	; 32
 596:	8f 93       	push	r24
 598:	0e 94 ee 04 	call	0x9dc	; 0x9dc <sprintf>
 59c:	0f 90       	pop	r0
 59e:	0f 90       	pop	r0
 5a0:	0f 90       	pop	r0
 5a2:	0f 90       	pop	r0
 5a4:	0f 90       	pop	r0
 5a6:	0f 90       	pop	r0
		puts(text);
 5a8:	80 e2       	ldi	r24, 0x20	; 32
 5aa:	90 e2       	ldi	r25, 0x20	; 32
 5ac:	0e 94 be 04 	call	0x97c	; 0x97c <puts>
		
		
		//putchar('U');
	}
 5b0:	d7 cf       	rjmp	.-82     	; 0x560 <main+0x136>

000005b2 <LEDInit>:
 5b2:	cf 93       	push	r28
 5b4:	df 93       	push	r29
 5b6:	cd b7       	in	r28, 0x3d	; 61
 5b8:	de b7       	in	r29, 0x3e	; 62
 5ba:	80 e8       	ldi	r24, 0x80	; 128
 5bc:	96 e0       	ldi	r25, 0x06	; 6
 5be:	2f e0       	ldi	r18, 0x0F	; 15
 5c0:	fc 01       	movw	r30, r24
 5c2:	21 83       	std	Z+1, r18	; 0x01
 5c4:	80 e8       	ldi	r24, 0x80	; 128
 5c6:	96 e0       	ldi	r25, 0x06	; 6
 5c8:	20 e4       	ldi	r18, 0x40	; 64
 5ca:	fc 01       	movw	r30, r24
 5cc:	20 8b       	std	Z+16, r18	; 0x10
 5ce:	80 e8       	ldi	r24, 0x80	; 128
 5d0:	96 e0       	ldi	r25, 0x06	; 6
 5d2:	20 e4       	ldi	r18, 0x40	; 64
 5d4:	fc 01       	movw	r30, r24
 5d6:	21 8b       	std	Z+17, r18	; 0x11
 5d8:	80 e8       	ldi	r24, 0x80	; 128
 5da:	96 e0       	ldi	r25, 0x06	; 6
 5dc:	20 e4       	ldi	r18, 0x40	; 64
 5de:	fc 01       	movw	r30, r24
 5e0:	22 8b       	std	Z+18, r18	; 0x12
 5e2:	80 e8       	ldi	r24, 0x80	; 128
 5e4:	96 e0       	ldi	r25, 0x06	; 6
 5e6:	20 e4       	ldi	r18, 0x40	; 64
 5e8:	fc 01       	movw	r30, r24
 5ea:	23 8b       	std	Z+19, r18	; 0x13
 5ec:	00 00       	nop
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	08 95       	ret

000005f4 <SpeakerInit>:
 5f4:	cf 93       	push	r28
 5f6:	df 93       	push	r29
 5f8:	cd b7       	in	r28, 0x3d	; 61
 5fa:	de b7       	in	r29, 0x3e	; 62
 5fc:	00 00       	nop
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	08 95       	ret

00000604 <SwitchInit>:
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	cd b7       	in	r28, 0x3d	; 61
 60a:	de b7       	in	r29, 0x3e	; 62
 60c:	80 e6       	ldi	r24, 0x60	; 96
 60e:	96 e0       	ldi	r25, 0x06	; 6
 610:	21 ef       	ldi	r18, 0xF1	; 241
 612:	fc 01       	movw	r30, r24
 614:	22 83       	std	Z+2, r18	; 0x02
 616:	80 e6       	ldi	r24, 0x60	; 96
 618:	96 e0       	ldi	r25, 0x06	; 6
 61a:	28 e5       	ldi	r18, 0x58	; 88
 61c:	fc 01       	movw	r30, r24
 61e:	20 8b       	std	Z+16, r18	; 0x10
 620:	80 e6       	ldi	r24, 0x60	; 96
 622:	96 e0       	ldi	r25, 0x06	; 6
 624:	28 e5       	ldi	r18, 0x58	; 88
 626:	fc 01       	movw	r30, r24
 628:	24 8b       	std	Z+20, r18	; 0x14
 62a:	80 e6       	ldi	r24, 0x60	; 96
 62c:	96 e0       	ldi	r25, 0x06	; 6
 62e:	28 e5       	ldi	r18, 0x58	; 88
 630:	fc 01       	movw	r30, r24
 632:	25 8b       	std	Z+21, r18	; 0x15
 634:	80 e6       	ldi	r24, 0x60	; 96
 636:	96 e0       	ldi	r25, 0x06	; 6
 638:	28 e5       	ldi	r18, 0x58	; 88
 63a:	fc 01       	movw	r30, r24
 63c:	26 8b       	std	Z+22, r18	; 0x16
 63e:	80 e6       	ldi	r24, 0x60	; 96
 640:	96 e0       	ldi	r25, 0x06	; 6
 642:	28 e5       	ldi	r18, 0x58	; 88
 644:	fc 01       	movw	r30, r24
 646:	27 8b       	std	Z+23, r18	; 0x17
 648:	00 00       	nop
 64a:	df 91       	pop	r29
 64c:	cf 91       	pop	r28
 64e:	08 95       	ret

00000650 <USARTInit>:
 int stdio_putchar(char c, FILE * stream);
 int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_WRITE);

void USARTInit(void)
{
 650:	cf 93       	push	r28
 652:	df 93       	push	r29
 654:	cd b7       	in	r28, 0x3d	; 61
 656:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	
 658:	80 e6       	ldi	r24, 0x60	; 96
 65a:	96 e0       	ldi	r25, 0x06	; 6
 65c:	28 e0       	ldi	r18, 0x08	; 8
 65e:	fc 01       	movw	r30, r24
 660:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
 662:	80 e6       	ldi	r24, 0x60	; 96
 664:	96 e0       	ldi	r25, 0x06	; 6
 666:	24 e0       	ldi	r18, 0x04	; 4
 668:	fc 01       	movw	r30, r24
 66a:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000;
 66c:	80 ea       	ldi	r24, 0xA0	; 160
 66e:	99 e0       	ldi	r25, 0x09	; 9
 670:	fc 01       	movw	r30, r24
 672:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000;
 674:	80 ea       	ldi	r24, 0xA0	; 160
 676:	99 e0       	ldi	r25, 0x09	; 9
 678:	28 e1       	ldi	r18, 0x18	; 24
 67a:	fc 01       	movw	r30, r24
 67c:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011;
 67e:	80 ea       	ldi	r24, 0xA0	; 160
 680:	99 e0       	ldi	r25, 0x09	; 9
 682:	23 e0       	ldi	r18, 0x03	; 3
 684:	fc 01       	movw	r30, r24
 686:	25 83       	std	Z+5, r18	; 0x05
	
	USART.BAUDCTRLA=0xD7; //BSEL=3301, BSCALE=-5 9600 baud
 688:	80 ea       	ldi	r24, 0xA0	; 160
 68a:	99 e0       	ldi	r25, 0x09	; 9
 68c:	27 ed       	ldi	r18, 0xD7	; 215
 68e:	fc 01       	movw	r30, r24
 690:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0x93; 
 692:	80 ea       	ldi	r24, 0xA0	; 160
 694:	99 e0       	ldi	r25, 0x09	; 9
 696:	23 e9       	ldi	r18, 0x93	; 147
 698:	fc 01       	movw	r30, r24
 69a:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio;
 69c:	80 e0       	ldi	r24, 0x00	; 0
 69e:	90 e2       	ldi	r25, 0x20	; 32
 6a0:	80 93 32 20 	sts	0x2032, r24	; 0x802032 <__iob+0x2>
 6a4:	90 93 33 20 	sts	0x2033, r25	; 0x802033 <__iob+0x3>
	stdin=&UsartStdio;
 6a8:	80 e0       	ldi	r24, 0x00	; 0
 6aa:	90 e2       	ldi	r25, 0x20	; 32
 6ac:	80 93 30 20 	sts	0x2030, r24	; 0x802030 <__iob>
 6b0:	90 93 31 20 	sts	0x2031, r25	; 0x802031 <__iob+0x1>
}
 6b4:	00 00       	nop
 6b6:	df 91       	pop	r29
 6b8:	cf 91       	pop	r28
 6ba:	08 95       	ret

000006bc <stdio_putchar>:


int stdio_putchar(char c, FILE * stream)
{
 6bc:	cf 93       	push	r28
 6be:	df 93       	push	r29
 6c0:	00 d0       	rcall	.+0      	; 0x6c2 <stdio_putchar+0x6>
 6c2:	1f 92       	push	r1
 6c4:	cd b7       	in	r28, 0x3d	; 61
 6c6:	de b7       	in	r29, 0x3e	; 62
 6c8:	89 83       	std	Y+1, r24	; 0x01
 6ca:	6a 83       	std	Y+2, r22	; 0x02
 6cc:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = c;
 6ce:	80 ea       	ldi	r24, 0xA0	; 160
 6d0:	99 e0       	ldi	r25, 0x09	; 9
 6d2:	29 81       	ldd	r18, Y+1	; 0x01
 6d4:	fc 01       	movw	r30, r24
 6d6:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000));
 6d8:	00 00       	nop
 6da:	80 ea       	ldi	r24, 0xA0	; 160
 6dc:	99 e0       	ldi	r25, 0x09	; 9
 6de:	fc 01       	movw	r30, r24
 6e0:	81 81       	ldd	r24, Z+1	; 0x01
 6e2:	88 2f       	mov	r24, r24
 6e4:	90 e0       	ldi	r25, 0x00	; 0
 6e6:	80 74       	andi	r24, 0x40	; 64
 6e8:	99 27       	eor	r25, r25
 6ea:	89 2b       	or	r24, r25
 6ec:	b1 f3       	breq	.-20     	; 0x6da <stdio_putchar+0x1e>
	USART.STATUS=0b01000000;
 6ee:	80 ea       	ldi	r24, 0xA0	; 160
 6f0:	99 e0       	ldi	r25, 0x09	; 9
 6f2:	20 e4       	ldi	r18, 0x40	; 64
 6f4:	fc 01       	movw	r30, r24
 6f6:	21 83       	std	Z+1, r18	; 0x01
	return 0;
 6f8:	80 e0       	ldi	r24, 0x00	; 0
 6fa:	90 e0       	ldi	r25, 0x00	; 0
}
 6fc:	23 96       	adiw	r28, 0x03	; 3
 6fe:	cd bf       	out	0x3d, r28	; 61
 700:	de bf       	out	0x3e, r29	; 62
 702:	df 91       	pop	r29
 704:	cf 91       	pop	r28
 706:	08 95       	ret

00000708 <stdio_getchar>:
	
int stdio_getchar(FILE *stream)
{
 708:	cf 93       	push	r28
 70a:	df 93       	push	r29
 70c:	00 d0       	rcall	.+0      	; 0x70e <stdio_getchar+0x6>
 70e:	cd b7       	in	r28, 0x3d	; 61
 710:	de b7       	in	r29, 0x3e	; 62
 712:	89 83       	std	Y+1, r24	; 0x01
 714:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000));
 716:	00 00       	nop
 718:	80 ea       	ldi	r24, 0xA0	; 160
 71a:	99 e0       	ldi	r25, 0x09	; 9
 71c:	fc 01       	movw	r30, r24
 71e:	81 81       	ldd	r24, Z+1	; 0x01
 720:	88 23       	and	r24, r24
 722:	d4 f7       	brge	.-12     	; 0x718 <stdio_getchar+0x10>
	return USART.DATA;
 724:	80 ea       	ldi	r24, 0xA0	; 160
 726:	99 e0       	ldi	r25, 0x09	; 9
 728:	fc 01       	movw	r30, r24
 72a:	80 81       	ld	r24, Z
 72c:	88 2f       	mov	r24, r24
 72e:	90 e0       	ldi	r25, 0x00	; 0
}
 730:	0f 90       	pop	r0
 732:	0f 90       	pop	r0
 734:	df 91       	pop	r29
 736:	cf 91       	pop	r28
 738:	08 95       	ret

0000073a <__cmpsf2>:
 73a:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fp_cmp>
 73e:	08 f4       	brcc	.+2      	; 0x742 <__cmpsf2+0x8>
 740:	81 e0       	ldi	r24, 0x01	; 1
 742:	08 95       	ret

00000744 <__fixunssfsi>:
 744:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__fp_splitA>
 748:	88 f0       	brcs	.+34     	; 0x76c <__fixunssfsi+0x28>
 74a:	9f 57       	subi	r25, 0x7F	; 127
 74c:	98 f0       	brcs	.+38     	; 0x774 <__fixunssfsi+0x30>
 74e:	b9 2f       	mov	r27, r25
 750:	99 27       	eor	r25, r25
 752:	b7 51       	subi	r27, 0x17	; 23
 754:	b0 f0       	brcs	.+44     	; 0x782 <__fixunssfsi+0x3e>
 756:	e1 f0       	breq	.+56     	; 0x790 <__fixunssfsi+0x4c>
 758:	66 0f       	add	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	99 1f       	adc	r25, r25
 760:	1a f0       	brmi	.+6      	; 0x768 <__fixunssfsi+0x24>
 762:	ba 95       	dec	r27
 764:	c9 f7       	brne	.-14     	; 0x758 <__fixunssfsi+0x14>
 766:	14 c0       	rjmp	.+40     	; 0x790 <__fixunssfsi+0x4c>
 768:	b1 30       	cpi	r27, 0x01	; 1
 76a:	91 f0       	breq	.+36     	; 0x790 <__fixunssfsi+0x4c>
 76c:	0e 94 17 04 	call	0x82e	; 0x82e <__fp_zero>
 770:	b1 e0       	ldi	r27, 0x01	; 1
 772:	08 95       	ret
 774:	0c 94 17 04 	jmp	0x82e	; 0x82e <__fp_zero>
 778:	67 2f       	mov	r22, r23
 77a:	78 2f       	mov	r23, r24
 77c:	88 27       	eor	r24, r24
 77e:	b8 5f       	subi	r27, 0xF8	; 248
 780:	39 f0       	breq	.+14     	; 0x790 <__fixunssfsi+0x4c>
 782:	b9 3f       	cpi	r27, 0xF9	; 249
 784:	cc f3       	brlt	.-14     	; 0x778 <__fixunssfsi+0x34>
 786:	86 95       	lsr	r24
 788:	77 95       	ror	r23
 78a:	67 95       	ror	r22
 78c:	b3 95       	inc	r27
 78e:	d9 f7       	brne	.-10     	; 0x786 <__fixunssfsi+0x42>
 790:	3e f4       	brtc	.+14     	; 0x7a0 <__fixunssfsi+0x5c>
 792:	90 95       	com	r25
 794:	80 95       	com	r24
 796:	70 95       	com	r23
 798:	61 95       	neg	r22
 79a:	7f 4f       	sbci	r23, 0xFF	; 255
 79c:	8f 4f       	sbci	r24, 0xFF	; 255
 79e:	9f 4f       	sbci	r25, 0xFF	; 255
 7a0:	08 95       	ret

000007a2 <__fp_cmp>:
 7a2:	99 0f       	add	r25, r25
 7a4:	00 08       	sbc	r0, r0
 7a6:	55 0f       	add	r21, r21
 7a8:	aa 0b       	sbc	r26, r26
 7aa:	e0 e8       	ldi	r30, 0x80	; 128
 7ac:	fe ef       	ldi	r31, 0xFE	; 254
 7ae:	16 16       	cp	r1, r22
 7b0:	17 06       	cpc	r1, r23
 7b2:	e8 07       	cpc	r30, r24
 7b4:	f9 07       	cpc	r31, r25
 7b6:	c0 f0       	brcs	.+48     	; 0x7e8 <__fp_cmp+0x46>
 7b8:	12 16       	cp	r1, r18
 7ba:	13 06       	cpc	r1, r19
 7bc:	e4 07       	cpc	r30, r20
 7be:	f5 07       	cpc	r31, r21
 7c0:	98 f0       	brcs	.+38     	; 0x7e8 <__fp_cmp+0x46>
 7c2:	62 1b       	sub	r22, r18
 7c4:	73 0b       	sbc	r23, r19
 7c6:	84 0b       	sbc	r24, r20
 7c8:	95 0b       	sbc	r25, r21
 7ca:	39 f4       	brne	.+14     	; 0x7da <__fp_cmp+0x38>
 7cc:	0a 26       	eor	r0, r26
 7ce:	61 f0       	breq	.+24     	; 0x7e8 <__fp_cmp+0x46>
 7d0:	23 2b       	or	r18, r19
 7d2:	24 2b       	or	r18, r20
 7d4:	25 2b       	or	r18, r21
 7d6:	21 f4       	brne	.+8      	; 0x7e0 <__fp_cmp+0x3e>
 7d8:	08 95       	ret
 7da:	0a 26       	eor	r0, r26
 7dc:	09 f4       	brne	.+2      	; 0x7e0 <__fp_cmp+0x3e>
 7de:	a1 40       	sbci	r26, 0x01	; 1
 7e0:	a6 95       	lsr	r26
 7e2:	8f ef       	ldi	r24, 0xFF	; 255
 7e4:	81 1d       	adc	r24, r1
 7e6:	81 1d       	adc	r24, r1
 7e8:	08 95       	ret

000007ea <__fp_split3>:
 7ea:	57 fd       	sbrc	r21, 7
 7ec:	90 58       	subi	r25, 0x80	; 128
 7ee:	44 0f       	add	r20, r20
 7f0:	55 1f       	adc	r21, r21
 7f2:	59 f0       	breq	.+22     	; 0x80a <__fp_splitA+0x10>
 7f4:	5f 3f       	cpi	r21, 0xFF	; 255
 7f6:	71 f0       	breq	.+28     	; 0x814 <__fp_splitA+0x1a>
 7f8:	47 95       	ror	r20

000007fa <__fp_splitA>:
 7fa:	88 0f       	add	r24, r24
 7fc:	97 fb       	bst	r25, 7
 7fe:	99 1f       	adc	r25, r25
 800:	61 f0       	breq	.+24     	; 0x81a <__fp_splitA+0x20>
 802:	9f 3f       	cpi	r25, 0xFF	; 255
 804:	79 f0       	breq	.+30     	; 0x824 <__fp_splitA+0x2a>
 806:	87 95       	ror	r24
 808:	08 95       	ret
 80a:	12 16       	cp	r1, r18
 80c:	13 06       	cpc	r1, r19
 80e:	14 06       	cpc	r1, r20
 810:	55 1f       	adc	r21, r21
 812:	f2 cf       	rjmp	.-28     	; 0x7f8 <__fp_split3+0xe>
 814:	46 95       	lsr	r20
 816:	f1 df       	rcall	.-30     	; 0x7fa <__fp_splitA>
 818:	08 c0       	rjmp	.+16     	; 0x82a <__fp_splitA+0x30>
 81a:	16 16       	cp	r1, r22
 81c:	17 06       	cpc	r1, r23
 81e:	18 06       	cpc	r1, r24
 820:	99 1f       	adc	r25, r25
 822:	f1 cf       	rjmp	.-30     	; 0x806 <__fp_splitA+0xc>
 824:	86 95       	lsr	r24
 826:	71 05       	cpc	r23, r1
 828:	61 05       	cpc	r22, r1
 82a:	08 94       	sec
 82c:	08 95       	ret

0000082e <__fp_zero>:
 82e:	e8 94       	clt

00000830 <__fp_szero>:
 830:	bb 27       	eor	r27, r27
 832:	66 27       	eor	r22, r22
 834:	77 27       	eor	r23, r23
 836:	cb 01       	movw	r24, r22
 838:	97 f9       	bld	r25, 7
 83a:	08 95       	ret

0000083c <__gesf2>:
 83c:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <__fp_cmp>
 840:	08 f4       	brcc	.+2      	; 0x844 <__gesf2+0x8>
 842:	8f ef       	ldi	r24, 0xFF	; 255
 844:	08 95       	ret

00000846 <__mulsf3>:
 846:	0e 94 36 04 	call	0x86c	; 0x86c <__mulsf3x>
 84a:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__fp_round>
 84e:	0e 94 99 04 	call	0x932	; 0x932 <__fp_pscA>
 852:	38 f0       	brcs	.+14     	; 0x862 <__mulsf3+0x1c>
 854:	0e 94 a0 04 	call	0x940	; 0x940 <__fp_pscB>
 858:	20 f0       	brcs	.+8      	; 0x862 <__mulsf3+0x1c>
 85a:	95 23       	and	r25, r21
 85c:	11 f0       	breq	.+4      	; 0x862 <__mulsf3+0x1c>
 85e:	0c 94 90 04 	jmp	0x920	; 0x920 <__fp_inf>
 862:	0c 94 96 04 	jmp	0x92c	; 0x92c <__fp_nan>
 866:	11 24       	eor	r1, r1
 868:	0c 94 18 04 	jmp	0x830	; 0x830 <__fp_szero>

0000086c <__mulsf3x>:
 86c:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fp_split3>
 870:	70 f3       	brcs	.-36     	; 0x84e <__mulsf3+0x8>

00000872 <__mulsf3_pse>:
 872:	95 9f       	mul	r25, r21
 874:	c1 f3       	breq	.-16     	; 0x866 <__mulsf3+0x20>
 876:	95 0f       	add	r25, r21
 878:	50 e0       	ldi	r21, 0x00	; 0
 87a:	55 1f       	adc	r21, r21
 87c:	62 9f       	mul	r22, r18
 87e:	f0 01       	movw	r30, r0
 880:	72 9f       	mul	r23, r18
 882:	bb 27       	eor	r27, r27
 884:	f0 0d       	add	r31, r0
 886:	b1 1d       	adc	r27, r1
 888:	63 9f       	mul	r22, r19
 88a:	aa 27       	eor	r26, r26
 88c:	f0 0d       	add	r31, r0
 88e:	b1 1d       	adc	r27, r1
 890:	aa 1f       	adc	r26, r26
 892:	64 9f       	mul	r22, r20
 894:	66 27       	eor	r22, r22
 896:	b0 0d       	add	r27, r0
 898:	a1 1d       	adc	r26, r1
 89a:	66 1f       	adc	r22, r22
 89c:	82 9f       	mul	r24, r18
 89e:	22 27       	eor	r18, r18
 8a0:	b0 0d       	add	r27, r0
 8a2:	a1 1d       	adc	r26, r1
 8a4:	62 1f       	adc	r22, r18
 8a6:	73 9f       	mul	r23, r19
 8a8:	b0 0d       	add	r27, r0
 8aa:	a1 1d       	adc	r26, r1
 8ac:	62 1f       	adc	r22, r18
 8ae:	83 9f       	mul	r24, r19
 8b0:	a0 0d       	add	r26, r0
 8b2:	61 1d       	adc	r22, r1
 8b4:	22 1f       	adc	r18, r18
 8b6:	74 9f       	mul	r23, r20
 8b8:	33 27       	eor	r19, r19
 8ba:	a0 0d       	add	r26, r0
 8bc:	61 1d       	adc	r22, r1
 8be:	23 1f       	adc	r18, r19
 8c0:	84 9f       	mul	r24, r20
 8c2:	60 0d       	add	r22, r0
 8c4:	21 1d       	adc	r18, r1
 8c6:	82 2f       	mov	r24, r18
 8c8:	76 2f       	mov	r23, r22
 8ca:	6a 2f       	mov	r22, r26
 8cc:	11 24       	eor	r1, r1
 8ce:	9f 57       	subi	r25, 0x7F	; 127
 8d0:	50 40       	sbci	r21, 0x00	; 0
 8d2:	9a f0       	brmi	.+38     	; 0x8fa <__mulsf3_pse+0x88>
 8d4:	f1 f0       	breq	.+60     	; 0x912 <__mulsf3_pse+0xa0>
 8d6:	88 23       	and	r24, r24
 8d8:	4a f0       	brmi	.+18     	; 0x8ec <__mulsf3_pse+0x7a>
 8da:	ee 0f       	add	r30, r30
 8dc:	ff 1f       	adc	r31, r31
 8de:	bb 1f       	adc	r27, r27
 8e0:	66 1f       	adc	r22, r22
 8e2:	77 1f       	adc	r23, r23
 8e4:	88 1f       	adc	r24, r24
 8e6:	91 50       	subi	r25, 0x01	; 1
 8e8:	50 40       	sbci	r21, 0x00	; 0
 8ea:	a9 f7       	brne	.-22     	; 0x8d6 <__mulsf3_pse+0x64>
 8ec:	9e 3f       	cpi	r25, 0xFE	; 254
 8ee:	51 05       	cpc	r21, r1
 8f0:	80 f0       	brcs	.+32     	; 0x912 <__mulsf3_pse+0xa0>
 8f2:	0c 94 90 04 	jmp	0x920	; 0x920 <__fp_inf>
 8f6:	0c 94 18 04 	jmp	0x830	; 0x830 <__fp_szero>
 8fa:	5f 3f       	cpi	r21, 0xFF	; 255
 8fc:	e4 f3       	brlt	.-8      	; 0x8f6 <__mulsf3_pse+0x84>
 8fe:	98 3e       	cpi	r25, 0xE8	; 232
 900:	d4 f3       	brlt	.-12     	; 0x8f6 <__mulsf3_pse+0x84>
 902:	86 95       	lsr	r24
 904:	77 95       	ror	r23
 906:	67 95       	ror	r22
 908:	b7 95       	ror	r27
 90a:	f7 95       	ror	r31
 90c:	e7 95       	ror	r30
 90e:	9f 5f       	subi	r25, 0xFF	; 255
 910:	c1 f7       	brne	.-16     	; 0x902 <__mulsf3_pse+0x90>
 912:	fe 2b       	or	r31, r30
 914:	88 0f       	add	r24, r24
 916:	91 1d       	adc	r25, r1
 918:	96 95       	lsr	r25
 91a:	87 95       	ror	r24
 91c:	97 f9       	bld	r25, 7
 91e:	08 95       	ret

00000920 <__fp_inf>:
 920:	97 f9       	bld	r25, 7
 922:	9f 67       	ori	r25, 0x7F	; 127
 924:	80 e8       	ldi	r24, 0x80	; 128
 926:	70 e0       	ldi	r23, 0x00	; 0
 928:	60 e0       	ldi	r22, 0x00	; 0
 92a:	08 95       	ret

0000092c <__fp_nan>:
 92c:	9f ef       	ldi	r25, 0xFF	; 255
 92e:	80 ec       	ldi	r24, 0xC0	; 192
 930:	08 95       	ret

00000932 <__fp_pscA>:
 932:	00 24       	eor	r0, r0
 934:	0a 94       	dec	r0
 936:	16 16       	cp	r1, r22
 938:	17 06       	cpc	r1, r23
 93a:	18 06       	cpc	r1, r24
 93c:	09 06       	cpc	r0, r25
 93e:	08 95       	ret

00000940 <__fp_pscB>:
 940:	00 24       	eor	r0, r0
 942:	0a 94       	dec	r0
 944:	12 16       	cp	r1, r18
 946:	13 06       	cpc	r1, r19
 948:	14 06       	cpc	r1, r20
 94a:	05 06       	cpc	r0, r21
 94c:	08 95       	ret

0000094e <__fp_round>:
 94e:	09 2e       	mov	r0, r25
 950:	03 94       	inc	r0
 952:	00 0c       	add	r0, r0
 954:	11 f4       	brne	.+4      	; 0x95a <__fp_round+0xc>
 956:	88 23       	and	r24, r24
 958:	52 f0       	brmi	.+20     	; 0x96e <__fp_round+0x20>
 95a:	bb 0f       	add	r27, r27
 95c:	40 f4       	brcc	.+16     	; 0x96e <__fp_round+0x20>
 95e:	bf 2b       	or	r27, r31
 960:	11 f4       	brne	.+4      	; 0x966 <__fp_round+0x18>
 962:	60 ff       	sbrs	r22, 0
 964:	04 c0       	rjmp	.+8      	; 0x96e <__fp_round+0x20>
 966:	6f 5f       	subi	r22, 0xFF	; 255
 968:	7f 4f       	sbci	r23, 0xFF	; 255
 96a:	8f 4f       	sbci	r24, 0xFF	; 255
 96c:	9f 4f       	sbci	r25, 0xFF	; 255
 96e:	08 95       	ret

00000970 <__tablejump2__>:
 970:	ee 0f       	add	r30, r30
 972:	ff 1f       	adc	r31, r31
 974:	05 90       	lpm	r0, Z+
 976:	f4 91       	lpm	r31, Z
 978:	e0 2d       	mov	r30, r0
 97a:	09 94       	ijmp

0000097c <puts>:
 97c:	0f 93       	push	r16
 97e:	1f 93       	push	r17
 980:	cf 93       	push	r28
 982:	df 93       	push	r29
 984:	e0 91 32 20 	lds	r30, 0x2032	; 0x802032 <__iob+0x2>
 988:	f0 91 33 20 	lds	r31, 0x2033	; 0x802033 <__iob+0x3>
 98c:	23 81       	ldd	r18, Z+3	; 0x03
 98e:	21 ff       	sbrs	r18, 1
 990:	1b c0       	rjmp	.+54     	; 0x9c8 <puts+0x4c>
 992:	8c 01       	movw	r16, r24
 994:	d0 e0       	ldi	r29, 0x00	; 0
 996:	c0 e0       	ldi	r28, 0x00	; 0
 998:	f8 01       	movw	r30, r16
 99a:	81 91       	ld	r24, Z+
 99c:	8f 01       	movw	r16, r30
 99e:	60 91 32 20 	lds	r22, 0x2032	; 0x802032 <__iob+0x2>
 9a2:	70 91 33 20 	lds	r23, 0x2033	; 0x802033 <__iob+0x3>
 9a6:	db 01       	movw	r26, r22
 9a8:	18 96       	adiw	r26, 0x08	; 8
 9aa:	ed 91       	ld	r30, X+
 9ac:	fc 91       	ld	r31, X
 9ae:	19 97       	sbiw	r26, 0x09	; 9
 9b0:	88 23       	and	r24, r24
 9b2:	31 f0       	breq	.+12     	; 0x9c0 <puts+0x44>
 9b4:	09 95       	icall
 9b6:	89 2b       	or	r24, r25
 9b8:	79 f3       	breq	.-34     	; 0x998 <puts+0x1c>
 9ba:	df ef       	ldi	r29, 0xFF	; 255
 9bc:	cf ef       	ldi	r28, 0xFF	; 255
 9be:	ec cf       	rjmp	.-40     	; 0x998 <puts+0x1c>
 9c0:	8a e0       	ldi	r24, 0x0A	; 10
 9c2:	09 95       	icall
 9c4:	89 2b       	or	r24, r25
 9c6:	19 f0       	breq	.+6      	; 0x9ce <puts+0x52>
 9c8:	8f ef       	ldi	r24, 0xFF	; 255
 9ca:	9f ef       	ldi	r25, 0xFF	; 255
 9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <puts+0x56>
 9ce:	8d 2f       	mov	r24, r29
 9d0:	9c 2f       	mov	r25, r28
 9d2:	df 91       	pop	r29
 9d4:	cf 91       	pop	r28
 9d6:	1f 91       	pop	r17
 9d8:	0f 91       	pop	r16
 9da:	08 95       	ret

000009dc <sprintf>:
 9dc:	ae e0       	ldi	r26, 0x0E	; 14
 9de:	b0 e0       	ldi	r27, 0x00	; 0
 9e0:	e4 ef       	ldi	r30, 0xF4	; 244
 9e2:	f4 e0       	ldi	r31, 0x04	; 4
 9e4:	0c 94 af 07 	jmp	0xf5e	; 0xf5e <__prologue_saves__+0x1c>
 9e8:	0d 89       	ldd	r16, Y+21	; 0x15
 9ea:	1e 89       	ldd	r17, Y+22	; 0x16
 9ec:	86 e0       	ldi	r24, 0x06	; 6
 9ee:	8c 83       	std	Y+4, r24	; 0x04
 9f0:	09 83       	std	Y+1, r16	; 0x01
 9f2:	1a 83       	std	Y+2, r17	; 0x02
 9f4:	8f ef       	ldi	r24, 0xFF	; 255
 9f6:	9f e7       	ldi	r25, 0x7F	; 127
 9f8:	8d 83       	std	Y+5, r24	; 0x05
 9fa:	9e 83       	std	Y+6, r25	; 0x06
 9fc:	ae 01       	movw	r20, r28
 9fe:	47 5e       	subi	r20, 0xE7	; 231
 a00:	5f 4f       	sbci	r21, 0xFF	; 255
 a02:	6f 89       	ldd	r22, Y+23	; 0x17
 a04:	78 8d       	ldd	r23, Y+24	; 0x18
 a06:	ce 01       	movw	r24, r28
 a08:	01 96       	adiw	r24, 0x01	; 1
 a0a:	0e 94 10 05 	call	0xa20	; 0xa20 <vfprintf>
 a0e:	ef 81       	ldd	r30, Y+7	; 0x07
 a10:	f8 85       	ldd	r31, Y+8	; 0x08
 a12:	e0 0f       	add	r30, r16
 a14:	f1 1f       	adc	r31, r17
 a16:	10 82       	st	Z, r1
 a18:	2e 96       	adiw	r28, 0x0e	; 14
 a1a:	e4 e0       	ldi	r30, 0x04	; 4
 a1c:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <__epilogue_restores__+0x1c>

00000a20 <vfprintf>:
 a20:	ab e0       	ldi	r26, 0x0B	; 11
 a22:	b0 e0       	ldi	r27, 0x00	; 0
 a24:	e6 e1       	ldi	r30, 0x16	; 22
 a26:	f5 e0       	ldi	r31, 0x05	; 5
 a28:	0c 94 a1 07 	jmp	0xf42	; 0xf42 <__prologue_saves__>
 a2c:	6c 01       	movw	r12, r24
 a2e:	7b 01       	movw	r14, r22
 a30:	8a 01       	movw	r16, r20
 a32:	fc 01       	movw	r30, r24
 a34:	16 82       	std	Z+6, r1	; 0x06
 a36:	17 82       	std	Z+7, r1	; 0x07
 a38:	83 81       	ldd	r24, Z+3	; 0x03
 a3a:	81 ff       	sbrs	r24, 1
 a3c:	cc c1       	rjmp	.+920    	; 0xdd6 <vfprintf+0x3b6>
 a3e:	ce 01       	movw	r24, r28
 a40:	01 96       	adiw	r24, 0x01	; 1
 a42:	3c 01       	movw	r6, r24
 a44:	f6 01       	movw	r30, r12
 a46:	93 81       	ldd	r25, Z+3	; 0x03
 a48:	f7 01       	movw	r30, r14
 a4a:	93 fd       	sbrc	r25, 3
 a4c:	85 91       	lpm	r24, Z+
 a4e:	93 ff       	sbrs	r25, 3
 a50:	81 91       	ld	r24, Z+
 a52:	7f 01       	movw	r14, r30
 a54:	88 23       	and	r24, r24
 a56:	09 f4       	brne	.+2      	; 0xa5a <vfprintf+0x3a>
 a58:	ba c1       	rjmp	.+884    	; 0xdce <vfprintf+0x3ae>
 a5a:	85 32       	cpi	r24, 0x25	; 37
 a5c:	39 f4       	brne	.+14     	; 0xa6c <vfprintf+0x4c>
 a5e:	93 fd       	sbrc	r25, 3
 a60:	85 91       	lpm	r24, Z+
 a62:	93 ff       	sbrs	r25, 3
 a64:	81 91       	ld	r24, Z+
 a66:	7f 01       	movw	r14, r30
 a68:	85 32       	cpi	r24, 0x25	; 37
 a6a:	29 f4       	brne	.+10     	; 0xa76 <vfprintf+0x56>
 a6c:	b6 01       	movw	r22, r12
 a6e:	90 e0       	ldi	r25, 0x00	; 0
 a70:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 a74:	e7 cf       	rjmp	.-50     	; 0xa44 <vfprintf+0x24>
 a76:	91 2c       	mov	r9, r1
 a78:	21 2c       	mov	r2, r1
 a7a:	31 2c       	mov	r3, r1
 a7c:	ff e1       	ldi	r31, 0x1F	; 31
 a7e:	f3 15       	cp	r31, r3
 a80:	d8 f0       	brcs	.+54     	; 0xab8 <vfprintf+0x98>
 a82:	8b 32       	cpi	r24, 0x2B	; 43
 a84:	79 f0       	breq	.+30     	; 0xaa4 <vfprintf+0x84>
 a86:	38 f4       	brcc	.+14     	; 0xa96 <vfprintf+0x76>
 a88:	80 32       	cpi	r24, 0x20	; 32
 a8a:	79 f0       	breq	.+30     	; 0xaaa <vfprintf+0x8a>
 a8c:	83 32       	cpi	r24, 0x23	; 35
 a8e:	a1 f4       	brne	.+40     	; 0xab8 <vfprintf+0x98>
 a90:	23 2d       	mov	r18, r3
 a92:	20 61       	ori	r18, 0x10	; 16
 a94:	1d c0       	rjmp	.+58     	; 0xad0 <vfprintf+0xb0>
 a96:	8d 32       	cpi	r24, 0x2D	; 45
 a98:	61 f0       	breq	.+24     	; 0xab2 <vfprintf+0x92>
 a9a:	80 33       	cpi	r24, 0x30	; 48
 a9c:	69 f4       	brne	.+26     	; 0xab8 <vfprintf+0x98>
 a9e:	23 2d       	mov	r18, r3
 aa0:	21 60       	ori	r18, 0x01	; 1
 aa2:	16 c0       	rjmp	.+44     	; 0xad0 <vfprintf+0xb0>
 aa4:	83 2d       	mov	r24, r3
 aa6:	82 60       	ori	r24, 0x02	; 2
 aa8:	38 2e       	mov	r3, r24
 aaa:	e3 2d       	mov	r30, r3
 aac:	e4 60       	ori	r30, 0x04	; 4
 aae:	3e 2e       	mov	r3, r30
 ab0:	2a c0       	rjmp	.+84     	; 0xb06 <vfprintf+0xe6>
 ab2:	f3 2d       	mov	r31, r3
 ab4:	f8 60       	ori	r31, 0x08	; 8
 ab6:	1d c0       	rjmp	.+58     	; 0xaf2 <vfprintf+0xd2>
 ab8:	37 fc       	sbrc	r3, 7
 aba:	2d c0       	rjmp	.+90     	; 0xb16 <vfprintf+0xf6>
 abc:	20 ed       	ldi	r18, 0xD0	; 208
 abe:	28 0f       	add	r18, r24
 ac0:	2a 30       	cpi	r18, 0x0A	; 10
 ac2:	40 f0       	brcs	.+16     	; 0xad4 <vfprintf+0xb4>
 ac4:	8e 32       	cpi	r24, 0x2E	; 46
 ac6:	b9 f4       	brne	.+46     	; 0xaf6 <vfprintf+0xd6>
 ac8:	36 fc       	sbrc	r3, 6
 aca:	81 c1       	rjmp	.+770    	; 0xdce <vfprintf+0x3ae>
 acc:	23 2d       	mov	r18, r3
 ace:	20 64       	ori	r18, 0x40	; 64
 ad0:	32 2e       	mov	r3, r18
 ad2:	19 c0       	rjmp	.+50     	; 0xb06 <vfprintf+0xe6>
 ad4:	36 fe       	sbrs	r3, 6
 ad6:	06 c0       	rjmp	.+12     	; 0xae4 <vfprintf+0xc4>
 ad8:	8a e0       	ldi	r24, 0x0A	; 10
 ada:	98 9e       	mul	r9, r24
 adc:	20 0d       	add	r18, r0
 ade:	11 24       	eor	r1, r1
 ae0:	92 2e       	mov	r9, r18
 ae2:	11 c0       	rjmp	.+34     	; 0xb06 <vfprintf+0xe6>
 ae4:	ea e0       	ldi	r30, 0x0A	; 10
 ae6:	2e 9e       	mul	r2, r30
 ae8:	20 0d       	add	r18, r0
 aea:	11 24       	eor	r1, r1
 aec:	22 2e       	mov	r2, r18
 aee:	f3 2d       	mov	r31, r3
 af0:	f0 62       	ori	r31, 0x20	; 32
 af2:	3f 2e       	mov	r3, r31
 af4:	08 c0       	rjmp	.+16     	; 0xb06 <vfprintf+0xe6>
 af6:	8c 36       	cpi	r24, 0x6C	; 108
 af8:	21 f4       	brne	.+8      	; 0xb02 <vfprintf+0xe2>
 afa:	83 2d       	mov	r24, r3
 afc:	80 68       	ori	r24, 0x80	; 128
 afe:	38 2e       	mov	r3, r24
 b00:	02 c0       	rjmp	.+4      	; 0xb06 <vfprintf+0xe6>
 b02:	88 36       	cpi	r24, 0x68	; 104
 b04:	41 f4       	brne	.+16     	; 0xb16 <vfprintf+0xf6>
 b06:	f7 01       	movw	r30, r14
 b08:	93 fd       	sbrc	r25, 3
 b0a:	85 91       	lpm	r24, Z+
 b0c:	93 ff       	sbrs	r25, 3
 b0e:	81 91       	ld	r24, Z+
 b10:	7f 01       	movw	r14, r30
 b12:	81 11       	cpse	r24, r1
 b14:	b3 cf       	rjmp	.-154    	; 0xa7c <vfprintf+0x5c>
 b16:	98 2f       	mov	r25, r24
 b18:	9f 7d       	andi	r25, 0xDF	; 223
 b1a:	95 54       	subi	r25, 0x45	; 69
 b1c:	93 30       	cpi	r25, 0x03	; 3
 b1e:	28 f4       	brcc	.+10     	; 0xb2a <vfprintf+0x10a>
 b20:	0c 5f       	subi	r16, 0xFC	; 252
 b22:	1f 4f       	sbci	r17, 0xFF	; 255
 b24:	9f e3       	ldi	r25, 0x3F	; 63
 b26:	99 83       	std	Y+1, r25	; 0x01
 b28:	0d c0       	rjmp	.+26     	; 0xb44 <vfprintf+0x124>
 b2a:	83 36       	cpi	r24, 0x63	; 99
 b2c:	31 f0       	breq	.+12     	; 0xb3a <vfprintf+0x11a>
 b2e:	83 37       	cpi	r24, 0x73	; 115
 b30:	71 f0       	breq	.+28     	; 0xb4e <vfprintf+0x12e>
 b32:	83 35       	cpi	r24, 0x53	; 83
 b34:	09 f0       	breq	.+2      	; 0xb38 <vfprintf+0x118>
 b36:	59 c0       	rjmp	.+178    	; 0xbea <vfprintf+0x1ca>
 b38:	21 c0       	rjmp	.+66     	; 0xb7c <vfprintf+0x15c>
 b3a:	f8 01       	movw	r30, r16
 b3c:	80 81       	ld	r24, Z
 b3e:	89 83       	std	Y+1, r24	; 0x01
 b40:	0e 5f       	subi	r16, 0xFE	; 254
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	88 24       	eor	r8, r8
 b46:	83 94       	inc	r8
 b48:	91 2c       	mov	r9, r1
 b4a:	53 01       	movw	r10, r6
 b4c:	13 c0       	rjmp	.+38     	; 0xb74 <vfprintf+0x154>
 b4e:	28 01       	movw	r4, r16
 b50:	f2 e0       	ldi	r31, 0x02	; 2
 b52:	4f 0e       	add	r4, r31
 b54:	51 1c       	adc	r5, r1
 b56:	f8 01       	movw	r30, r16
 b58:	a0 80       	ld	r10, Z
 b5a:	b1 80       	ldd	r11, Z+1	; 0x01
 b5c:	36 fe       	sbrs	r3, 6
 b5e:	03 c0       	rjmp	.+6      	; 0xb66 <vfprintf+0x146>
 b60:	69 2d       	mov	r22, r9
 b62:	70 e0       	ldi	r23, 0x00	; 0
 b64:	02 c0       	rjmp	.+4      	; 0xb6a <vfprintf+0x14a>
 b66:	6f ef       	ldi	r22, 0xFF	; 255
 b68:	7f ef       	ldi	r23, 0xFF	; 255
 b6a:	c5 01       	movw	r24, r10
 b6c:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <strnlen>
 b70:	4c 01       	movw	r8, r24
 b72:	82 01       	movw	r16, r4
 b74:	f3 2d       	mov	r31, r3
 b76:	ff 77       	andi	r31, 0x7F	; 127
 b78:	3f 2e       	mov	r3, r31
 b7a:	16 c0       	rjmp	.+44     	; 0xba8 <vfprintf+0x188>
 b7c:	28 01       	movw	r4, r16
 b7e:	22 e0       	ldi	r18, 0x02	; 2
 b80:	42 0e       	add	r4, r18
 b82:	51 1c       	adc	r5, r1
 b84:	f8 01       	movw	r30, r16
 b86:	a0 80       	ld	r10, Z
 b88:	b1 80       	ldd	r11, Z+1	; 0x01
 b8a:	36 fe       	sbrs	r3, 6
 b8c:	03 c0       	rjmp	.+6      	; 0xb94 <vfprintf+0x174>
 b8e:	69 2d       	mov	r22, r9
 b90:	70 e0       	ldi	r23, 0x00	; 0
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0x178>
 b94:	6f ef       	ldi	r22, 0xFF	; 255
 b96:	7f ef       	ldi	r23, 0xFF	; 255
 b98:	c5 01       	movw	r24, r10
 b9a:	0e 94 f1 06 	call	0xde2	; 0xde2 <strnlen_P>
 b9e:	4c 01       	movw	r8, r24
 ba0:	f3 2d       	mov	r31, r3
 ba2:	f0 68       	ori	r31, 0x80	; 128
 ba4:	3f 2e       	mov	r3, r31
 ba6:	82 01       	movw	r16, r4
 ba8:	33 fc       	sbrc	r3, 3
 baa:	1b c0       	rjmp	.+54     	; 0xbe2 <vfprintf+0x1c2>
 bac:	82 2d       	mov	r24, r2
 bae:	90 e0       	ldi	r25, 0x00	; 0
 bb0:	88 16       	cp	r8, r24
 bb2:	99 06       	cpc	r9, r25
 bb4:	b0 f4       	brcc	.+44     	; 0xbe2 <vfprintf+0x1c2>
 bb6:	b6 01       	movw	r22, r12
 bb8:	80 e2       	ldi	r24, 0x20	; 32
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 bc0:	2a 94       	dec	r2
 bc2:	f4 cf       	rjmp	.-24     	; 0xbac <vfprintf+0x18c>
 bc4:	f5 01       	movw	r30, r10
 bc6:	37 fc       	sbrc	r3, 7
 bc8:	85 91       	lpm	r24, Z+
 bca:	37 fe       	sbrs	r3, 7
 bcc:	81 91       	ld	r24, Z+
 bce:	5f 01       	movw	r10, r30
 bd0:	b6 01       	movw	r22, r12
 bd2:	90 e0       	ldi	r25, 0x00	; 0
 bd4:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 bd8:	21 10       	cpse	r2, r1
 bda:	2a 94       	dec	r2
 bdc:	21 e0       	ldi	r18, 0x01	; 1
 bde:	82 1a       	sub	r8, r18
 be0:	91 08       	sbc	r9, r1
 be2:	81 14       	cp	r8, r1
 be4:	91 04       	cpc	r9, r1
 be6:	71 f7       	brne	.-36     	; 0xbc4 <vfprintf+0x1a4>
 be8:	e8 c0       	rjmp	.+464    	; 0xdba <vfprintf+0x39a>
 bea:	84 36       	cpi	r24, 0x64	; 100
 bec:	11 f0       	breq	.+4      	; 0xbf2 <vfprintf+0x1d2>
 bee:	89 36       	cpi	r24, 0x69	; 105
 bf0:	41 f5       	brne	.+80     	; 0xc42 <vfprintf+0x222>
 bf2:	f8 01       	movw	r30, r16
 bf4:	37 fe       	sbrs	r3, 7
 bf6:	07 c0       	rjmp	.+14     	; 0xc06 <vfprintf+0x1e6>
 bf8:	60 81       	ld	r22, Z
 bfa:	71 81       	ldd	r23, Z+1	; 0x01
 bfc:	82 81       	ldd	r24, Z+2	; 0x02
 bfe:	93 81       	ldd	r25, Z+3	; 0x03
 c00:	0c 5f       	subi	r16, 0xFC	; 252
 c02:	1f 4f       	sbci	r17, 0xFF	; 255
 c04:	08 c0       	rjmp	.+16     	; 0xc16 <vfprintf+0x1f6>
 c06:	60 81       	ld	r22, Z
 c08:	71 81       	ldd	r23, Z+1	; 0x01
 c0a:	07 2e       	mov	r0, r23
 c0c:	00 0c       	add	r0, r0
 c0e:	88 0b       	sbc	r24, r24
 c10:	99 0b       	sbc	r25, r25
 c12:	0e 5f       	subi	r16, 0xFE	; 254
 c14:	1f 4f       	sbci	r17, 0xFF	; 255
 c16:	f3 2d       	mov	r31, r3
 c18:	ff 76       	andi	r31, 0x6F	; 111
 c1a:	3f 2e       	mov	r3, r31
 c1c:	97 ff       	sbrs	r25, 7
 c1e:	09 c0       	rjmp	.+18     	; 0xc32 <vfprintf+0x212>
 c20:	90 95       	com	r25
 c22:	80 95       	com	r24
 c24:	70 95       	com	r23
 c26:	61 95       	neg	r22
 c28:	7f 4f       	sbci	r23, 0xFF	; 255
 c2a:	8f 4f       	sbci	r24, 0xFF	; 255
 c2c:	9f 4f       	sbci	r25, 0xFF	; 255
 c2e:	f0 68       	ori	r31, 0x80	; 128
 c30:	3f 2e       	mov	r3, r31
 c32:	2a e0       	ldi	r18, 0x0A	; 10
 c34:	30 e0       	ldi	r19, 0x00	; 0
 c36:	a3 01       	movw	r20, r6
 c38:	0e 94 43 07 	call	0xe86	; 0xe86 <__ultoa_invert>
 c3c:	88 2e       	mov	r8, r24
 c3e:	86 18       	sub	r8, r6
 c40:	45 c0       	rjmp	.+138    	; 0xccc <vfprintf+0x2ac>
 c42:	85 37       	cpi	r24, 0x75	; 117
 c44:	31 f4       	brne	.+12     	; 0xc52 <vfprintf+0x232>
 c46:	23 2d       	mov	r18, r3
 c48:	2f 7e       	andi	r18, 0xEF	; 239
 c4a:	b2 2e       	mov	r11, r18
 c4c:	2a e0       	ldi	r18, 0x0A	; 10
 c4e:	30 e0       	ldi	r19, 0x00	; 0
 c50:	25 c0       	rjmp	.+74     	; 0xc9c <vfprintf+0x27c>
 c52:	93 2d       	mov	r25, r3
 c54:	99 7f       	andi	r25, 0xF9	; 249
 c56:	b9 2e       	mov	r11, r25
 c58:	8f 36       	cpi	r24, 0x6F	; 111
 c5a:	c1 f0       	breq	.+48     	; 0xc8c <vfprintf+0x26c>
 c5c:	18 f4       	brcc	.+6      	; 0xc64 <vfprintf+0x244>
 c5e:	88 35       	cpi	r24, 0x58	; 88
 c60:	79 f0       	breq	.+30     	; 0xc80 <vfprintf+0x260>
 c62:	b5 c0       	rjmp	.+362    	; 0xdce <vfprintf+0x3ae>
 c64:	80 37       	cpi	r24, 0x70	; 112
 c66:	19 f0       	breq	.+6      	; 0xc6e <vfprintf+0x24e>
 c68:	88 37       	cpi	r24, 0x78	; 120
 c6a:	21 f0       	breq	.+8      	; 0xc74 <vfprintf+0x254>
 c6c:	b0 c0       	rjmp	.+352    	; 0xdce <vfprintf+0x3ae>
 c6e:	e9 2f       	mov	r30, r25
 c70:	e0 61       	ori	r30, 0x10	; 16
 c72:	be 2e       	mov	r11, r30
 c74:	b4 fe       	sbrs	r11, 4
 c76:	0d c0       	rjmp	.+26     	; 0xc92 <vfprintf+0x272>
 c78:	fb 2d       	mov	r31, r11
 c7a:	f4 60       	ori	r31, 0x04	; 4
 c7c:	bf 2e       	mov	r11, r31
 c7e:	09 c0       	rjmp	.+18     	; 0xc92 <vfprintf+0x272>
 c80:	34 fe       	sbrs	r3, 4
 c82:	0a c0       	rjmp	.+20     	; 0xc98 <vfprintf+0x278>
 c84:	29 2f       	mov	r18, r25
 c86:	26 60       	ori	r18, 0x06	; 6
 c88:	b2 2e       	mov	r11, r18
 c8a:	06 c0       	rjmp	.+12     	; 0xc98 <vfprintf+0x278>
 c8c:	28 e0       	ldi	r18, 0x08	; 8
 c8e:	30 e0       	ldi	r19, 0x00	; 0
 c90:	05 c0       	rjmp	.+10     	; 0xc9c <vfprintf+0x27c>
 c92:	20 e1       	ldi	r18, 0x10	; 16
 c94:	30 e0       	ldi	r19, 0x00	; 0
 c96:	02 c0       	rjmp	.+4      	; 0xc9c <vfprintf+0x27c>
 c98:	20 e1       	ldi	r18, 0x10	; 16
 c9a:	32 e0       	ldi	r19, 0x02	; 2
 c9c:	f8 01       	movw	r30, r16
 c9e:	b7 fe       	sbrs	r11, 7
 ca0:	07 c0       	rjmp	.+14     	; 0xcb0 <vfprintf+0x290>
 ca2:	60 81       	ld	r22, Z
 ca4:	71 81       	ldd	r23, Z+1	; 0x01
 ca6:	82 81       	ldd	r24, Z+2	; 0x02
 ca8:	93 81       	ldd	r25, Z+3	; 0x03
 caa:	0c 5f       	subi	r16, 0xFC	; 252
 cac:	1f 4f       	sbci	r17, 0xFF	; 255
 cae:	06 c0       	rjmp	.+12     	; 0xcbc <vfprintf+0x29c>
 cb0:	60 81       	ld	r22, Z
 cb2:	71 81       	ldd	r23, Z+1	; 0x01
 cb4:	80 e0       	ldi	r24, 0x00	; 0
 cb6:	90 e0       	ldi	r25, 0x00	; 0
 cb8:	0e 5f       	subi	r16, 0xFE	; 254
 cba:	1f 4f       	sbci	r17, 0xFF	; 255
 cbc:	a3 01       	movw	r20, r6
 cbe:	0e 94 43 07 	call	0xe86	; 0xe86 <__ultoa_invert>
 cc2:	88 2e       	mov	r8, r24
 cc4:	86 18       	sub	r8, r6
 cc6:	fb 2d       	mov	r31, r11
 cc8:	ff 77       	andi	r31, 0x7F	; 127
 cca:	3f 2e       	mov	r3, r31
 ccc:	36 fe       	sbrs	r3, 6
 cce:	0d c0       	rjmp	.+26     	; 0xcea <vfprintf+0x2ca>
 cd0:	23 2d       	mov	r18, r3
 cd2:	2e 7f       	andi	r18, 0xFE	; 254
 cd4:	a2 2e       	mov	r10, r18
 cd6:	89 14       	cp	r8, r9
 cd8:	58 f4       	brcc	.+22     	; 0xcf0 <vfprintf+0x2d0>
 cda:	34 fe       	sbrs	r3, 4
 cdc:	0b c0       	rjmp	.+22     	; 0xcf4 <vfprintf+0x2d4>
 cde:	32 fc       	sbrc	r3, 2
 ce0:	09 c0       	rjmp	.+18     	; 0xcf4 <vfprintf+0x2d4>
 ce2:	83 2d       	mov	r24, r3
 ce4:	8e 7e       	andi	r24, 0xEE	; 238
 ce6:	a8 2e       	mov	r10, r24
 ce8:	05 c0       	rjmp	.+10     	; 0xcf4 <vfprintf+0x2d4>
 cea:	b8 2c       	mov	r11, r8
 cec:	a3 2c       	mov	r10, r3
 cee:	03 c0       	rjmp	.+6      	; 0xcf6 <vfprintf+0x2d6>
 cf0:	b8 2c       	mov	r11, r8
 cf2:	01 c0       	rjmp	.+2      	; 0xcf6 <vfprintf+0x2d6>
 cf4:	b9 2c       	mov	r11, r9
 cf6:	a4 fe       	sbrs	r10, 4
 cf8:	0f c0       	rjmp	.+30     	; 0xd18 <vfprintf+0x2f8>
 cfa:	fe 01       	movw	r30, r28
 cfc:	e8 0d       	add	r30, r8
 cfe:	f1 1d       	adc	r31, r1
 d00:	80 81       	ld	r24, Z
 d02:	80 33       	cpi	r24, 0x30	; 48
 d04:	21 f4       	brne	.+8      	; 0xd0e <vfprintf+0x2ee>
 d06:	9a 2d       	mov	r25, r10
 d08:	99 7e       	andi	r25, 0xE9	; 233
 d0a:	a9 2e       	mov	r10, r25
 d0c:	09 c0       	rjmp	.+18     	; 0xd20 <vfprintf+0x300>
 d0e:	a2 fe       	sbrs	r10, 2
 d10:	06 c0       	rjmp	.+12     	; 0xd1e <vfprintf+0x2fe>
 d12:	b3 94       	inc	r11
 d14:	b3 94       	inc	r11
 d16:	04 c0       	rjmp	.+8      	; 0xd20 <vfprintf+0x300>
 d18:	8a 2d       	mov	r24, r10
 d1a:	86 78       	andi	r24, 0x86	; 134
 d1c:	09 f0       	breq	.+2      	; 0xd20 <vfprintf+0x300>
 d1e:	b3 94       	inc	r11
 d20:	a3 fc       	sbrc	r10, 3
 d22:	11 c0       	rjmp	.+34     	; 0xd46 <vfprintf+0x326>
 d24:	a0 fe       	sbrs	r10, 0
 d26:	06 c0       	rjmp	.+12     	; 0xd34 <vfprintf+0x314>
 d28:	b2 14       	cp	r11, r2
 d2a:	88 f4       	brcc	.+34     	; 0xd4e <vfprintf+0x32e>
 d2c:	28 0c       	add	r2, r8
 d2e:	92 2c       	mov	r9, r2
 d30:	9b 18       	sub	r9, r11
 d32:	0e c0       	rjmp	.+28     	; 0xd50 <vfprintf+0x330>
 d34:	b2 14       	cp	r11, r2
 d36:	60 f4       	brcc	.+24     	; 0xd50 <vfprintf+0x330>
 d38:	b6 01       	movw	r22, r12
 d3a:	80 e2       	ldi	r24, 0x20	; 32
 d3c:	90 e0       	ldi	r25, 0x00	; 0
 d3e:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 d42:	b3 94       	inc	r11
 d44:	f7 cf       	rjmp	.-18     	; 0xd34 <vfprintf+0x314>
 d46:	b2 14       	cp	r11, r2
 d48:	18 f4       	brcc	.+6      	; 0xd50 <vfprintf+0x330>
 d4a:	2b 18       	sub	r2, r11
 d4c:	02 c0       	rjmp	.+4      	; 0xd52 <vfprintf+0x332>
 d4e:	98 2c       	mov	r9, r8
 d50:	21 2c       	mov	r2, r1
 d52:	a4 fe       	sbrs	r10, 4
 d54:	10 c0       	rjmp	.+32     	; 0xd76 <vfprintf+0x356>
 d56:	b6 01       	movw	r22, r12
 d58:	80 e3       	ldi	r24, 0x30	; 48
 d5a:	90 e0       	ldi	r25, 0x00	; 0
 d5c:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 d60:	a2 fe       	sbrs	r10, 2
 d62:	17 c0       	rjmp	.+46     	; 0xd92 <vfprintf+0x372>
 d64:	a1 fc       	sbrc	r10, 1
 d66:	03 c0       	rjmp	.+6      	; 0xd6e <vfprintf+0x34e>
 d68:	88 e7       	ldi	r24, 0x78	; 120
 d6a:	90 e0       	ldi	r25, 0x00	; 0
 d6c:	02 c0       	rjmp	.+4      	; 0xd72 <vfprintf+0x352>
 d6e:	88 e5       	ldi	r24, 0x58	; 88
 d70:	90 e0       	ldi	r25, 0x00	; 0
 d72:	b6 01       	movw	r22, r12
 d74:	0c c0       	rjmp	.+24     	; 0xd8e <vfprintf+0x36e>
 d76:	8a 2d       	mov	r24, r10
 d78:	86 78       	andi	r24, 0x86	; 134
 d7a:	59 f0       	breq	.+22     	; 0xd92 <vfprintf+0x372>
 d7c:	a1 fe       	sbrs	r10, 1
 d7e:	02 c0       	rjmp	.+4      	; 0xd84 <vfprintf+0x364>
 d80:	8b e2       	ldi	r24, 0x2B	; 43
 d82:	01 c0       	rjmp	.+2      	; 0xd86 <vfprintf+0x366>
 d84:	80 e2       	ldi	r24, 0x20	; 32
 d86:	a7 fc       	sbrc	r10, 7
 d88:	8d e2       	ldi	r24, 0x2D	; 45
 d8a:	b6 01       	movw	r22, r12
 d8c:	90 e0       	ldi	r25, 0x00	; 0
 d8e:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 d92:	89 14       	cp	r8, r9
 d94:	38 f4       	brcc	.+14     	; 0xda4 <vfprintf+0x384>
 d96:	b6 01       	movw	r22, r12
 d98:	80 e3       	ldi	r24, 0x30	; 48
 d9a:	90 e0       	ldi	r25, 0x00	; 0
 d9c:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 da0:	9a 94       	dec	r9
 da2:	f7 cf       	rjmp	.-18     	; 0xd92 <vfprintf+0x372>
 da4:	8a 94       	dec	r8
 da6:	f3 01       	movw	r30, r6
 da8:	e8 0d       	add	r30, r8
 daa:	f1 1d       	adc	r31, r1
 dac:	80 81       	ld	r24, Z
 dae:	b6 01       	movw	r22, r12
 db0:	90 e0       	ldi	r25, 0x00	; 0
 db2:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 db6:	81 10       	cpse	r8, r1
 db8:	f5 cf       	rjmp	.-22     	; 0xda4 <vfprintf+0x384>
 dba:	22 20       	and	r2, r2
 dbc:	09 f4       	brne	.+2      	; 0xdc0 <vfprintf+0x3a0>
 dbe:	42 ce       	rjmp	.-892    	; 0xa44 <vfprintf+0x24>
 dc0:	b6 01       	movw	r22, r12
 dc2:	80 e2       	ldi	r24, 0x20	; 32
 dc4:	90 e0       	ldi	r25, 0x00	; 0
 dc6:	0e 94 07 07 	call	0xe0e	; 0xe0e <fputc>
 dca:	2a 94       	dec	r2
 dcc:	f6 cf       	rjmp	.-20     	; 0xdba <vfprintf+0x39a>
 dce:	f6 01       	movw	r30, r12
 dd0:	86 81       	ldd	r24, Z+6	; 0x06
 dd2:	97 81       	ldd	r25, Z+7	; 0x07
 dd4:	02 c0       	rjmp	.+4      	; 0xdda <vfprintf+0x3ba>
 dd6:	8f ef       	ldi	r24, 0xFF	; 255
 dd8:	9f ef       	ldi	r25, 0xFF	; 255
 dda:	2b 96       	adiw	r28, 0x0b	; 11
 ddc:	e2 e1       	ldi	r30, 0x12	; 18
 dde:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__epilogue_restores__>

00000de2 <strnlen_P>:
 de2:	fc 01       	movw	r30, r24
 de4:	05 90       	lpm	r0, Z+
 de6:	61 50       	subi	r22, 0x01	; 1
 de8:	70 40       	sbci	r23, 0x00	; 0
 dea:	01 10       	cpse	r0, r1
 dec:	d8 f7       	brcc	.-10     	; 0xde4 <strnlen_P+0x2>
 dee:	80 95       	com	r24
 df0:	90 95       	com	r25
 df2:	8e 0f       	add	r24, r30
 df4:	9f 1f       	adc	r25, r31
 df6:	08 95       	ret

00000df8 <strnlen>:
 df8:	fc 01       	movw	r30, r24
 dfa:	61 50       	subi	r22, 0x01	; 1
 dfc:	70 40       	sbci	r23, 0x00	; 0
 dfe:	01 90       	ld	r0, Z+
 e00:	01 10       	cpse	r0, r1
 e02:	d8 f7       	brcc	.-10     	; 0xdfa <strnlen+0x2>
 e04:	80 95       	com	r24
 e06:	90 95       	com	r25
 e08:	8e 0f       	add	r24, r30
 e0a:	9f 1f       	adc	r25, r31
 e0c:	08 95       	ret

00000e0e <fputc>:
 e0e:	0f 93       	push	r16
 e10:	1f 93       	push	r17
 e12:	cf 93       	push	r28
 e14:	df 93       	push	r29
 e16:	fb 01       	movw	r30, r22
 e18:	23 81       	ldd	r18, Z+3	; 0x03
 e1a:	21 fd       	sbrc	r18, 1
 e1c:	03 c0       	rjmp	.+6      	; 0xe24 <fputc+0x16>
 e1e:	8f ef       	ldi	r24, 0xFF	; 255
 e20:	9f ef       	ldi	r25, 0xFF	; 255
 e22:	2c c0       	rjmp	.+88     	; 0xe7c <fputc+0x6e>
 e24:	22 ff       	sbrs	r18, 2
 e26:	16 c0       	rjmp	.+44     	; 0xe54 <fputc+0x46>
 e28:	46 81       	ldd	r20, Z+6	; 0x06
 e2a:	57 81       	ldd	r21, Z+7	; 0x07
 e2c:	24 81       	ldd	r18, Z+4	; 0x04
 e2e:	35 81       	ldd	r19, Z+5	; 0x05
 e30:	42 17       	cp	r20, r18
 e32:	53 07       	cpc	r21, r19
 e34:	44 f4       	brge	.+16     	; 0xe46 <fputc+0x38>
 e36:	a0 81       	ld	r26, Z
 e38:	b1 81       	ldd	r27, Z+1	; 0x01
 e3a:	9d 01       	movw	r18, r26
 e3c:	2f 5f       	subi	r18, 0xFF	; 255
 e3e:	3f 4f       	sbci	r19, 0xFF	; 255
 e40:	20 83       	st	Z, r18
 e42:	31 83       	std	Z+1, r19	; 0x01
 e44:	8c 93       	st	X, r24
 e46:	26 81       	ldd	r18, Z+6	; 0x06
 e48:	37 81       	ldd	r19, Z+7	; 0x07
 e4a:	2f 5f       	subi	r18, 0xFF	; 255
 e4c:	3f 4f       	sbci	r19, 0xFF	; 255
 e4e:	26 83       	std	Z+6, r18	; 0x06
 e50:	37 83       	std	Z+7, r19	; 0x07
 e52:	14 c0       	rjmp	.+40     	; 0xe7c <fputc+0x6e>
 e54:	8b 01       	movw	r16, r22
 e56:	ec 01       	movw	r28, r24
 e58:	fb 01       	movw	r30, r22
 e5a:	00 84       	ldd	r0, Z+8	; 0x08
 e5c:	f1 85       	ldd	r31, Z+9	; 0x09
 e5e:	e0 2d       	mov	r30, r0
 e60:	09 95       	icall
 e62:	89 2b       	or	r24, r25
 e64:	e1 f6       	brne	.-72     	; 0xe1e <fputc+0x10>
 e66:	d8 01       	movw	r26, r16
 e68:	16 96       	adiw	r26, 0x06	; 6
 e6a:	8d 91       	ld	r24, X+
 e6c:	9c 91       	ld	r25, X
 e6e:	17 97       	sbiw	r26, 0x07	; 7
 e70:	01 96       	adiw	r24, 0x01	; 1
 e72:	16 96       	adiw	r26, 0x06	; 6
 e74:	8d 93       	st	X+, r24
 e76:	9c 93       	st	X, r25
 e78:	17 97       	sbiw	r26, 0x07	; 7
 e7a:	ce 01       	movw	r24, r28
 e7c:	df 91       	pop	r29
 e7e:	cf 91       	pop	r28
 e80:	1f 91       	pop	r17
 e82:	0f 91       	pop	r16
 e84:	08 95       	ret

00000e86 <__ultoa_invert>:
 e86:	fa 01       	movw	r30, r20
 e88:	aa 27       	eor	r26, r26
 e8a:	28 30       	cpi	r18, 0x08	; 8
 e8c:	51 f1       	breq	.+84     	; 0xee2 <__ultoa_invert+0x5c>
 e8e:	20 31       	cpi	r18, 0x10	; 16
 e90:	81 f1       	breq	.+96     	; 0xef2 <__ultoa_invert+0x6c>
 e92:	e8 94       	clt
 e94:	6f 93       	push	r22
 e96:	6e 7f       	andi	r22, 0xFE	; 254
 e98:	6e 5f       	subi	r22, 0xFE	; 254
 e9a:	7f 4f       	sbci	r23, 0xFF	; 255
 e9c:	8f 4f       	sbci	r24, 0xFF	; 255
 e9e:	9f 4f       	sbci	r25, 0xFF	; 255
 ea0:	af 4f       	sbci	r26, 0xFF	; 255
 ea2:	b1 e0       	ldi	r27, 0x01	; 1
 ea4:	3e d0       	rcall	.+124    	; 0xf22 <__ultoa_invert+0x9c>
 ea6:	b4 e0       	ldi	r27, 0x04	; 4
 ea8:	3c d0       	rcall	.+120    	; 0xf22 <__ultoa_invert+0x9c>
 eaa:	67 0f       	add	r22, r23
 eac:	78 1f       	adc	r23, r24
 eae:	89 1f       	adc	r24, r25
 eb0:	9a 1f       	adc	r25, r26
 eb2:	a1 1d       	adc	r26, r1
 eb4:	68 0f       	add	r22, r24
 eb6:	79 1f       	adc	r23, r25
 eb8:	8a 1f       	adc	r24, r26
 eba:	91 1d       	adc	r25, r1
 ebc:	a1 1d       	adc	r26, r1
 ebe:	6a 0f       	add	r22, r26
 ec0:	71 1d       	adc	r23, r1
 ec2:	81 1d       	adc	r24, r1
 ec4:	91 1d       	adc	r25, r1
 ec6:	a1 1d       	adc	r26, r1
 ec8:	20 d0       	rcall	.+64     	; 0xf0a <__ultoa_invert+0x84>
 eca:	09 f4       	brne	.+2      	; 0xece <__ultoa_invert+0x48>
 ecc:	68 94       	set
 ece:	3f 91       	pop	r19
 ed0:	2a e0       	ldi	r18, 0x0A	; 10
 ed2:	26 9f       	mul	r18, r22
 ed4:	11 24       	eor	r1, r1
 ed6:	30 19       	sub	r19, r0
 ed8:	30 5d       	subi	r19, 0xD0	; 208
 eda:	31 93       	st	Z+, r19
 edc:	de f6       	brtc	.-74     	; 0xe94 <__ultoa_invert+0xe>
 ede:	cf 01       	movw	r24, r30
 ee0:	08 95       	ret
 ee2:	46 2f       	mov	r20, r22
 ee4:	47 70       	andi	r20, 0x07	; 7
 ee6:	40 5d       	subi	r20, 0xD0	; 208
 ee8:	41 93       	st	Z+, r20
 eea:	b3 e0       	ldi	r27, 0x03	; 3
 eec:	0f d0       	rcall	.+30     	; 0xf0c <__ultoa_invert+0x86>
 eee:	c9 f7       	brne	.-14     	; 0xee2 <__ultoa_invert+0x5c>
 ef0:	f6 cf       	rjmp	.-20     	; 0xede <__ultoa_invert+0x58>
 ef2:	46 2f       	mov	r20, r22
 ef4:	4f 70       	andi	r20, 0x0F	; 15
 ef6:	40 5d       	subi	r20, 0xD0	; 208
 ef8:	4a 33       	cpi	r20, 0x3A	; 58
 efa:	18 f0       	brcs	.+6      	; 0xf02 <__ultoa_invert+0x7c>
 efc:	49 5d       	subi	r20, 0xD9	; 217
 efe:	31 fd       	sbrc	r19, 1
 f00:	40 52       	subi	r20, 0x20	; 32
 f02:	41 93       	st	Z+, r20
 f04:	02 d0       	rcall	.+4      	; 0xf0a <__ultoa_invert+0x84>
 f06:	a9 f7       	brne	.-22     	; 0xef2 <__ultoa_invert+0x6c>
 f08:	ea cf       	rjmp	.-44     	; 0xede <__ultoa_invert+0x58>
 f0a:	b4 e0       	ldi	r27, 0x04	; 4
 f0c:	a6 95       	lsr	r26
 f0e:	97 95       	ror	r25
 f10:	87 95       	ror	r24
 f12:	77 95       	ror	r23
 f14:	67 95       	ror	r22
 f16:	ba 95       	dec	r27
 f18:	c9 f7       	brne	.-14     	; 0xf0c <__ultoa_invert+0x86>
 f1a:	00 97       	sbiw	r24, 0x00	; 0
 f1c:	61 05       	cpc	r22, r1
 f1e:	71 05       	cpc	r23, r1
 f20:	08 95       	ret
 f22:	9b 01       	movw	r18, r22
 f24:	ac 01       	movw	r20, r24
 f26:	0a 2e       	mov	r0, r26
 f28:	06 94       	lsr	r0
 f2a:	57 95       	ror	r21
 f2c:	47 95       	ror	r20
 f2e:	37 95       	ror	r19
 f30:	27 95       	ror	r18
 f32:	ba 95       	dec	r27
 f34:	c9 f7       	brne	.-14     	; 0xf28 <__ultoa_invert+0xa2>
 f36:	62 0f       	add	r22, r18
 f38:	73 1f       	adc	r23, r19
 f3a:	84 1f       	adc	r24, r20
 f3c:	95 1f       	adc	r25, r21
 f3e:	a0 1d       	adc	r26, r0
 f40:	08 95       	ret

00000f42 <__prologue_saves__>:
 f42:	2f 92       	push	r2
 f44:	3f 92       	push	r3
 f46:	4f 92       	push	r4
 f48:	5f 92       	push	r5
 f4a:	6f 92       	push	r6
 f4c:	7f 92       	push	r7
 f4e:	8f 92       	push	r8
 f50:	9f 92       	push	r9
 f52:	af 92       	push	r10
 f54:	bf 92       	push	r11
 f56:	cf 92       	push	r12
 f58:	df 92       	push	r13
 f5a:	ef 92       	push	r14
 f5c:	ff 92       	push	r15
 f5e:	0f 93       	push	r16
 f60:	1f 93       	push	r17
 f62:	cf 93       	push	r28
 f64:	df 93       	push	r29
 f66:	cd b7       	in	r28, 0x3d	; 61
 f68:	de b7       	in	r29, 0x3e	; 62
 f6a:	ca 1b       	sub	r28, r26
 f6c:	db 0b       	sbc	r29, r27
 f6e:	cd bf       	out	0x3d, r28	; 61
 f70:	de bf       	out	0x3e, r29	; 62
 f72:	09 94       	ijmp

00000f74 <__epilogue_restores__>:
 f74:	2a 88       	ldd	r2, Y+18	; 0x12
 f76:	39 88       	ldd	r3, Y+17	; 0x11
 f78:	48 88       	ldd	r4, Y+16	; 0x10
 f7a:	5f 84       	ldd	r5, Y+15	; 0x0f
 f7c:	6e 84       	ldd	r6, Y+14	; 0x0e
 f7e:	7d 84       	ldd	r7, Y+13	; 0x0d
 f80:	8c 84       	ldd	r8, Y+12	; 0x0c
 f82:	9b 84       	ldd	r9, Y+11	; 0x0b
 f84:	aa 84       	ldd	r10, Y+10	; 0x0a
 f86:	b9 84       	ldd	r11, Y+9	; 0x09
 f88:	c8 84       	ldd	r12, Y+8	; 0x08
 f8a:	df 80       	ldd	r13, Y+7	; 0x07
 f8c:	ee 80       	ldd	r14, Y+6	; 0x06
 f8e:	fd 80       	ldd	r15, Y+5	; 0x05
 f90:	0c 81       	ldd	r16, Y+4	; 0x04
 f92:	1b 81       	ldd	r17, Y+3	; 0x03
 f94:	aa 81       	ldd	r26, Y+2	; 0x02
 f96:	b9 81       	ldd	r27, Y+1	; 0x01
 f98:	ce 0f       	add	r28, r30
 f9a:	d1 1d       	adc	r29, r1
 f9c:	cd bf       	out	0x3d, r28	; 61
 f9e:	de bf       	out	0x3e, r29	; 62
 fa0:	ed 01       	movw	r28, r26
 fa2:	08 95       	ret

00000fa4 <_exit>:
 fa4:	f8 94       	cli

00000fa6 <__stop_program>:
 fa6:	ff cf       	rjmp	.-2      	; 0xfa6 <__stop_program>
